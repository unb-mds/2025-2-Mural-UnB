{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Mural UnB","text":""},{"location":"#sobre","title":"Sobre","text":"<p>O Mural UnB \u00e9 uma plataforma digital projetada para centralizar e recomendar oportunidades acad\u00eamicas e profissionais dentro da Universidade de Bras\u00edlia (UnB).</p> <p>O objetivo \u00e9 criar uma experi\u00eancia personalizada, onde os estudantes possam facilmente descobrir oportunidades alinhadas aos seus interesses e hist\u00f3rico acad\u00eamico. Ao analisar o perfil do usu\u00e1rio, a plataforma recomenda as op\u00e7\u00f5es mais relevantes e envia notifica\u00e7\u00f5es sobre novas vagas.</p> <p>Inclui oportunidades como:</p> <pre><code>Empresas juniores\nLaborat\u00f3rios de pesquisa\nInicia\u00e7\u00e3o cient\u00edfica (PIBICs)\n</code></pre> <p>Em resumo, o Mural UnB funciona como um mural virtual, que vai al\u00e9m de apenas listar oportunidades \u2014 ele ajuda os estudantes a se conectarem com as oportunidades certas, no momento certo.</p>"},{"location":"#equipe","title":"Equipe","text":"<sub>Tiago Bittencourt</sub> SM \u2022 ML &amp; Agent Developer <sub>Jo\u00e3o Gonzaga</sub> PO \u2022 Backend Developer <sub>Luan Ludry</sub> Frontend Developer <sub>Lucas Fujimoto</sub> Backend Developer <sub>Maria Canuto</sub> Frontend Developer <sub>Matheus Saraiva</sub> Backend Developer"},{"location":"#como-funciona","title":"Como Funciona","text":"<ol> <li>Cadastro do estudante \u2192 O usu\u00e1rio cria seu perfil acad\u00eamico.  </li> <li>An\u00e1lise de perfil \u2192 O sistema identifica interesses e habilidades relevantes.  </li> <li>Recomenda\u00e7\u00f5es personalizadas \u2192 O estudante recebe oportunidades alinhadas ao seu perfil.</li> </ol>"},{"location":"#motivacao","title":"Motiva\u00e7\u00e3o","text":"<p>A falta de um canal centralizado dificulta o acesso dos estudantes \u00e0s oportunidades dentro da UnB. Atualmente, informa\u00e7\u00f5es est\u00e3o dispersas em murais f\u00edsicos, e-mails institucionais e redes sociais, o que leva muitos alunos a perderem prazos importantes.  </p> <p>O Mural UnB surge como resposta a esse problema, oferecendo efici\u00eancia, transpar\u00eancia.</p>"},{"location":"#tecnologias-utilizadas","title":"Tecnologias Utilizadas","text":""},{"location":"#frontend","title":"Frontend","text":"<ul> <li>React</li> <li>Next Js</li> <li>TypeScript </li> <li>Tailwind CSS</li> </ul>"},{"location":"#backend","title":"Backend","text":"<ul> <li>Django </li> <li>Python </li> <li>SQLite </li> </ul>"},{"location":"#outros","title":"Outros","text":"<ul> <li>Git &amp; GitHub  </li> <li>Docker (para containeriza\u00e7\u00e3o)  </li> <li>GitHub Actions (para CI/CD)  </li> </ul>"},{"location":"arquitetura/","title":"Arquitetura Geral do Projeto - MuralUnB","text":""},{"location":"arquitetura/#1-visao-geral-da-arquitetura","title":"1. Vis\u00e3o Geral da Arquitetura","text":"<p>A arquitetura do projeto MuralUnB \u00e9 baseada em um modelo de componentes desacoplados, onde cada parte principal do sistema opera de forma independente, comunicando-se atrav\u00e9s de APIs. Essa abordagem facilita o desenvolvimento paralelo, a manuten\u00e7\u00e3o e a escalabilidade.</p> <p>O sistema \u00e9 composto por tr\u00eas grandes componentes:</p> <ol> <li>Frontend: A aplica\u00e7\u00e3o web com a qual o usu\u00e1rio interage diretamente. \u00c9 respons\u00e1vel por toda a camada de apresenta\u00e7\u00e3o e experi\u00eancia do usu\u00e1rio.</li> <li>Backend (API): O servidor central que orquestra a l\u00f3gica de neg\u00f3cio, gerencia a autentica\u00e7\u00e3o de usu\u00e1rios e a persist\u00eancia de dados no banco de dados.</li> <li>Servidor de IA (AI Server): Um microservi\u00e7o especializado, respons\u00e1vel por executar os algoritmos de recomenda\u00e7\u00e3o.</li> </ol> <p>O fluxo de comunica\u00e7\u00e3o principal \u00e9: o Frontend se comunica exclusivamente com o Backend. O Backend, por sua vez, se comunica com o Servidor de IA para obter as recomenda\u00e7\u00f5es personalizadas.</p>"},{"location":"arquitetura/#2-arquitetura-do-frontend","title":"2. Arquitetura do Frontend","text":"<p>O Frontend \u00e9 respons\u00e1vel por renderizar a interface do usu\u00e1rio e gerenciar o estado da aplica\u00e7\u00e3o no lado do cliente.</p>"},{"location":"arquitetura/#responsabilidades","title":"Responsabilidades:","text":"<ul> <li>Renderizar todas as telas e componentes visuais definidos no Figma.</li> <li>Gerenciar o estado da aplica\u00e7\u00e3o (ex: dados do usu\u00e1rio logado, posts do feed).</li> <li>Consumir a API do Backend para buscar e enviar dados.</li> <li>Lidar com a navega\u00e7\u00e3o entre as diferentes p\u00e1ginas do site.</li> </ul>"},{"location":"arquitetura/#tecnologias-utilizadas","title":"Tecnologias Utilizadas:","text":"<ul> <li>Framework: Next.js / React </li> <li>Linguagem: TypeScript.</li> <li>Estiliza\u00e7\u00e3o: TailwindCSS.</li> </ul>"},{"location":"arquitetura/#3-arquitetura-do-backend","title":"3. Arquitetura do Backend","text":"<p>O Backend \u00e9 uma API RESTful que serve como o cora\u00e7\u00e3o do sistema.</p>"},{"location":"arquitetura/#31-visao-geral-do-backend","title":"3.1. Vis\u00e3o Geral do Backend","text":"<p>Constru\u00eddo com Django e Django REST Framework, sua fun\u00e7\u00e3o \u00e9 expor endpoints seguros para o Frontend consumir, abstraindo toda a complexidade do banco de dados e da l\u00f3gica de neg\u00f3cio.</p>"},{"location":"arquitetura/#32-arquitetura-logica-diagrama-de-pacotes","title":"3.2. Arquitetura L\u00f3gica (Diagrama de Pacotes)","text":"<p>A estrutura do backend \u00e9 modular, organizada em \"apps\" Django, onde cada app tem uma responsabilidade \u00fanica.</p> <p></p> <ul> <li><code>autenticacao</code>: Gerencia todo o ciclo de vida do usu\u00e1rio (cadastro, login, perfil, etc.).</li> <li><code>oportunidades</code>: Gerencia as <code>Oportunidades</code>, <code>Labs</code> e <code>EJs</code>.</li> <li><code>interesses</code>: Gerencia as <code>Tags</code> e as prefer\u00eancias dos usu\u00e1rios.</li> <li><code>favoritos</code>: Implementa a l\u00f3gica de \"salvar para ver depois\".</li> </ul>"},{"location":"arquitetura/#33-arquitetura-de-dados-der","title":"3.3. Arquitetura de Dados (DER)","text":"<p>O Diagrama de Entidade e Relacionamento (DER) abaixo, definido pela equipe, serve como a planta baixa do nosso banco de dados.</p> <p></p> <p>As entidades principais (<code>User</code>, <code>Oportunidade</code>, <code>Lab</code>, <code>EJ</code>, etc.) e seus relacionamentos (1-N e N-N) foram modelados para refletir as necessidades do design do Figma. A <code>Oportunidade</code> serve como uma entidade base, com <code>Lab</code> e <code>EJ</code> sendo suas especializa\u00e7\u00f5es.</p>"},{"location":"arquitetura/#34-endpoints-da-api-contato-com-o-frontend","title":"3.4. Endpoints da API (Contato com o Frontend)","text":"<p>Estes s\u00e3o os principais endpoints que o backend oferece ao frontend, organizados por funcionalidade.</p>"},{"location":"arquitetura/#base-urls-exemplos","title":"Base URLs (Exemplos):","text":"<ul> <li>Autentica\u00e7\u00e3o e Usu\u00e1rios: <code>/autenticacao/</code></li> <li>Oportunidades, Labs e EJs: <code>/oportunidades/</code></li> <li>Interesses/Tags: <code>/interesses/</code></li> <li>Favoritos: <code>/favoritos/</code></li> <li>Inscri\u00e7\u00f5es: <code>/inscricoes/</code></li> <li>Recomenda\u00e7\u00f5es: <code>/recomendacoes/</code></li> </ul>"},{"location":"arquitetura/#detalhes-dos-endpoints","title":"Detalhes dos Endpoints:","text":"Categoria Funcionalidade M\u00e9todo HTTP Endpoint (URL) Autentica\u00e7\u00e3o Cadastro de Usu\u00e1rio <code>POST</code> <code>/autenticacao/cadastro/</code> Login de Usu\u00e1rio <code>POST</code> <code>/autenticacao/login/</code> Ver Perfil do Usu\u00e1rio <code>GET</code> <code>/autenticacao/perfil/</code> Atualizar Perfil do Usu\u00e1rio <code>PATCH</code> <code>/autenticacao/perfil/</code> Alterar Senha <code>POST</code> <code>/autenticacao/alterar-senha/</code> Solicitar Reset de Senha <code>POST</code> <code>/autenticacao/resetar-senha/solicitar/</code> Confirmar Reset de Senha <code>POST</code> <code>/autenticacao/resetar-senha/confirmar/</code> Oportunidades Listar Todas as Oportunidades <code>GET</code> <code>/oportunidades/</code> Criar Nova Oportunidade <code>POST</code> <code>/oportunidades/</code> Ver Detalhes de Oportunidade <code>GET</code> <code>/oportunidades/{id}/</code> Atualizar Oportunidade <code>PUT</code>/<code>PATCH</code> <code>/oportunidades/{id}/</code> Excluir Oportunidade <code>DELETE</code> <code>/oportunidades/{id}/</code> Labs/EJs Listar Labs (Espec\u00edficos) <code>GET</code> <code>/oportunidades/labs/</code> Listar EJs (Espec\u00edficas) <code>GET</code> <code>/oportunidades/ejs/</code> Interesses/Tags Listar Todas as Tags <code>GET</code> <code>/interesses/tags/</code> Adicionar Tags ao Usu\u00e1rio <code>POST</code> <code>/interesses/user-tags/</code> Favoritos Listar Oportunidades Favoritas <code>GET</code> <code>/favoritos/</code> Adicionar Oportunidade aos Favoritos <code>POST</code> <code>/favoritos/</code> Remover Oportunidade dos Favoritos <code>DELETE</code> <code>/favoritos/{oportunidade_id}/</code> Inscri\u00e7\u00f5es Inscrever-se em Oportunidade <code>POST</code> <code>/inscricoes/</code> Listar Minhas Inscri\u00e7\u00f5es <code>GET</code> <code>/inscricoes/minhas-inscricoes/</code> Recomenda\u00e7\u00f5es Obter Feed de Recomenda\u00e7\u00f5es <code>GET</code> <code>/recomendacoes/feed/</code>"},{"location":"arquitetura/#4-arquitetura-do-servidor-de-ia-ai-server","title":"4. Arquitetura do Servidor de IA (AI Server)","text":"<p>O Servidor de IA \u00e9 um microservi\u00e7o Python focado exclusivamente em processar e entregar recomenda\u00e7\u00f5es.</p>"},{"location":"arquitetura/#responsabilidades_1","title":"Responsabilidades:","text":"<ul> <li>Receber dados do usu\u00e1rio (prefer\u00eancias, hist\u00f3rico) e a lista de oportunidades dispon\u00edveis.</li> <li>Executar modelos de Machine Learning (ex: filtragem colaborativa, clustering) para gerar uma lista ordenada de posts recomendados.</li> <li>Expor um endpoint simples para que o Backend possa solicitar essas recomenda\u00e7\u00f5es.</li> </ul>"},{"location":"arquitetura/#tecnologias-utilizadas_1","title":"Tecnologias Utilizadas:","text":"<ul> <li>Linguagem: Python.</li> <li>Framework da API: Flask ou FastAPI (sugest\u00e3o, por serem leves).</li> <li>Bibliotecas de IA: Scikit-Learn, Pandas, NumPy.</li> </ul>"},{"location":"arquitetura/#comunicacao","title":"Comunica\u00e7\u00e3o:","text":"<p>O Backend Django far\u00e1 uma requisi\u00e7\u00e3o HTTP para o Servidor de IA (ex: <code>POST</code> para <code>/recommend</code>) enviando os dados necess\u00e1rios. O Servidor de IA processar\u00e1 e devolver\u00e1 uma lista de IDs de posts, que o Backend ent\u00e3o usar\u00e1 para buscar os dados completos no banco de dados e entregar ao Frontend.</p>"},{"location":"arquitetura/arquitetura-back/","title":"Arquitetura Backend","text":""},{"location":"arquitetura/arquitetura-back/#1-arquitetura-do-backend","title":"1. Arquitetura do Backend","text":"<p>O Backend \u00e9 uma API RESTful que serve como o cora\u00e7\u00e3o do sistema.</p>"},{"location":"arquitetura/arquitetura-back/#11-visao-geral-do-backend","title":"1.1. Vis\u00e3o Geral do Backend","text":"<p>Constru\u00eddo com Django e Django REST Framework, sua fun\u00e7\u00e3o \u00e9 expor endpoints seguros para o Frontend consumir, abstraindo toda a complexidade do banco de dados e da l\u00f3gica de neg\u00f3cio.</p>"},{"location":"arquitetura/arquitetura-back/#12-arquitetura-de-dados-der","title":"1.2. Arquitetura de Dados (DER)","text":"<p>O Diagrama de Entidade e Relacionamento (DER) abaixo, definido pela equipe, serve como a planta baixa do nosso banco de dados.</p> <p></p> <p>As entidades principais (<code>User</code>, <code>Oportunidade</code>, <code>Lab</code>, <code>EJ</code>, etc.) e seus relacionamentos (1-N e N-N) foram modelados para refletir as necessidades do design do Figma. A <code>Oportunidade</code> serve como uma entidade base, com <code>Lab</code> e <code>EJ</code> sendo suas especializa\u00e7\u00f5es.</p>"},{"location":"arquitetura/arquitetura-back/#13-arquitetura-logica-diagrama-de-pacotes","title":"1.3. Arquitetura L\u00f3gica (Diagrama de Pacotes)","text":"<p>A estrutura do backend \u00e9 modular, organizada em \"apps\" Django, onde cada app tem uma responsabilidade \u00fanica.</p> <p></p> <ul> <li><code>autenticacao</code>: Gerencia todo o ciclo de vida do usu\u00e1rio (cadastro, login, perfil, etc.).</li> <li><code>oportunidades</code>: Gerencia as <code>Oportunidades</code>, <code>Labs</code> e <code>EJs</code>.</li> <li><code>interesses</code>: Gerencia as <code>Tags</code> e as prefer\u00eancias dos usu\u00e1rios.</li> <li><code>favoritos</code>: Implementa a l\u00f3gica de \"salvar para ver depois\".</li> </ul>"},{"location":"arquitetura/arquitetura-back/#14-endpoints-da-api-contato-com-o-frontend","title":"1.4. Endpoints da API (Contato com o Frontend)","text":"<p>Estes s\u00e3o os principais endpoints que o backend oferece ao frontend, organizados por funcionalidade.</p>"},{"location":"arquitetura/arquitetura-back/#base-urls-exemplos","title":"Base URLs (Exemplos):","text":"<ul> <li>Autentica\u00e7\u00e3o e Usu\u00e1rios: <code>/autenticacao/</code></li> <li>Oportunidades, Labs e EJs: <code>/oportunidades/</code></li> <li>Interesses/Tags: <code>/interesses/</code></li> <li>Favoritos: <code>/favoritos/</code></li> <li>Inscri\u00e7\u00f5es: <code>/inscricoes/</code></li> <li>Recomenda\u00e7\u00f5es: <code>/recomendacoes/</code></li> </ul>"},{"location":"arquitetura/arquitetura-back/#detalhes-dos-endpoints","title":"Detalhes dos Endpoints:","text":"Categoria Funcionalidade M\u00e9todo HTTP Endpoint (URL) Autentica\u00e7\u00e3o Cadastro de Usu\u00e1rio <code>POST</code> <code>/autenticacao/cadastro/</code> Login de Usu\u00e1rio <code>POST</code> <code>/autenticacao/login/</code> Ver Perfil do Usu\u00e1rio <code>GET</code> <code>/autenticacao/perfil/</code> Atualizar Perfil do Usu\u00e1rio <code>PATCH</code> <code>/autenticacao/perfil/</code> Alterar Senha <code>POST</code> <code>/autenticacao/alterar-senha/</code> Solicitar Reset de Senha <code>POST</code> <code>/autenticacao/resetar-senha/solicitar/</code> Confirmar Reset de Senha <code>POST</code> <code>/autenticacao/resetar-senha/confirmar/</code> Oportunidades Listar Todas as Oportunidades <code>GET</code> <code>/oportunidades/</code> Criar Nova Oportunidade <code>POST</code> <code>/oportunidades/</code> Ver Detalhes de Oportunidade <code>GET</code> <code>/oportunidades/{id}/</code> Atualizar Oportunidade <code>PUT</code>/<code>PATCH</code> <code>/oportunidades/{id}/</code> Excluir Oportunidade <code>DELETE</code> <code>/oportunidades/{id}/</code> Labs/EJs Listar Labs (Espec\u00edficos) <code>GET</code> <code>/oportunidades/labs/</code> Listar EJs (Espec\u00edficas) <code>GET</code> <code>/oportunidades/ejs/</code> Interesses/Tags Listar Todas as Tags <code>GET</code> <code>/interesses/tags/</code> Adicionar Tags ao Usu\u00e1rio <code>POST</code> <code>/interesses/user-tags/</code> Favoritos Listar Oportunidades Favoritas <code>GET</code> <code>/favoritos/</code> Adicionar Oportunidade aos Favoritos <code>POST</code> <code>/favoritos/</code> Remover Oportunidade dos Favoritos <code>DELETE</code> <code>/favoritos/{oportunidade_id}/</code> Inscri\u00e7\u00f5es Inscrever-se em Oportunidade <code>POST</code> <code>/inscricoes/</code> Listar Minhas Inscri\u00e7\u00f5es <code>GET</code> <code>/inscricoes/minhas-inscricoes/</code> Recomenda\u00e7\u00f5es Obter Feed de Recomenda\u00e7\u00f5es <code>GET</code> <code>/recomendacoes/feed/</code>"},{"location":"arquitetura/arquitetura-front/","title":"Arquitetura Frontend","text":""},{"location":"arquitetura/arquitetura-front/#1-arquitetura-do-frontend","title":"1. Arquitetura do Frontend","text":"<p>O Frontend \u00e9 respons\u00e1vel por renderizar a interface do usu\u00e1rio e gerenciar o estado da aplica\u00e7\u00e3o no lado do cliente.</p>"},{"location":"arquitetura/arquitetura-front/#11-responsabilidades","title":"1.1 Responsabilidades:","text":"<ul> <li>Renderizar todas as telas e componentes visuais definidos no Figma.</li> <li>Gerenciar o estado da aplica\u00e7\u00e3o (ex: dados do usu\u00e1rio logado, posts do feed).</li> <li>Consumir a API do Backend para buscar e enviar dados.</li> <li>Lidar com a navega\u00e7\u00e3o entre as diferentes p\u00e1ginas do site.</li> </ul>"},{"location":"arquitetura/arquitetura-front/#12-tecnologias-utilizadas","title":"1.2 Tecnologias Utilizadas:","text":"<ul> <li>Framework: Next.js / React</li> <li>Linguagem: TypeScript.</li> <li>Estiliza\u00e7\u00e3o: TailwindCSS.</li> </ul>"},{"location":"arquitetura/arquitetura-front/#2-prototipo-de-alta-fidelidade","title":"2. Prot\u00f3tipo de Alta Fidelidade","text":"<p>Nosso pr\u00f3totipo de alta fidelidade (interativo) esta nesse FIGMA</p>"},{"location":"arquitetura/arquitetura-ia/","title":"M\u00f3dulo de Recomenda\u00e7\u00e3o por IA","text":""},{"location":"arquitetura/arquitetura-ia/#1-visao-geral","title":"1. Vis\u00e3o Geral","text":"<p>O M\u00f3dulo de Recomenda\u00e7\u00e3o por Intelig\u00eancia Artificial \u00e9 o componente central respons\u00e1vel por personalizar a experi\u00eancia do usu\u00e1rio na plataforma, indo al\u00e9m de simples buscas por palavras-chave.</p> <p>O objetivo principal \u00e9 entender o significado sem\u00e2ntico dos interesses de um usu\u00e1rio e das caracter\u00edsticas de uma oportunidade, para ent\u00e3o conectar os dois de forma inteligente. Em vez de apenas casar a tag \"IA\" com oportunidades que contenham a palavra \"IA\", o sistema \u00e9 capaz de inferir que um usu\u00e1rio interessado em <code>Intellig\u00eancia Artificial</code> tamb\u00e9m pode se interessar por oportunidades com as tags <code>Machine Learning</code>, <code>Ci\u00eancia de Dados</code> e <code>Processamento de Linguagem Natural</code>.</p> <p>Isso \u00e9 alcan\u00e7ado atrav\u00e9s do uso de Embeddings Vetoriais para representar tags, usu\u00e1rios e oportunidades em um espa\u00e7o matem\u00e1tico multidimensional.</p>"},{"location":"arquitetura/arquitetura-ia/#2-arquitetura-logica-e-componentes","title":"2. Arquitetura L\u00f3gica e Componentes","text":"<p>A arquitetura do m\u00f3dulo de IA \u00e9 composta por um conjunto de servi\u00e7os especializados que trabalham em conjunto.</p> <p>Diagrama de Alto N\u00edvel</p> <p>O diagrama abaixo ilustra a intera\u00e7\u00e3o entre os principais componentes do M\u00f3dulo de IA e o resto do sistema. Note que o M\u00f3dulo de IA n\u00e3o acessa o Banco de Dados Relacional; ele apenas retorna IDs para o Backend API.</p> <pre><code>graph TD\n    subgraph Sistema Principal\n        A[Backend API]\n        D[Banco de Dados Relacional]\n    end\n\n    subgraph M\u00f3dulo de IA\n        B[Servi\u00e7o de Recomenda\u00e7\u00e3o]\n        C[Banco de Dados Vetorial]\n        E[Servi\u00e7o de Gera\u00e7\u00e3o de Embeddings]\n    end\n\n    subgraph Terceiros\n        F[API da OpenAI]\n    end\n\n    A -- 1. Requisi\u00e7\u00e3o de Recomenda\u00e7\u00f5es --&gt; B\n    B -- 2. Busca por Similaridade --&gt; C\n    C -- 3. Retorna IDs Relevantes --&gt; B\n    B -- 4. Retorna lista de IDs para o Backend --&gt; A\n    A -- 5. Busca Detalhes dos IDs --&gt; D\n    D -- 6. Retorna Detalhes --&gt; A\n\n    A -- Cadastro de Oportunidade --&gt; E\n    E -- Gera Vetor --&gt; F\n    F -- Retorna Vetor --&gt; E\n    E -- Armazena Vetor --&gt; C</code></pre>"},{"location":"arquitetura/arquitetura-ia/#descricao-dos-componentes","title":"Descri\u00e7\u00e3o dos Componentes","text":""},{"location":"arquitetura/arquitetura-ia/#servico-de-geracao-de-embeddings","title":"Servi\u00e7o de Gera\u00e7\u00e3o de Embeddings","text":"<ul> <li>Responsabilidade: Interfacear com a API da OpenAI para converter textos (nossas tags) em vetores num\u00e9ricos (embeddings). Este servi\u00e7o \u00e9 usado tanto na indexa\u00e7\u00e3o de novas oportunidades quanto na cria\u00e7\u00e3o de perfis de usu\u00e1rio.</li> </ul>"},{"location":"arquitetura/arquitetura-ia/#banco-de-dados-vetorial-vector-db","title":"Banco de Dados Vetorial (Vector DB)","text":"<ul> <li>Responsabilidade: Armazenar os vetores de todas as oportunidades. \u00c9 altamente otimizado para realizar buscas de similaridade em alta velocidade, sendo o cora\u00e7\u00e3o da nossa l\u00f3gica de recomenda\u00e7\u00e3o.</li> </ul>"},{"location":"arquitetura/arquitetura-ia/#servico-de-recomendacao","title":"Servi\u00e7o de Recomenda\u00e7\u00e3o","text":"<ul> <li>Responsabilidade: Orquestrar o processo de recomenda\u00e7\u00e3o. Ele recebe o ID de um usu\u00e1rio, calcula (ou busca) seu vetor de interesses, consulta o Banco Vetorial para encontrar os IDs das oportunidades mais relevantes e retorna essa lista de IDs ordenada por relev\u00e2ncia para o servi\u00e7o que o chamou (o Backend API).</li> </ul>"},{"location":"arquitetura/arquitetura-ia/#3-fluxos-de-dados-principais","title":"3. Fluxos de Dados Principais","text":"<p>Existem dois fluxos cr\u00edticos para o funcionamento do sistema de IA.</p> <p>Fluxo 1: Indexa\u00e7\u00e3o de uma Nova Oportunidade</p> <p>Este fluxo ocorre quando um administrador cadastra uma nova oportunidade no sistema. (Este fluxo permanece inalterado).</p> <pre><code>sequenceDiagram\n    participant Admin\n    participant Backend API\n    participant Servi\u00e7o de Indexa\u00e7\u00e3o (IA)\n    participant Banco Vetorial\n\n    Admin-&gt;&gt;Backend API: Cadastra Oportunidade com Tags [IA, Software]\n    Backend API-&gt;&gt;Servi\u00e7o de Indexa\u00e7\u00e3o (IA): Solicita indexa\u00e7\u00e3o da Oportunidade #123\n    Servi\u00e7o de Indexa\u00e7\u00e3o (IA)-&gt;&gt;Servi\u00e7o de Indexa\u00e7\u00e3o (IA): Calcula vetor m\u00e9dio a partir das tags\n    Note right of Servi\u00e7o de Indexa\u00e7\u00e3o (IA): V_oport = avg(V_IA, V_Softare)\n    Servi\u00e7o de Indexa\u00e7\u00e3o (IA)-&gt;&gt;Banco Vetorial: Armazena (ID: #123, Vetor: V_oport)\n    Banco Vetorial--&gt;&gt;Servi\u00e7o de Indexa\u00e7\u00e3o (IA): Confirma\u00e7\u00e3o\n    Servi\u00e7o de Indexa\u00e7\u00e3o (IA)--&gt;&gt;Backend API: Oportunidade Indexada</code></pre> <p>Fluxo 2: Gera\u00e7\u00e3o de Recomenda\u00e7\u00f5es para um Usu\u00e1rio (Arquitetura Revisada)</p> <p>Este fluxo foi atualizado para refletir o desacoplamento. O Servi\u00e7o de IA apenas retorna os IDs, e o Backend API busca os dados completos.</p> <pre><code>sequenceDiagram\n    participant Usu\u00e1rio\n    participant Backend API\n    participant Servi\u00e7o de Recomenda\u00e7\u00e3o (IA)\n    participant Banco Vetorial\n    participant DB Relacional\n\n    Usu\u00e1rio-&gt;&gt;Backend API: GET /api/recommendations\n    Backend API-&gt;&gt;Servi\u00e7o de Recomenda\u00e7\u00e3o (IA): Solicita recomenda\u00e7\u00f5es para User #ABC\n\n    Note over Servi\u00e7o de Recomenda\u00e7\u00e3o (IA), Banco Vetorial: In\u00edcio da L\u00f3gica de IA\n    Servi\u00e7o de Recomenda\u00e7\u00e3o (IA)-&gt;&gt;Servi\u00e7o de Recomenda\u00e7\u00e3o (IA): Calcula/Busca vetor do User #ABC\n    Servi\u00e7o de Recomenda\u00e7\u00e3o (IA)-&gt;&gt;Banco Vetorial: Busca K vizinhos mais pr\u00f3ximos de V_user\n    Banco Vetorial--&gt;&gt;Servi\u00e7o de Recomenda\u00e7\u00e3o (IA): Retorna IDs e Scores [Op #123, Op #456]\n    Servi\u00e7o de Recomenda\u00e7\u00e3o (IA)--&gt;&gt;Backend API: Retorna JSON com IDs e Scores\n    Note over Servi\u00e7o de Recomenda\u00e7\u00e3o (IA), Banco Vetorial: Fim da L\u00f3gica de IA\n\n    Note over Backend API, DB Relacional: In\u00edcio do Enriquecimento de Dados\n    Backend API-&gt;&gt;DB Relacional: Busca detalhes das Oportunidades ONDE ID in [#123, #456]\n    DB Relacional--&gt;&gt;Backend API: Retorna detalhes completos\n    Backend API-&gt;&gt;Backend API: Compila a resposta final para o usu\u00e1rio\n    Backend API--&gt;&gt;Usu\u00e1rio: Retorna JSON com as recomenda\u00e7\u00f5es completas</code></pre>"},{"location":"arquitetura/arquitetura-ia/#4-modelo-de-ia-e-logica-de-embedding","title":"4. Modelo de IA e L\u00f3gica de Embedding","text":"<p>A escolha do modelo e a l\u00f3gica de agrega\u00e7\u00e3o s\u00e3o decis\u00f5es cr\u00edticas que impactam diretamente a qualidade das recomenda\u00e7\u00f5es.</p> Par\u00e2metro Valor Escolhido Justificativa Modelo de Embedding <code>text-embedding-3-small</code> (OpenAI) Excelente equil\u00edbrio entre custo, performance e alta qualidade sem\u00e2ntica para textos em portugu\u00eas. Banco Vetorial ChromaDB Solu\u00e7\u00e3o open-source robusta que suporta busca vetorial. M\u00e9trica de Dist\u00e2ncia Similaridade de Cosseno Padr\u00e3o da ind\u00fastria para medir a similaridade de orienta\u00e7\u00e3o entre vetores textuais, independentemente de sua magnitude."},{"location":"arquitetura/arquitetura-ia/#logica-de-agregacao-de-vetores","title":"L\u00f3gica de Agrega\u00e7\u00e3o de Vetores","text":"<p>Para criar um \u00fanico vetor que represente uma entidade com m\u00faltiplas tags (seja uma oportunidade ou um usu\u00e1rio), utilizamos a m\u00e9dia aritm\u00e9tica dos vetores de suas tags. A f\u00f3rmula \u00e9:</p> \\[\\vec{V}_{\\text{entidade}} = \\frac{1}{N} \\sum_{i=1}^{N} \\vec{V}_{\\text{tag}_i}\\] <p>Onde \\(N\\) \u00e9 o n\u00famero de tags associadas \u00e0 entidade. Este vetor resultante \u00e9 ent\u00e3o normalizado para ter um comprimento unit\u00e1rio antes de ser armazenado ou usado em buscas.</p>"},{"location":"arquitetura/arquitetura-ia/#5-contrato-da-api-de-recomendacao","title":"5. Contrato da API de Recomenda\u00e7\u00e3o","text":"<p>Com a nova arquitetura, temos dois contratos de API a considerar: a interna (entre Backend e IA) e a externa (entre Backend e Cliente).</p>"},{"location":"arquitetura/arquitetura-ia/#51-api-interna-backend-servico-de-ia","title":"5.1. API Interna (Backend -&gt; Servi\u00e7o de IA)","text":"<p>Endpoint no Servi\u00e7o de IA: <code>POST /recommend</code></p> <p>Request Body (Exemplo): <pre><code>{\n  \"user_vector\": [0.15, 0.75, 0.25, 0.4],\n  \"limit\": 10\n}\n</code></pre> Success Response (200 OK) - O que o Servi\u00e7o de IA retorna:</p> <pre><code>{\n  \"recommendations\": [\n    {\n      \"opportunity_id\": \"opp_cdef9012\",\n      \"score\": 0.9234\n    },\n    {\n      \"opportunity_id\": \"opp_abcd5678\",\n      \"score\": 0.8971\n    }\n  ]\n}\n</code></pre> <p>Note que o Backend API \u00e9 quem calcula ou busca o user_vector e o envia para o servi\u00e7o de IA.</p>"},{"location":"arquitetura/visao-geral/","title":"Arquitetura Geral do Projeto - MuralUnB","text":"<p>Ocorreram mudan\u00e7as dr\u00e1sticas na arquitura geral do projeto. Documenta\u00e7\u00e3o das mudan\u00e7as em desenvolvimento</p>"},{"location":"arquitetura/visao-geral/#1-visao-geral-da-arquitetura","title":"1. Vis\u00e3o Geral da Arquitetura","text":"<p>A arquitetura do projeto MuralUnB \u00e9 baseada em um modelo de componentes desacoplados, onde cada parte principal do sistema opera de forma independente, comunicando-se atrav\u00e9s de APIs. Essa abordagem facilita o desenvolvimento paralelo, a manuten\u00e7\u00e3o e a escalabilidade.</p> <p>O sistema \u00e9 composto por tr\u00eas grandes componentes:</p> <ol> <li>Frontend: A aplica\u00e7\u00e3o web com a qual o usu\u00e1rio interage diretamente. \u00c9 respons\u00e1vel por toda a camada de apresenta\u00e7\u00e3o e experi\u00eancia do usu\u00e1rio.</li> <li>Backend (API): O servidor central que orquestra a l\u00f3gica de neg\u00f3cio, gerencia a autentica\u00e7\u00e3o de usu\u00e1rios e a persist\u00eancia de dados no banco de dados.</li> <li>Servidor de IA (AI Server): Um microservi\u00e7o especializado, respons\u00e1vel por executar os algoritmos de recomenda\u00e7\u00e3o.</li> </ol> <p>O fluxo de comunica\u00e7\u00e3o principal \u00e9: o Frontend se comunica exclusivamente com o Backend. O Backend, por sua vez, se comunica com o Servidor de IA para obter as recomenda\u00e7\u00f5es personalizadas.</p>"},{"location":"arquitetura/visao-geral/#11-diagrama-de-containers","title":"1.1 Diagrama de Containers","text":""},{"location":"arquitetura/visao-geral/#12-diagrama-de-componentes","title":"1.2 Diagrama de Componentes","text":""},{"location":"arquitetura/visao-geral/#2-arquitetura-de-pastas","title":"2. Arquitetura de pastas","text":"<p>A arquitetura de pastas paras os 3 componentes do servidor est\u00e3o no nosso Figma (HUB) nesse FIGMA</p>"},{"location":"coelhos/","title":"\ud83d\udcda Documenta\u00e7\u00e3o do Projeto","text":"<p>Esta p\u00e1gina organiza os principais conte\u00fados do projeto em diferentes \u00e1reas, cobrindo desde arquitetura e requisitos at\u00e9 frontend, backend e machine learning. Cada pasta foi constru\u00edda por colaboradores diferentes, garantindo diversidade de abordagens e aprofundamento em cada tema.</p>"},{"location":"coelhos/#estrutura-geral","title":"\ud83d\udcc2 Estrutura Geral","text":""},{"location":"coelhos/#git-github","title":"\ud83c\udf10 Git-GitHub","text":"<p>\ud83d\udccc Documenta\u00e7\u00e3o criada por Matheus Saraiva (@apptrx) Inclui comandos essenciais para capacita\u00e7\u00e3o da equipe e padr\u00f5es de boas pr\u00e1ticas.</p>"},{"location":"coelhos/#github-pages","title":"\ud83c\udf0d GitHub Pages","text":"<p>\ud83d\udccc Contribu\u00eddo por Luan Ludry (@luanludry) Abrange conceitos importantes, passo a passo para deploy com Hugo e observa\u00e7\u00f5es relevantes para publica\u00e7\u00e3o de p\u00e1ginas.</p>"},{"location":"coelhos/#requisitos","title":"\ud83d\udcd1 Requisitos","text":"<p>\ud83d\udccc Contribu\u00eddo por Tiago Bittencourt (@TiagoSBittencourt) Inclui: Levantamento de Requisitos, Action Priority Matrix, MoSCoW, StoryMap, entre outras t\u00e9cnicas essenciais.</p>"},{"location":"coelhos/#arquitetura","title":"\ud83c\udfdb\ufe0f Arquitetura","text":"<p>\ud83d\udccc Contribu\u00eddo por Maria Clara (@MariaClara-Canuto) e Lucas Fujimoto (@Lucasft16) Este diret\u00f3rio re\u00fane diagramas e documenta\u00e7\u00e3o que descrevem a arquitetura do sistema e a tecnologia utilizada. Cada parte foi escrita por colaboradores diferentes, abordando desde diagramas UML at\u00e9 a defini\u00e7\u00e3o da stack tecnol\u00f3gica.</p>"},{"location":"coelhos/#backend","title":"\ud83d\udcbb Backend","text":"<p>\ud83d\udccc Contribu\u00eddo por Jo\u00e3o Gonzaga (@Karmantinedev), Lucas Fujimoto (@Lucasft16) e Matheus Saraiva (@apptrx) Este diret\u00f3rio re\u00fane conte\u00fados fundamentais para desenvolvimento backend com SQL/SQLite e Django, organizados em pastas tem\u00e1ticas. Cada se\u00e7\u00e3o foi escrita por colaboradores diferentes, trazendo guias pr\u00e1ticos e exemplos aplic\u00e1veis.</p>"},{"location":"coelhos/#frontend","title":"\ud83c\udfa8 Frontend","text":"<p>\ud83d\udccc Contribu\u00eddo por Luan Ludry (@luanludry) e Maria Clara (@MariaClara-Canuto) Este diret\u00f3rio re\u00fane conte\u00fados sobre o desenvolvimento frontend do projeto, abordando tanto o uso de React com Axios para consumo de APIs quanto o TypeScript para maior tipagem e seguran\u00e7a no c\u00f3digo.</p>"},{"location":"coelhos/#figma","title":"\ud83c\udfa8 Figma","text":"<p>\ud83d\udccc Contribu\u00eddo por Jo\u00e3o Gonzaga (@Karmantinedev) Fundamentos do Figma para Sistemas Escal\u00e1veis.</p>"},{"location":"coelhos/#frontend_1","title":"\ud83c\udfa8 Frontend","text":"<p>\ud83d\udccc Contribu\u00eddo por Luan Ludry (@luanludry) e Maria Clara (@MariaClara-Canuto) Este diret\u00f3rio re\u00fane conte\u00fados sobre o desenvolvimento frontend do projeto, abordando tanto o uso de React com Axios para consumo de APIs quanto o TypeScript para maior tipagem e seguran\u00e7a no c\u00f3digo.</p>"},{"location":"coelhos/#machine-learn","title":"\ud83e\udd16 Machine Learn","text":"<p>\ud83d\udccc Contribu\u00eddo por Tiago Bittencourt (@TiagoSBittencourt) - Scikit-Learn Inclui conceitos fundamentais como: Pr\u00e9-processamento, Classifica\u00e7\u00e3o, Regress\u00e3o, Clustering e Valida\u00e7\u00e3o de Modelos. </p> <p><sub>\ud83d\udcd6 Documenta\u00e7\u00e3o colaborativa desenvolvida por m\u00faltiplos contribuidores</sub></p>"},{"location":"coelhos/Arquitetura/","title":"\ud83c\udfdb\ufe0f Arquitetura","text":"<p>Este diret\u00f3rio re\u00fane diagramas e documenta\u00e7\u00e3o que descrevem a arquitetura do sistema e a tecnologia utilizada. Cada parte foi escrita por colaboradores diferentes, abordando desde diagramas UML at\u00e9 a defini\u00e7\u00e3o da stack tecnol\u00f3gica.</p>"},{"location":"coelhos/Arquitetura/#estrutura-da-documentacao","title":"\ud83d\udcc2 Estrutura da Documenta\u00e7\u00e3o","text":"<ul> <li> <p>Diagrama de Pacotes   Criado por Maria Clara (@MariaClara-Canuto)  </p> </li> <li> <p>Diagrama Fishbone   Criado por Maria Clara (@MariaClara-Canuto)  </p> </li> <li> <p>Diagrama Geral   Criado por Maria Clara (@MariaClara-Canuto)  </p> </li> <li> <p>Tech Stack   Criado por Lucas Fujimoto (@Lucasft16)  </p> </li> </ul> <p><sub>Documenta\u00e7\u00e3o colaborativa da pasta Arquitetura: Maria Clara (@MariaClara-Canuto) e Lucas Fujimoto (@Lucasft16)</sub></p>"},{"location":"coelhos/Arquitetura/Diagrama-Fishbone/","title":"\ud83d\udc1f Diagrama Espinha-de-Peixe (Ishikawa)","text":"<p>O Diagrama Espinha-de-Peixe, tamb\u00e9m chamado de Diagrama de Ishikawa, \u00e9 uma ferramenta visual usada para solu\u00e7\u00e3o de problemas e an\u00e1lise de causas. Ele \u00e9 estruturado como o esqueleto de um peixe: o problema \u00e9 posicionado na \"cabe\u00e7a\" do peixe e as potenciais causas derivam da cabe\u00e7a como \"espinhas\".</p> <p>Essas espinhas representam diversas categorias como processos, materiais, medidas, pessoas, m\u00e9todos, etc. Organizar as causas dessa forma ajuda na identifica\u00e7\u00e3o da raiz do problema discutido.</p> <p>A seguir, veja como o diagrama \u00e9 estruturado:</p> <p></p>"},{"location":"coelhos/Arquitetura/Diagrama-Fishbone/#elementos-do-diagrama","title":"ELEMENTOS DO DIAGRAMA","text":"<ul> <li>Cabe\u00e7a do Peixe: \u00c9 o problema definido a ser analisado.</li> <li>Espinha Principal: Define as principais categorias ou fatores que contribuem ao problema. As categorias comuns incluem:</li> <li>Pessoas</li> <li>Processos</li> <li>Ambiente</li> <li>Equipamento</li> <li>Materiais</li> <li>Espinhas Secund\u00e1rias: Derivam da espinha principal, representando fatores espec\u00edficos ou sub-causas de cada categoria principal.</li> <li>Categoriza\u00e7\u00e3o das causas: Estes s\u00e3o fatores ou causas de cada espinha secund\u00e1ria, definindo aspectos espec\u00edficos que contribuem para o problema.</li> </ul>"},{"location":"coelhos/Arquitetura/Diagrama-Fishbone/#como-montar-um-diagrama-espinha-de-peixe","title":"\ud83d\udd27 COMO MONTAR UM DIAGRAMA ESPINHA-DE-PEIXE","text":"<ol> <li>Defina o problema que precisa ser analisado.</li> <li>Determine as categorias que podem contribuir para o problema.</li> <li>Desenhe a espinha principal:</li> <li>Em um quadro branco ou papel, desenhe uma linha horizontal representando a espinha principal.</li> <li>Na ponta da espinha, desenhe a cabe\u00e7a do peixe e escreva o problema a ser discutido.</li> <li>Adicione as categorias:</li> <li>Desenhe linhas diagonais \u00e0 espinha principal e defina os nomes das categorias.</li> <li>Adicione sub-categorias:</li> <li>Se necess\u00e1rio, adicione sub-categorias derivando das categorias espec\u00edficas.</li> <li>Fa\u00e7a um brainstorming para identificar as causas das categorias e sub-categorias e escreva-as apropriadamente.</li> <li>Analise as causas:</li> <li>Defina a relev\u00e2ncia de cada causa e identifique as principais.</li> <li>Desenvolva e implemente solu\u00e7\u00f5es a partir da an\u00e1lise.</li> <li>Fa\u00e7a revis\u00f5es cont\u00ednuas e atualize o diagrama conforme novas informa\u00e7\u00f5es surgem ou conforme o processo de solu\u00e7\u00e3o se desenvolve.</li> </ol> <p>O Diagrama Espinha-de-Peixe \u00e9 uma excelente ferramenta para identificar e analisar as causas de problemas, permitindo que equipes colaborem de forma mais estruturada e eficiente.</p>"},{"location":"coelhos/Arquitetura/Diagrama-Geral/","title":"\ud83d\udcca Diagrama de Vis\u00e3o Geral da Intera\u00e7\u00e3o","text":"<p>Os Diagramas de Vis\u00e3o Geral da Intera\u00e7\u00e3o s\u00e3o um dos 14 tipos de diagramas da Linguagem Unificada de Modelagem (UML). Eles fornecem um alto n\u00edvel de abstra\u00e7\u00e3o para representar modelos de intera\u00e7\u00e3o em sistemas complexos.</p>"},{"location":"coelhos/Arquitetura/Diagrama-Geral/#finalidade","title":"\ud83c\udf10 Finalidade","text":"<p>Esses diagramas s\u00e3o utilizados para oferecer uma vis\u00e3o ampla e resumida da estrutura de um sistema, conectando diversas partes importantes, como:</p> <ul> <li>\u2705 Casos de uso  </li> <li>\ud83d\udd04 Atividades  </li> <li>\ud83e\uddf1 Classes  </li> <li>\ud83e\udde9 Componentes  </li> <li>\ud83d\udd01 Estados</li> </ul>"},{"location":"coelhos/Arquitetura/Diagrama-Geral/#elementos-do-diagrama","title":"\ud83e\udde9 Elementos do Diagrama","text":"<p>Os n\u00f3s representados nesses diagramas indicam intera\u00e7\u00f5es ou o uso de intera\u00e7\u00f5es. Al\u00e9m disso, eles fazem uso de elementos de nota\u00e7\u00e3o comuns nos diagramas de atividade e diagramas de sequ\u00eancia, como:</p> <ul> <li>\ud83d\udd35 N\u00f3 Inicial  </li> <li>\ud83d\udd34 N\u00f3 Final  </li> <li>\ud83d\udd00 Decis\u00e3o  </li> <li>\ud83d\udd01 Mesclagem  </li> <li>\u2797 Bifurca\u00e7\u00e3o (Fork)  </li> <li>\ud83d\udd17 Jun\u00e7\u00e3o (Join)</li> </ul> <p></p> <p>O exemplo acima mostra um aluno que foi aceito em uma universidade. Primeiro, o aluno deve aceitar ou recusar a admiss\u00e3o. Ap\u00f3s a aceita\u00e7\u00e3o, o aluno deve se registrar para as aulas e solicitar moradia. Ap\u00f3s a conclus\u00e3o de ambos, o aluno deve pagar \u00e0 secretaria. Se o pagamento n\u00e3o for recebido dentro do prazo, o aluno ser\u00e1 exclu\u00eddo pela secretaria.</p>"},{"location":"coelhos/Arquitetura/Diagrama-de-Pacotes/","title":"Diagrama de Pacotes UML","text":"<p>O Diagrama de Pacotes, definido pela linguagem UML, visa descrever como os elementos de um sistema est\u00e3o organizados, distribu\u00eddos em agrupamentos l\u00f3gicos chamados de pacotes, e demonstra as depend\u00eancias entre eles. Esse diagrama \u00e9 amplamente utilizado para separar os m\u00f3dulos, divis\u00f5es ou camadas da arquitetura de um projeto de software.</p>"},{"location":"coelhos/Arquitetura/Diagrama-de-Pacotes/#pacotes","title":"\ud83d\udce6 PACOTES","text":"<ul> <li>Agrupam um conjunto de elementos e permitem nomear esses grupos;</li> <li>Podem representar um sistema, um subsistema, uma biblioteca, um framework, uma camada de arquitetura, entre outras alternativas;</li> <li>Pacotes podem conter outros pacotes;</li> <li>Um conector de aninhamento \u00e9 usado quando os elementos n\u00e3o cabem dentro da representa\u00e7\u00e3o do pacote ou por quest\u00e3o gr\u00e1fica.</li> </ul> <p>Exemplo: </p> <p> Representa\u00e7\u00e3o de um pacote em UML</p>"},{"location":"coelhos/Arquitetura/Diagrama-de-Pacotes/#nomes-qualificados","title":"\ud83c\udff7\ufe0f NOMES QUALIFICADOS","text":"<ul> <li>Nomes qualificados s\u00e3o outra forma de demonstrar os elementos contidos em um pacote;</li> <li>Apresenta-se desta forma: \"Pacote Principal\"::\"Pacote Interno\"</li> </ul>"},{"location":"coelhos/Arquitetura/Diagrama-de-Pacotes/#dependencia","title":"\ud83d\udd17 DEPEND\u00caNCIA","text":"<ul> <li>Em diversos casos, pacotes cont\u00eam depend\u00eancias entre si;</li> <li>Ou seja, algum elemento dentro de um dos pacotes depende de algum elemento contido em outro pacote;</li> </ul> <p>Exemplo: </p> <p> O pacote 'Peixe' depende do pacote '\u00c1gua'</p>"},{"location":"coelhos/Arquitetura/Diagrama-de-Pacotes/#dependencia-com-importacao","title":"\ud83d\udce5 DEPEND\u00caNCIA COM IMPORTA\u00c7\u00c3O","text":"<ul> <li>\u00c9 poss\u00edvel que um pacote importe elementos de outro pacote;</li> <li>Isso pode ser feito usando relacionamentos de depend\u00eancia, utilizando os estere\u00f3tipos <code>\u226aaccess\u226b</code> e <code>\u226aimport\u226b</code>;</li> <li>Estere\u00f3tipos s\u00e3o uma maneira de atribuir caracter\u00edsticas novas a um elemento ou associa\u00e7\u00e3o;</li> <li>Existem os estere\u00f3tipos de texto, que n\u00e3o modificam o desenho padr\u00e3o, s\u00e3o apenas texto entre sinais de menor e maior, assim: <code>\u226acaracter\u00edstica\u226b</code> </li> <li>Tamb\u00e9m existem os estere\u00f3tipos gr\u00e1ficos, que n\u00e3o mudam o desenho padr\u00e3o do componente.</li> </ul>"},{"location":"coelhos/Arquitetura/Diagrama-de-Pacotes/#estereotipo-access","title":"\ud83d\udd11 ESTERE\u00d3TIPO <code>\u226aACCESS\u226b</code>","text":"<ul> <li>Usando o estere\u00f3tipo <code>\u226aaccess\u226b</code>, o elemento \u00e9 importado para o pacote, n\u00e3o possuindo visibilidade p\u00fablica;</li> <li>Ou seja, n\u00e3o \u00e9 vis\u00edvel como um elemento do pacote fora dele;</li> <li>O elemento importado n\u00e3o pode ser importado novamente por outros pacotes, a partir do pacote que o importou.</li> </ul> <p>Exemplo: </p> <p> O pacote 'FrontEnd' acessa o pacote 'BackEnd'</p>"},{"location":"coelhos/Arquitetura/Diagrama-de-Pacotes/#estereotipo-import","title":"\ud83d\udce4 ESTERE\u00d3TIPO <code>\u226aIMPORT\u226b</code>","text":"<ul> <li>Usando este estere\u00f3tipo, o elemento possui visibilidade p\u00fablica no pacote, podendo ser importado por outros pacotes.</li> </ul> <p>Exemplo: </p> <p> O pacote 'Java' importa o pacote 'Util.Vector'</p>"},{"location":"coelhos/Arquitetura/Diagrama-de-Pacotes/#dependencia-com-mesclagem","title":"\ud83d\udd04 DEPEND\u00caNCIA COM MESCLAGEM","text":"<ul> <li>\u00c9 poss\u00edvel mesclar os elementos de um pacote em outro, utilizando o estere\u00f3tipo <code>\u226amerge\u226b</code>;</li> <li>Ao utilizar o recurso, todos os elementos do pacote de origem ser\u00e3o inclu\u00eddos no pacote de destino.</li> </ul> <p>Exemplo: </p>"},{"location":"coelhos/Arquitetura/Diagrama-de-Pacotes/arquiteturaMuralUnB/Arquitetura/","title":"Diagrama de Pacotes da Arquitetura do MuralUnB","text":"<p>Este documento detalha a arquitetura de pacotes (apps Django) do projeto MuralUnB, utilizando a nota\u00e7\u00e3o UML para diagramas de pacotes.</p>"},{"location":"coelhos/Arquitetura/Diagrama-de-Pacotes/arquiteturaMuralUnB/Arquitetura/#1-visao-geral-da-aplicacao","title":"1. Vis\u00e3o Geral da Aplica\u00e7\u00e3o","text":"<p>A arquitetura de alto n\u00edvel do MuralUnB \u00e9 dividida em duas camadas principais: o Frontend (interface do usu\u00e1rio) e o Backend (l\u00f3gica de neg\u00f3cio e dados).</p> <p>Diagrama de Vis\u00e3o Geral:</p> <p> </p> <ul> <li>Frontend: Representa a interface do usu\u00e1rio que roda no navegador. \u00c9 respons\u00e1vel por exibir as informa\u00e7\u00f5es ao aluno, coletar suas intera\u00e7\u00f5es (login, filtros, salvos) e exibir o feed de not\u00edcias.</li> <li>Backend: Corresponde ao projeto Django. \u00c9 o servidor que hospeda a l\u00f3gica de neg\u00f3cio, gerencia os dados, as autentica\u00e7\u00f5es e o sistema de recomenda\u00e7\u00e3o.</li> </ul> <p>Rela\u00e7\u00e3o: * <code>Frontend</code> -- <code>\u226aaccess\u226b</code> --&gt; <code>Backend</code>: Indica que o <code>Frontend</code> faz uso dos servi\u00e7os expostos pelo <code>Backend</code> (via API RESTful, por exemplo) para acessar dados e funcionalidades. O <code>Frontend</code> depende do <code>Backend</code> para operar, mas n\u00e3o acessa diretamente seus componentes internos.</p>"},{"location":"coelhos/Arquitetura/Diagrama-de-Pacotes/arquiteturaMuralUnB/Arquitetura/#2-arquitetura-interna-do-backend-django-apps","title":"2. Arquitetura Interna do Backend (Django Apps)","text":"<p>O <code>Backend</code> \u00e9 modularizado em apps Django, cada um com responsabilidades espec\u00edficas. Esta separa\u00e7\u00e3o visa promover a coes\u00e3o e o baixo acoplamento, facilitando a manuten\u00e7\u00e3o e a evolu\u00e7\u00e3o do sistema.</p> <p>Diagrama de Pacotes do Backend:</p> <p></p>"},{"location":"coelhos/Arquitetura/Diagrama-de-Pacotes/arquiteturaMuralUnB/Arquitetura/#descricao-dos-pacotes","title":"Descri\u00e7\u00e3o dos Pacotes:","text":"<ul> <li> <p><code>Autenticacao_Usuarios</code>:</p> <ul> <li>Responsabilidade: Gerencia o ciclo de vida dos usu\u00e1rios: cadastro, login, logout, gerenciamento de perfil e armazenamento das prefer\u00eancias do aluno (ex: \"backend\", \"rob\u00f3tica\").</li> <li>Depend\u00eancias:<ul> <li><code>Banco_de_Dados</code>: Para persistir as informa\u00e7\u00f5es dos usu\u00e1rios e suas prefer\u00eancias.</li> </ul> </li> </ul> </li> <li> <p><code>Conteudo_Feed</code>:</p> <ul> <li>Responsabilidade: Respons\u00e1vel pela gest\u00e3o dos itens que comp\u00f5em o feed: not\u00edcias da UnB, projetos, vagas de PIBIC, posts de Empresas Juniores. Define a estrutura e o comportamento de um \"post\" gen\u00e9rico.</li> <li>Depend\u00eancias:<ul> <li><code>Banco_de_Dados</code>: Para persistir e recuperar os dados dos posts.</li> <li><code>Recomendacoes</code>: Para obter a ordem personalizada dos posts no feed.</li> <li><code>Filtros_Busca</code>: Para aplicar crit\u00e9rios de filtragem e busca nos posts.</li> </ul> </li> </ul> </li> <li> <p><code>Recomendacoes</code> (M\u00f3dulo de IA):</p> <ul> <li>Responsabilidade: O \"c\u00e9rebro\" do sistema de personaliza\u00e7\u00e3o. Cont\u00e9m a l\u00f3gica de Intelig\u00eancia Artificial/Machine Learning (utilizando conceitos como os estudados em Scikit-Learn) para analisar as prefer\u00eancias do usu\u00e1rio e o conte\u00fado dispon\u00edvel, gerando uma lista de posts ordenada por relev\u00e2ncia para cada usu\u00e1rio.</li> <li>Depend\u00eancias:<ul> <li><code>Autenticacao_Usuarios</code>: Para acessar as prefer\u00eancias e o hist\u00f3rico de intera\u00e7\u00f5es do usu\u00e1rio.</li> <li><code>Conteudo_Feed</code>: Para acessar o pool de posts dispon\u00edveis que podem ser recomendados.</li> </ul> </li> </ul> </li> <li> <p><code>Favoritos</code>:</p> <ul> <li>Responsabilidade: Gerencia a funcionalidade de \"salvar para ver depois\". Registra quais posts foram marcados como favoritos por cada usu\u00e1rio.</li> <li>Depend\u00eancias:<ul> <li><code>Autenticacao_Usuarios</code>: Para identificar qual usu\u00e1rio est\u00e1 salvando um item.</li> <li><code>Conteudo_Feed</code>: Para identificar qual post est\u00e1 sendo salvo.</li> </ul> </li> </ul> </li> <li> <p><code>Filtros_Busca</code>:</p> <ul> <li>Responsabilidade: Implementa a l\u00f3gica para a barra de pesquisa e os filtros tem\u00e1ticos que o usu\u00e1rio pode aplicar ao feed.</li> <li>Depend\u00eancias:<ul> <li><code>Conteudo_Feed</code>: Para realizar a filtragem e busca sobre os dados de posts.</li> <li><code>Banco_de_Dados</code>: Para executar as consultas necess\u00e1rias.</li> </ul> </li> </ul> </li> <li> <p><code>Banco_de_Dados</code> (Camada de Persist\u00eancia):</p> <ul> <li>Responsabilidade: Representa a camada de persist\u00eancia de dados. No contexto Django, isso engloba os <code>models.py</code> de todos os apps e a intera\u00e7\u00e3o com o SGBD subjacente.</li> <li>Depend\u00eancias: \u00c9 um pacote fundamental; quase todos os outros pacotes do <code>Backend</code> dependem dele para armazenar e recuperar dados.</li> </ul> </li> </ul>"},{"location":"coelhos/Arquitetura/Diagrama-de-Pacotes/arquiteturaMuralUnB/Arquitetura/#3-por-que-apenas-relacoes-de-dependencia-no-backend","title":"3. Por Que Apenas Rela\u00e7\u00f5es de Depend\u00eancia no Backend?","text":"<p>A decis\u00e3o de usar primariamente rela\u00e7\u00f5es de depend\u00eancia (linha tracejada com seta) entre os pacotes do <code>Backend</code> reflete as melhores pr\u00e1ticas de modulariza\u00e7\u00e3o em sistemas como o Django:</p> <ul> <li>Coer\u00eancia com UML: Em diagramas de pacotes, a depend\u00eancia \u00e9 o estere\u00f3tipo mais comum e gen\u00e9rico para indicar que as mudan\u00e7as em um pacote podem afetar outro.</li> <li>Modularidade e Baixo Acoplamento: Cada app Django (pacote) deve ter uma responsabilidade bem definida. Quando um app precisa de algo de outro (ex: <code>Recomendacoes</code> precisa saber o <code>User</code> de <code>Autenticacao_Usuarios</code>), ele \"depende\" desse outro. Isso evita que os apps se tornem excessivamente interligados, permitindo que altera\u00e7\u00f5es em um app tenham impacto limitado nos outros.</li> <li>Evitando Outros Estere\u00f3tipos:<ul> <li><code>\u226aaccess\u226b</code>: J\u00e1 usado para a rela\u00e7\u00e3o <code>Frontend</code> - <code>Backend</code> para indicar o consumo de uma interface p\u00fablica. Dentro do <code>Backend</code>, a granularidade de acesso \u00e9 melhor representada pela depend\u00eancia gen\u00e9rica quando se fala de apps.</li> <li><code>\u226aimport\u226b</code>: Embora <code>import</code> seja o que acontece no c\u00f3digo Python, <code>depend\u00eancia</code> \u00e9 o termo UML mais abrangente que engloba essa importa\u00e7\u00e3o. Poder\u00edamos usar <code>\u226aimport\u226b</code> se quis\u00e9ssemos ser extremamente literais sobre cada <code>import</code> statement, mas a depend\u00eancia j\u00e1 transmite a mesma ideia no n\u00edvel de pacotes.</li> <li><code>\u226amerge\u226b</code>: N\u00e3o \u00e9 adequado, pois n\u00e3o estamos \"fundindo\" o c\u00f3digo de um app no outro; eles s\u00e3o mantidos separados e interagem atrav\u00e9s de depend\u00eancias bem definidas.</li> </ul> </li> </ul> <p>Esta documenta\u00e7\u00e3o serve como um guia essencial para o desenvolvimento, garantindo que a arquitetura planejada seja compreendida e mantida durante a evolu\u00e7\u00e3o do projeto.</p>"},{"location":"coelhos/Arquitetura/Tech-Stack/","title":"\ud83d\udee0\ufe0f Tech Stack","text":"<p>\u00c9 um conjunto de tecnologias utilizadas para desenvolver uma aplica\u00e7\u00e3o, incluindo linguagens de programa\u00e7\u00f5es, frameworks, databases, ferramentas do front-end e back-end, e APIs.</p>"},{"location":"coelhos/Arquitetura/Tech-Stack/#principais-componentes-da-tech-stack","title":"Principais componentes da Tech Stack","text":"<ul> <li> <p>Servidores e balanceamento de carga: permitem que a aplica\u00e7\u00e3o rode sem travar, distribuindo tr\u00e1fego e garantindo escalabilidade Exemplos: AWS, Google Cloud, Nginx, Cloudflare</p> </li> <li> <p>Armazenamento e consulta de dados: bancos de dados e pipelines que guardam informa\u00e7\u00f5es e possibilitam an\u00e1lises para melhorar o produto Exemplos: MySQL, MongoDB, PostgreSQL, Snowflake</p> </li> <li> <p>Frameworks de backend: oferecem estrutura para lidar com banco de dados, autentica\u00e7\u00e3o e comunica\u00e7\u00e3o interna da aplica\u00e7\u00e3o Exemplos: Django, Laravel, Ruby on Rails, Spring</p> </li> <li> <p>Frameworks de frontend: focados na interface e experi\u00eancia do usu\u00e1rio Exemplos: React, Bootstrap, jQuery</p> </li> <li> <p>Servi\u00e7os de API: conectam diferentes sistemas e gerenciam o tr\u00e1fego de informa\u00e7\u00f5es Exemplos: Zapier, Google Apigee, Mulesoft</p> </li> <li> <p>Ferramentas de monitoramento e performance: acompanham a sa\u00fade dos servidores, bancos e servi\u00e7os para identificar problemas rapidamente Exemplos: Datadog, New Relic</p> </li> <li> <p>Solu\u00e7\u00f5es de business intelligence (BI): integram dados de v\u00e1rias \u00e1reas da empresa e ajudam na tomada de decis\u00f5es estrat\u00e9gicas com relat\u00f3rios e visualiza\u00e7\u00f5es Exemplos: Power BI, Tableau, Qlik</p> </li> </ul>"},{"location":"coelhos/Arquitetura/Tech-Stack/#apis","title":"\ud83d\udcda APIs","text":"<p>API \u00e9 um acr\u00f4nimo em ingl\u00eas para Application Programming Interface. Em portugu\u00eas, significa Interface de Programa\u00e7\u00e3o de Aplica\u00e7\u00f5es.</p> <p>De forma geral, \u00e9 um conjunto de padr\u00f5es, ferramentas e protocolos que permite a cria\u00e7\u00e3o mais simplificada e segura de plataformas, pois possibilita a integra\u00e7\u00e3o e a comunica\u00e7\u00e3o de softwares e seus componentes.</p> <p>As APIs desempenham um papel de conectividade e intera\u00e7\u00e3o entre diferentes sistemas e aplica\u00e7\u00f5es.</p>"},{"location":"coelhos/Arquitetura/Tech-Stack/#para-que-serve-e-como-funciona","title":"Para que serve e como funciona?","text":"<ul> <li>Criar plataformas com maior seguran\u00e7a e simplicidade, permitindo que diferentes componentes se conectem sem depender dos detalhes internos uns dos outros.</li> <li>No caso das APIs Web, o processo funciona assim:</li> <li>O servidor aguarda por requisi\u00e7\u00f5es.</li> <li>O cliente envia uma requisi\u00e7\u00e3o HTTP para o endpoint adequado no servidor (por exemplo, <code>GET /tasks</code> ou <code>POST /tasks</code>).</li> <li>O servidor processa a requisi\u00e7\u00e3o, realiza as opera\u00e7\u00f5es necess\u00e1rias (obter ou adicionar tarefas) e retorna uma resposta ao cliente, geralmente em formato JSON.</li> <li>O cliente recebe a resposta e pode ent\u00e3o processar os dados conforme necess\u00e1rio.</li> </ul>"},{"location":"coelhos/Arquitetura/Tech-Stack/#agentes-de-ia","title":"\ud83e\udd16 Agentes de IA","text":"<p>Um agente de IA \u00e9 um sistema capaz de desempenhar tarefas de forma aut\u00f4noma em nome de um usu\u00e1rio ou de outro sistema, planejando seu pr\u00f3prio fluxo de trabalho e utilizando ferramentas dispon\u00edveis. Esses agentes v\u00e3o al\u00e9m de simples assistentes: eles percebem o ambiente, tomam decis\u00f5es, agem e aprendem com o tempo.</p>"},{"location":"coelhos/Arquitetura/Tech-Stack/#beneficios-de-implementar-agentes-de-ia","title":"Benef\u00edcios de implementar agentes de IA","text":"<ol> <li> <p>Automa\u00e7\u00e3o de tarefas complexas    Agentes de IA podem lidar com atividades que normalmente exigiriam interven\u00e7\u00e3o humana, alcan\u00e7ando resultados com mais rapidez, em escala e a menor custo.</p> </li> <li> <p>Opera\u00e7\u00e3o aut\u00f4noma e escal\u00e1vel    S\u00e3o capazes de executar tarefas sem interven\u00e7\u00e3o humana direta e ajustar sua atua\u00e7\u00e3o conforme necess\u00e1rio, operando de forma independente e em larga escala.</p> </li> <li> <p>Integra\u00e7\u00e3o e colabora\u00e7\u00e3o aprimoradas    Agentes podem se comunicar e colaborar, formando equipes cooperativas que distribuem tarefas complexas de maneira eficiente.</p> </li> </ol>"},{"location":"coelhos/Arquitetura/Tech-Stack/#links","title":"\ud83d\udd17 Links","text":"<ul> <li>Heap.io \u2013 What is a Tech Stack</li> <li>Alura \u2013 O que \u00e9 API</li> <li>IBM \u2013 AI Agents</li> </ul>"},{"location":"coelhos/Backend/","title":"\ud83d\udcbb Backend","text":"<p>Este diret\u00f3rio re\u00fane conte\u00fados fundamentais para desenvolvimento backend com SQL/SQLite e Django, organizados em pastas tem\u00e1ticas. Cada se\u00e7\u00e3o foi escrita por colaboradores diferentes, trazendo guias pr\u00e1ticos e exemplos aplic\u00e1veis.</p>"},{"location":"coelhos/Backend/#estrutura-da-documentacao","title":"\ud83d\udcc2 Estrutura da Documenta\u00e7\u00e3o","text":"<ul> <li>SQL-SQLite   Conte\u00fado criado por Jo\u00e3o Gonzaga (@Karmantinedev)  </li> <li>Defini\u00e7\u00e3o de Esquema (SQLite)  </li> <li>Fundamentos de SQL  </li> <li>Manipula\u00e7\u00e3o de Dados em SQL  </li> <li>SQL com Python  </li> <li> <p>SQLite Espec\u00edfico  </p> </li> <li> <p>Django   Conte\u00fado criado por Lucas Fujimoto (@Lucasft16) e Matheus Saraiva** (@apptrx) </p> </li> <li>Estrutura MTV  </li> <li>Models e ORM  </li> <li>Views e URLs  </li> <li>Templates e Renderiza\u00e7\u00e3o  </li> <li>Django Admin  </li> <li>Autentica\u00e7\u00e3o e Autoriza\u00e7\u00e3o  </li> <li>Django REST Framework  </li> <li>Deploy de Aplica\u00e7\u00f5es  </li> </ul> <p><sub>Documenta\u00e7\u00e3o colaborativa da pasta Backend: Jo\u00e3o Gonzaga (@Karmantinedev), Lucas Fujimoto (@Lucasft16) e Matheus Saraiva (@apptrx)</sub></p>"},{"location":"coelhos/Backend/Django/","title":"Estrutura de um projeto Django (MTV)","text":"<p>No Django, o padr\u00e3o cl\u00e1ssico MVC (Model\u2013View\u2013Controller) \u00e9 interpretado de forma diferente, resultando no padr\u00e3o MTV (Model\u2013Template\u2013View). O \u201ccontroller\u201d do MVC, no Django, \u00e9 o pr\u00f3prio framework, que recebe a requisi\u00e7\u00e3o e a direciona para a view correta com base nas configura\u00e7\u00f5es de URL.</p>"},{"location":"coelhos/Backend/Django/#configuracao-inicial-e-boas-praticas-de-organizacao","title":"Configura\u00e7\u00e3o inicial e boas pr\u00e1ticas de organiza\u00e7\u00e3o","text":""},{"location":"coelhos/Backend/Django/#criar-ambiente-virtual","title":"Criar ambiente virtual","text":"<pre><code>python3 -m venv .venv\n</code></pre>"},{"location":"coelhos/Backend/Django/#ativar-ambiente-virtual","title":"Ativar ambiente virtual","text":""},{"location":"coelhos/Backend/Django/#linuxmac","title":"Linux/Mac","text":"<pre><code>source .venv/bin/activate\n# Windows\n.venv\\Scripts\\activate\n</code></pre>"},{"location":"coelhos/Backend/Django/#instalar-django-dentro-do-ambiente","title":"Instalar Django dentro do ambiente","text":"<pre><code>python3 -m pip install Django\n</code></pre>"},{"location":"coelhos/Backend/Django/#verificar-versao-instalada","title":"Verificar vers\u00e3o instalada","text":"<pre><code>python3 -m django --version\n</code></pre>"},{"location":"coelhos/Backend/Django/#criacao-de-app","title":"Cria\u00e7\u00e3o de app","text":"<pre><code>python manage.py startapp nome_app\n</code></pre>"},{"location":"coelhos/Backend/Django/#boas-praticas","title":"Boas pr\u00e1ticas","text":""},{"location":"coelhos/Backend/Django/#1-usar-env-para-credenciais-e-configs-sensiveis","title":"1. Usar .env para credenciais e configs sens\u00edveis","text":""},{"location":"coelhos/Backend/Django/#2-manter-requirementstxt-atualizado","title":"2. Manter requirements.txt atualizado","text":"<p>pip freeze &gt; requirements.txt; lista tudo que t\u00e1 instalado no teu ambiente virtual (Django, libs extras, etc.) e salva dentro desse arquivo.</p>"},{"location":"coelhos/Backend/Django/#3-criar-apps-para-dividir-responsabilidades-ex-users-events-payments","title":"3. Criar apps para dividir responsabilidades (ex: users, events, payments)","text":""},{"location":"coelhos/Backend/Django/#4-configurar-settings-separados-dev-prod-quando-o-projeto-crescer","title":"4. Configurar settings separados (dev, prod) quando o projeto crescer","text":""},{"location":"coelhos/Backend/Django/#5-usar-migrations-sempre-que-alterar-modelos","title":"5. Usar migrations sempre que alterar modelos","text":"<p>S\u00e3o scripts autom\u00e1ticos que o Django gera pra manter o banco de dados sincronizado com os seus modelos (models.py). python manage.py makemigrations, Roda-o; python manage.py migrate, aplica no banco</p>"},{"location":"coelhos/Backend/Django/#exemplo-pratico","title":"Exemplo pr\u00e1tico","text":"<pre><code>class Cliente(models.Model):\n    nome = models.CharField(max_length=100)\n    email = models.EmailField(unique=True)\n</code></pre>"},{"location":"coelhos/Backend/Django/#resumo-migrations-ponte-entre-o-codigo-python-models-e-o-banco-de-dados-real","title":"Resumo: migrations = ponte entre o c\u00f3digo Python (models) e o banco de dados real.","text":""},{"location":"coelhos/Backend/Django/#6-criar-superusuario-para-acessar-o-admin","title":"6. Criar superusu\u00e1rio para acessar o admin","text":"<pre><code>python manage.py createsuperuser\n</code></pre>"},{"location":"coelhos/Backend/Django/#7-testar-o-projeto-antes-de-subir-alteracoes","title":"7. Testar o projeto antes de subir altera\u00e7\u00f5es","text":"<pre><code>python manage.py test\n</code></pre>"},{"location":"coelhos/Backend/Django/#models-e-orm-banco-de-dados-com-sqlite","title":"Models e ORM (Banco de Dados com SQLite)","text":""},{"location":"coelhos/Backend/Django/#banco-de-dados-com-sqlite","title":"Banco de Dados com SQLite","text":"<ul> <li>Por padr\u00e3o, o Django usa SQLite, que j\u00e1 vem inclu\u00eddo no Python.</li> <li>Isso elimina a necessidade de instalar ou configurar sistemas de banco de dados.</li> <li>Para criar as tabelas necess\u00e1rias (apps do usu\u00e1rio e apps padr\u00e3o do Django), basta rodar:</li> </ul> <pre><code>python manage.py migrate\n</code></pre> <p>Esse comando analisa todos os apps ativados em <code>INSTALLED_APPS</code> e cria as tabelas adequadas no banco.</p>"},{"location":"coelhos/Backend/Django/#models-no-django","title":"Models no Django","text":"<ul> <li>Um Model \u00e9 a representa\u00e7\u00e3o de uma estrutura de dados (tabela) no banco.</li> <li>Ele \u00e9 definido como uma classe Python que herda de <code>django.db.models.Model</code>.</li> <li>Cada atributo da classe corresponde a uma coluna no banco de dados.</li> </ul> <p>Exemplo cl\u00e1ssico (tutorial polls):</p> <pre><code>class Question(models.Model):\n    question_text = models.CharField(max_length=200)\n    pub_date = models.DateTimeField(\"date published\")\n\nclass Choice(models.Model):\n    question = models.ForeignKey(Question, on_delete=models.CASCADE)\n    choice_text = models.CharField(max_length=200)\n    votes = models.IntegerField(default=0)\n</code></pre> <ul> <li>Uma pergunta tem texto e data de publica\u00e7\u00e3o.</li> <li>Cada op\u00e7\u00e3o est\u00e1 ligada a uma pergunta, com texto e contagem de votos.</li> <li>O Django gera automaticamente nomes de tabelas (<code>app_modelname</code>), campos, chaves prim\u00e1rias e tipos espec\u00edficos.</li> </ul>"},{"location":"coelhos/Backend/Django/#orm-object-relational-mapper","title":"ORM \u2014 Object-Relational Mapper","text":"<ul> <li>O ORM do Django permite interagir com o banco de dados usando Python ao inv\u00e9s de SQL.</li> <li>Facilita opera\u00e7\u00f5es CRUD: criar, ler, atualizar, deletar registros.</li> </ul> <p>Exemplo no shell interativo:</p> <pre><code># Criar uma pergunta\nq = Question(question_text=\"What's new?\", pub_date=timezone.now())\nq.save()\n\n# Acessar dados\nq.id\nq.question_text\n\n# Listar todas as perguntas\nQuestion.objects.all()\n</code></pre> <ul> <li>O ORM gera migra\u00e7\u00f5es com <code>makemigrations</code> e aplica ao banco com <code>migrate</code>.</li> <li>As migra\u00e7\u00f5es s\u00e3o version\u00e1veis e mant\u00eam o hist\u00f3rico de altera\u00e7\u00f5es.</li> </ul>"},{"location":"coelhos/Backend/Django/#views-e-urls-rotas-e-logica-do-backend","title":"Views e URLs (Rotas e L\u00f3gica do Backend)","text":""},{"location":"coelhos/Backend/Django/#views","title":"Views","text":"<ul> <li>Uma View \u00e9 uma fun\u00e7\u00e3o (ou classe) Python que recebe um <code>request</code> e retorna um <code>response</code>.</li> <li>O retorno pode ser: HTML, redirecionamento, JSON, imagem, erro 404, etc.</li> </ul> <p>Exemplo do tutorial polls:</p> <ul> <li><code>index</code>: lista as \u00faltimas perguntas.</li> <li><code>detail</code>: mostra os detalhes de uma pergunta espec\u00edfica.</li> <li><code>results</code>: exibe resultados das vota\u00e7\u00f5es.</li> <li><code>vote</code>: processa um voto.</li> </ul> <p>As views geralmente:</p> <ol> <li>Buscam dados dos Models.</li> <li>Processam formul\u00e1rios.</li> <li>Retornam o conte\u00fado via <code>HttpResponse</code>.</li> </ol>"},{"location":"coelhos/Backend/Django/#urls-e-rotas-urlconf","title":"URLs e Rotas (URLconf)","text":"<ul> <li>O URLconf \u00e9 um m\u00f3dulo <code>urls.py</code> que define uma lista <code>urlpatterns</code>.</li> <li>Cada entrada mapeia um padr\u00e3o de URL para uma View.</li> </ul> <p>Exemplo (<code>polls/urls.py</code>):</p> <pre><code>urlpatterns = [\n    path(\"\", views.index, name=\"index\"),                       # /polls/\n    path(\"&lt;int:question_id&gt;/\", views.detail, name=\"detail\"),   # /polls/5/\n    path(\"&lt;int:question_id&gt;/results/\", views.results, name=\"results\"), # /polls/5/results/\n    path(\"&lt;int:question_id&gt;/vote/\", views.vote, name=\"vote\"),  # /polls/5/vote/\n]\n</code></pre>"},{"location":"coelhos/Backend/Django/#templates-e-renderizacao","title":"Templates e Renderiza\u00e7\u00e3o","text":""},{"location":"coelhos/Backend/Django/#templates-no-django","title":"Templates no Django","text":"<ul> <li>Arquivos de texto (normalmente HTML) que misturam conte\u00fado est\u00e1tico com dados din\u00e2micos.</li> <li>Usam a linguagem de templates do Django (DTL).</li> </ul> <p>Exemplo de recursos:</p> <ul> <li>Vari\u00e1veis: <code>{{ variavel }}</code></li> <li>Tags de controle: <code>{% if ... %}</code>, <code>{% for ... %}</code></li> <li>Filtros, coment\u00e1rios, etc.</li> </ul>"},{"location":"coelhos/Backend/Django/#estrutura-de-pastas","title":"Estrutura de Pastas","text":"<pre><code>polls/\n    templates/\n        polls/\n            index.html\n</code></pre> <p>Exemplo (<code>index.html</code>):</p> <pre><code>{% if latest_question_list %}\n&lt;ul&gt;\n  {% for question in latest_question_list %}\n  &lt;li&gt;&lt;a href=\"/polls/{{ question.id }}/\"&gt;{{ question.question_text }}&lt;/a&gt;&lt;/li&gt;\n  {% endfor %}\n&lt;/ul&gt;\n{% else %}\n&lt;p&gt;No polls are available.&lt;/p&gt;\n{% endif %}\n</code></pre>"},{"location":"coelhos/Backend/Django/#renderizacao-na-view","title":"Renderiza\u00e7\u00e3o na View","text":"<p>A view prepara o contexto (dicion\u00e1rio de dados) e renderiza:</p> <pre><code>return render(request, \"polls/index.html\", context)\n</code></pre> <p>Isso gera um <code>HttpResponse</code> com o HTML final.</p>"},{"location":"coelhos/Backend/Django/#renderizacao-como-api","title":"Renderiza\u00e7\u00e3o como API","text":"<ul> <li>HTML tradicional: usa-se o sistema de templates conforme descrito acima, adequado para p\u00e1ginas web.</li> <li>APIs JSON: normalmente n\u00e3o se usa templates. Em aplica\u00e7\u00f5es Django tradicionais, voc\u00ea retornaria algo como <code>JsonResponse(...)</code>.</li> <li>Com Django REST Framework (DRF), usam-se Renderers (ex: <code>JSONRenderer</code>) para gerar JSON.</li> </ul>"},{"location":"coelhos/Backend/Django/#django-admin","title":"Django Admin","text":""},{"location":"coelhos/Backend/Django/#o-que-e","title":"O que \u00e9?","text":"<ul> <li>Interface administrativa autom\u00e1tica gerada pelo Django para permitir que administradores (como editores ou gerentes de conte\u00fado) criem, atualizem e apaguem dados dos seus modelos de forma r\u00e1pida e sem necessidade de programar formul\u00e1rios ou views.</li> <li>Essa interface n\u00e3o \u00e9 voltada para usu\u00e1rios p\u00fablicos do site, mas sim para gente da equipe que precisa gerenciar o conte\u00fado.</li> </ul>"},{"location":"coelhos/Backend/Django/#como-ativar","title":"Como ativar","text":"<ol> <li>O app <code>django.contrib.admin</code> j\u00e1 est\u00e1 ativo por padr\u00e3o.</li> <li>Criar superusu\u00e1rio:    <pre><code>python manage.py createsuperuser\n</code></pre></li> <li>Acessar no navegador:    <pre><code>http://127.0.0.1:8000/admin/\n</code></pre></li> <li>Registrar os Models em <code>admin.py</code>:</li> </ol> <pre><code>from django.contrib import admin\nfrom .models import Question\n\nadmin.site.register(Question)\n</code></pre>"},{"location":"coelhos/Backend/Django/#autenticacao-e-autorizacao","title":"Autentica\u00e7\u00e3o e Autoriza\u00e7\u00e3o","text":""},{"location":"coelhos/Backend/Django/#autenticacao-authentication","title":"Autentica\u00e7\u00e3o (Authentication)","text":"<ul> <li>Processo de verificar a identidade do usu\u00e1rio (ex: login com usu\u00e1rio e senha).</li> <li>O Django oferece:</li> <li>Modelos para usu\u00e1rios, grupos e permiss\u00f5es.</li> <li>Hashing seguro de senhas.</li> <li>Views prontas para login/logout.</li> <li>Backends de autentica\u00e7\u00e3o customiz\u00e1veis.</li> </ul>"},{"location":"coelhos/Backend/Django/#autorizacao-authorization","title":"Autoriza\u00e7\u00e3o (Authorization)","text":"<ul> <li>Define o que um usu\u00e1rio autenticado pode fazer na aplica\u00e7\u00e3o.</li> <li>Baseada em permiss\u00f5es associadas a modelos (ex: adicionar, alterar, deletar).</li> <li>Permiss\u00f5es podem ser atribu\u00eddas a usu\u00e1rios ou grupos.</li> </ul> <p>Exemplo:</p> <pre><code>if user.has_perm(\"polls.add_choice\"):\n    # Usu\u00e1rio pode adicionar uma escolha\n</code></pre>"},{"location":"coelhos/Backend/Django/#criacao-de-apis-com-django-rest-framework-drf","title":"Cria\u00e7\u00e3o de APIs com Django REST Framework (DRF)","text":""},{"location":"coelhos/Backend/Django/#instalacao","title":"Instala\u00e7\u00e3o","text":"<pre><code>pip install djangorestframework\n</code></pre>"},{"location":"coelhos/Backend/Django/#no-settingspy-adicione-em-installed_apps","title":"No settings.py, adicione em INSTALLED_APPS:","text":"<pre><code>INSTALLED_APPS = [\n    ...\n    \"rest_framework\",\n]\n</code></pre>"},{"location":"coelhos/Backend/Django/#serializers","title":"Serializers","text":"<p>Transformam models em JSON (e vice-versa).</p>"},{"location":"coelhos/Backend/Django/#exemplo-pratico_1","title":"Exemplo Pr\u00e1tico","text":"<pre><code>from rest_framework import serializers\nfrom .models import Question\n\nclass QuestionSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Question\n        fields = [\"id\", \"question_text\", \"pub_date\"]\n</code></pre>"},{"location":"coelhos/Backend/Django/#views-para-api","title":"Views para API","text":"<p>DRF oferece ViewSets e APIView para lidar com requisi\u00e7\u00f5es.</p>"},{"location":"coelhos/Backend/Django/#exemplo-usando-modelviewset","title":"Exemplo usando ModelViewSet:","text":"<pre><code>from rest_framework import viewsets\nfrom .models import Question\nfrom .serializers import QuestionSerializer\n\nclass QuestionViewSet(viewsets.ModelViewSet):\n    queryset = Question.objects.all()\n    serializer_class = QuestionSerializer\n</code></pre>"},{"location":"coelhos/Backend/Django/#urls-com-drf-router","title":"URLs com DRF Router","text":"<p>DRF tem routers que criam rotas automaticamente.</p>"},{"location":"coelhos/Backend/Django/#exemplo-simples","title":"Exemplo simples","text":"<pre><code>from django.urls import path, include\nfrom rest_framework.routers import DefaultRouter\nfrom .views import QuestionViewSet\n\nrouter = DefaultRouter()\nrouter.register(r\"questions\", QuestionViewSet)\n\nurlpatterns = [\n    path(\"api/\", include(router.urls)),\n]\n</code></pre>"},{"location":"coelhos/Backend/Django/#testando-a-api","title":"Testando a API","text":"<pre><code>python manage.py runserver\n</code></pre>"},{"location":"coelhos/Backend/Django/#navegador","title":"Navegador","text":"<p>http://127.0.0.1:8000/api/questions/</p>"},{"location":"coelhos/Backend/Django/#deploy-de-aplicacoes-django","title":"Deploy de aplica\u00e7\u00f5es Django","text":""},{"location":"coelhos/Backend/Django/#preparar-o-ambiente","title":"Preparar o ambiente","text":"<pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"coelhos/Backend/Django/#configurar-banco-de-dados","title":"Configurar banco de dados","text":"<p>Settings.py: <pre><code>DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n</code></pre> O banco \u00e9 s\u00f3 o arquivo .sqlite3 que fica junto do projeto</p>"},{"location":"coelhos/Backend/Django/#configurar-variaveis-do-ambiente","title":"Configurar vari\u00e1veis do ambiente","text":"<p>Nunca deixar segredos (como SECRET_KEY) no c\u00f3digo. Usar .env ou vari\u00e1veis no servidor: <pre><code>import os\n\nSECRET_KEY = os.environ.get(\"DJANGO_SECRET_KEY\")\nDEBUG = os.environ.get(\"DJANGO_DEBUG\", \"False\") == \"True\"\n</code></pre></p>"},{"location":"coelhos/Backend/Django/#servidor-wsgiasgi","title":"Servidor WSGI/ASGI","text":"<p>O Django n\u00e3o deve rodar com runserver em produ\u00e7\u00e3o. Usar:</p> <p>Gunicorn (mais comum).</p> <p>Uvicorn (se quiser suporte ass\u00edncrono).</p> <p>gunicorn projeto.wsgi</p>"},{"location":"coelhos/Backend/Django/#servidor-web","title":"Servidor Web","text":"<p>Usar Nginx ou Apache para:</p> <p>Redirecionar tr\u00e1fego HTTP/HTTPS.</p> <p>Servir arquivos est\u00e1ticos (CSS, JS, imagens).</p>"},{"location":"coelhos/Backend/Django/#arquivo-estaticos-e-midia","title":"Arquivo est\u00e1ticos e m\u00eddia","text":"<p><code>bash python manage.py collectstatic</code> Isso junta todos os arquivos est\u00e1ticos num s\u00f3 diret\u00f3rio, para o Nginx servir.</p>"},{"location":"coelhos/Backend/Django/#deploy-em-servicos-gerenciados","title":"Deploy em servi\u00e7os gerenciados","text":"<p>Se n\u00e3o quiser configurar tudo manualmente:</p> <p>Heroku, Railway, Render, PythonAnywhere \u2192 todos suportam SQLite.</p> <p>Docker tamb\u00e9m pode ser usado para empacotar o projeto.</p> <p><sub>Documenta\u00e7\u00e3o criada por Matheus Saraiva (@apptrx) e Lucas Fujimoto (@Lucasft16)</sub></p>"},{"location":"coelhos/Backend/SQL-SQlite/","title":"\ud83d\udcd8 SQL e SQLite","text":"<p>O SQL (Structured Query Language) \u00e9 a linguagem padr\u00e3o para manipula\u00e7\u00e3o de bancos de dados relacionais. O SQLite \u00e9 um banco de dados leve, sem servidor, amplamente usado em aplica\u00e7\u00f5es desktop, mobile e projetos menores.</p>"},{"location":"coelhos/Backend/SQL-SQlite/#estrutura-da-documentacao","title":"\ud83d\udcc2 Estrutura da Documenta\u00e7\u00e3o","text":"<ul> <li>Defini\u00e7\u00e3o de Esquema (SQLite) </li> <li>Fundamentos de SQL </li> <li>Manipula\u00e7\u00e3o de Dados em SQL </li> <li>SQL com Python </li> <li>SQLite Espec\u00edfico </li> </ul> <p>Cada se\u00e7\u00e3o cont\u00e9m um guia explicativo e exemplos pr\u00e1ticos para consolidar o aprendizado.</p> <p><sub>Documenta\u00e7\u00e3o escrita por Jo\u00e3o Gonzaga (@Karmantinedev)&lt;/s"},{"location":"coelhos/Backend/SQL-SQlite/Defini%C3%A7%C3%A3o_de_Esquema_SQlite/","title":"Defini\u00e7\u00e3o de Esquema em SQLite - Guia Completo","text":""},{"location":"coelhos/Backend/SQL-SQlite/Defini%C3%A7%C3%A3o_de_Esquema_SQlite/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>A defini\u00e7\u00e3o do esquema do banco de dados \u00e9 a base de qualquer aplica\u00e7\u00e3o. Este guia cobre a cria\u00e7\u00e3o e modifica\u00e7\u00e3o de tabelas, tipos de dados, restri\u00e7\u00f5es e \u00edndices no SQLite.</p>"},{"location":"coelhos/Backend/SQL-SQlite/Defini%C3%A7%C3%A3o_de_Esquema_SQlite/#1-criacao-de-tabelas-create-table","title":"1. Cria\u00e7\u00e3o de Tabelas (CREATE TABLE)","text":""},{"location":"coelhos/Backend/SQL-SQlite/Defini%C3%A7%C3%A3o_de_Esquema_SQlite/#11-sintaxe-basica-do-create-table","title":"1.1. Sintaxe B\u00e1sica do CREATE TABLE","text":"<p>```sql CREATE TABLE [IF NOT EXISTS] nome_tabela (     coluna1 tipo_dado [restri\u00e7\u00f5es],     coluna2 tipo_dado [restri\u00e7\u00f5es],     ...     [restri\u00e7\u00f5es_de_tabela] ); 1.2. Exemplos de Cria\u00e7\u00e3o de Tabelas Tabela simples:</p> <p>sql CREATE TABLE clientes (     id INTEGER PRIMARY KEY,     nome TEXT NOT NULL,     email TEXT UNIQUE,     data_criacao DATETIME DEFAULT CURRENT_TIMESTAMP ); Tabela com m\u00faltiplas restri\u00e7\u00f5es:</p> <p>sql CREATE TABLE produtos (     id INTEGER PRIMARY KEY AUTOINCREMENT,     nome TEXT NOT NULL CHECK(LENGTH(nome) &gt; 0),     categoria TEXT NOT NULL,     preco REAL CHECK(preco &gt;= 0),     estoque INTEGER DEFAULT 0 CHECK(estoque &gt;= 0),     data_cadastro DATE DEFAULT (date('now')) ); Tabela com chave estrangeira:</p> <p>sql CREATE TABLE pedidos (     id INTEGER PRIMARY KEY AUTOINCREMENT,     cliente_id INTEGER NOT NULL,     data_pedido DATETIME DEFAULT CURRENT_TIMESTAMP,     status TEXT DEFAULT 'Pendente' CHECK(status IN ('Pendente', 'Processando', 'Conclu\u00eddo', 'Cancelado')),     total REAL DEFAULT 0,</p> <pre><code>FOREIGN KEY (cliente_id) REFERENCES clientes(id) ON DELETE CASCADE\n</code></pre> <p>); 2. Tipos de Dados no SQLite O SQLite usa tipagem din\u00e2mica, mas reconhece os seguintes tipos:</p> <p>2.1. Principais Tipos de Dados Tipo    Descri\u00e7\u00e3o   Exemplo INTEGER N\u00fameros inteiros    1, -5, 1000 REAL    N\u00fameros de ponto flutuante  3.14, -2.5 TEXT    Texto (UTF-8, UTF-16)   'Jo\u00e3o', 'Hello' BLOB    Dados bin\u00e1rios  x'53514C697465' NULL    Valor nulo  NULL 2.2. Afinidade de Tipos O SQLite tem \"afinidade de tipos\" que converte valores automaticamente:</p> <p>sql CREATE TABLE exemplo_tipos (     col_int INTEGER,    -- Afinidade INTEGER     col_real REAL,      -- Afinidade REAL     col_text TEXT,      -- Afinidade TEXT     col_blob BLOB,      -- Afinidade BLOB     col_num NUMERIC     -- Afinidade NUMERIC (INTEGER ou REAL) ); 2.3. Exemplos de Convers\u00e3o Autom\u00e1tica sql INSERT INTO exemplo_tipos VALUES (     '123',      -- Convertido para INTEGER 123     '45.67',    -- Convertido para REAL 45.67     100,        -- Convertido para TEXT '100'     NULL,       -- Permanece NULL     '42'        -- Convertido para INTEGER 42 ); 3. Restri\u00e7\u00f5es (Constraints) 3.1. PRIMARY KEY Identifica unicamente cada registro na tabela.</p> <p>sql CREATE TABLE usuarios (     id INTEGER PRIMARY KEY,          -- Chave prim\u00e1ria simples     username TEXT NOT NULL UNIQUE );</p> <p>-- Chave prim\u00e1ria composta CREATE TABLE pedidos_itens (     pedido_id INTEGER,     produto_id INTEGER,     quantidade INTEGER,     PRIMARY KEY (pedido_id, produto_id),     FOREIGN KEY (pedido_id) REFERENCES pedidos(id),     FOREIGN KEY (produto_id) REFERENCES produtos(id) ); 3.2. FOREIGN KEY Mant\u00e9m a integridade referencial entre tabelas.</p> <p>sql CREATE TABLE pedidos (     id INTEGER PRIMARY KEY,     cliente_id INTEGER,     -- Restri\u00e7\u00e3o de chave estrangeira com a\u00e7\u00f5es     FOREIGN KEY (cliente_id)          REFERENCES clientes(id)         ON DELETE CASCADE         ON UPDATE SET NULL ); A\u00e7\u00f5es de FOREIGN KEY:</p> <p>ON DELETE CASCADE - Exclui registros relacionados</p> <p>ON DELETE SET NULL - Define como NULL</p> <p>ON DELETE RESTRICT - Impede exclus\u00e3o</p> <p>ON DELETE SET DEFAULT - Define valor padr\u00e3o</p> <p>ON UPDATE - Mesmas op\u00e7\u00f5es para atualiza\u00e7\u00f5es</p> <p>3.3. UNIQUE Garante que todos os valores em uma coluna sejam diferentes.</p> <p>sql CREATE TABLE usuarios (     id INTEGER PRIMARY KEY,     email TEXT UNIQUE,               -- Email \u00fanico     cpf TEXT UNIQUE NOT NULL,        -- CPF \u00fanico e obrigat\u00f3rio     username TEXT UNIQUE ); 3.4. NOT NULL Impede valores nulos na coluna.</p> <p>sql CREATE TABLE produtos (     id INTEGER PRIMARY KEY,     nome TEXT NOT NULL,              -- Nome obrigat\u00f3rio     descricao TEXT,                  -- Descri\u00e7\u00e3o opcional     preco REAL NOT NULL CHECK(preco &gt;= 0) ); 3.5. CHECK Define condi\u00e7\u00f5es personalizadas para os valores.</p> <p>sql CREATE TABLE funcionarios (     id INTEGER PRIMARY KEY,     nome TEXT NOT NULL,     idade INTEGER CHECK(idade &gt;= 18 AND idade &lt;= 65),     salario REAL CHECK(salario &gt;= 1212.00),     email TEXT CHECK(email LIKE '%@%.%'),     -- Check com m\u00faltiplas colunas     CHECK (NOT (salario &gt; 10000 AND idade &lt; 25)) ); 3.6. DEFAULT Define valor padr\u00e3o quando nenhum valor \u00e9 especificado.</p> <p>sql CREATE TABLE registros (     id INTEGER PRIMARY KEY,     data_criacao DATETIME DEFAULT CURRENT_TIMESTAMP,     data_modificacao DATETIME DEFAULT CURRENT_TIMESTAMP,     status TEXT DEFAULT 'Ativo',     contador INTEGER DEFAULT 0,     preco REAL DEFAULT 0.0 ); 4. Modifica\u00e7\u00e3o de Tabelas (ALTER TABLE) 4.1. Adicionar Colunas sql -- Adicionar uma nova coluna ALTER TABLE clientes ADD COLUMN telefone TEXT;</p> <p>-- Adicionar coluna com restri\u00e7\u00f5es ALTER TABLE produtos  ADD COLUMN peso REAL  CHECK(peso &gt; 0)  DEFAULT 1.0; 4.2. Renomear Tabela sql ALTER TABLE clientes_antigos RENAME TO clientes; 4.3. Limita\u00e7\u00f5es do ALTER TABLE no SQLite O SQLite n\u00e3o suporta:</p> <p>Remover colunas</p> <p>Alterar tipo de coluna</p> <p>Adicionar/remover restri\u00e7\u00f5es diretamente</p> <p>Solu\u00e7\u00e3o para remover colunas:</p> <p>sql -- 1. Criar nova tabela CREATE TABLE clientes_nova (     id INTEGER PRIMARY KEY,     nome TEXT NOT NULL,     email TEXT );</p> <p>-- 2. Copiar dados (excluindo a coluna indesejada) INSERT INTO clientes_nova (id, nome, email) SELECT id, nome, email FROM clientes;</p> <p>-- 3. Excluir tabela antiga DROP TABLE clientes;</p> <p>-- 4. Renomear nova tabela ALTER TABLE clientes_nova RENAME TO clientes; 5. \u00cdndices e Otimiza\u00e7\u00e3o (CREATE INDEX) 5.1. Criando \u00cdndices sql -- \u00cdndice simples CREATE INDEX idx_clientes_nome ON clientes(nome);</p> <p>-- \u00cdndice \u00fanico CREATE UNIQUE INDEX idx_clientes_email ON clientes(email);</p> <p>-- \u00cdndice composto CREATE INDEX idx_pedidos_data_cliente ON pedidos(data_pedido, cliente_id);</p> <p>-- \u00cdndice com ordena\u00e7\u00e3o espec\u00edfica CREATE INDEX idx_produtos_preco_desc ON produtos(preco DESC); 5.2. Quando Usar \u00cdndices Use \u00edndices para:</p> <p>Colunas frequentemente usadas em WHERE</p> <p>Colunas usadas em JOINs</p> <p>Colunas usadas em ORDER BY</p> <p>Colunas com alta seletividade</p> <p>Exemplo pr\u00e1tico:</p> <p>sql -- Sem \u00edndice (lento para grandes tabelas) SELECT * FROM pedidos WHERE cliente_id = 100;</p> <p>-- Com \u00edndice (r\u00e1pido) CREATE INDEX idx_pedidos_cliente_id ON pedidos(cliente_id); 5.3. Gerenciando \u00cdndices sql -- Ver \u00edndices existentes SELECT * FROM sqlite_master WHERE type = 'index';</p> <p>-- Ver informa\u00e7\u00f5es de \u00edndice PRAGMA index_list('nome_tabela'); PRAGMA index_info('nome_indice');</p> <p>-- Reconstruir \u00edndice REINDEX nome_indice;</p> <p>-- Excluir \u00edndice DROP INDEX IF EXISTS nome_indice; 6. Exemplos Completos de Esquemas 6.1. Sistema E-commerce Completo sql -- Tabela de clientes CREATE TABLE clientes (     id INTEGER PRIMARY KEY AUTOINCREMENT,     nome TEXT NOT NULL CHECK(LENGTH(nome) &gt; 2),     email TEXT UNIQUE CHECK(email LIKE '%@%.%'),     telefone TEXT,     data_cadastro DATETIME DEFAULT CURRENT_TIMESTAMP,     ativo BOOLEAN DEFAULT 1 );</p> <p>-- Tabela de categorias CREATE TABLE categorias (     id INTEGER PRIMARY KEY AUTOINCREMENT,     nome TEXT NOT NULL UNIQUE,     descricao TEXT );</p> <p>-- Tabela de produtos CREATE TABLE produtos (     id INTEGER PRIMARY KEY AUTOINCREMENT,     nome TEXT NOT NULL,     descricao TEXT,     preco REAL CHECK(preco &gt;= 0),     estoque INTEGER DEFAULT 0 CHECK(estoque &gt;= 0),     categoria_id INTEGER,     data_cadastro DATETIME DEFAULT CURRENT_TIMESTAMP,</p> <pre><code>FOREIGN KEY (categoria_id) REFERENCES categorias(id) ON DELETE SET NULL\n</code></pre> <p>);</p> <p>-- Tabela de pedidos CREATE TABLE pedidos (     id INTEGER PRIMARY KEY AUTOINCREMENT,     cliente_id INTEGER NOT NULL,     data_pedido DATETIME DEFAULT CURRENT_TIMESTAMP,     status TEXT DEFAULT 'Pendente'          CHECK(status IN ('Pendente', 'Processando', 'Enviado', 'Entregue', 'Cancelado')),     total REAL DEFAULT 0,</p> <pre><code>FOREIGN KEY (cliente_id) REFERENCES clientes(id) ON DELETE CASCADE\n</code></pre> <p>);</p> <p>-- Tabela de itens do pedido CREATE TABLE pedidos_itens (     pedido_id INTEGER,     produto_id INTEGER,     quantidade INTEGER CHECK(quantidade &gt; 0),     preco_unitario REAL CHECK(preco_unitario &gt;= 0),     subtotal REAL GENERATED ALWAYS AS (quantidade * preco_unitario) VIRTUAL,</p> <pre><code>PRIMARY KEY (pedido_id, produto_id),\nFOREIGN KEY (pedido_id) REFERENCES pedidos(id) ON DELETE CASCADE,\nFOREIGN KEY (produto_id) REFERENCES produtos(id) ON DELETE RESTRICT\n</code></pre> <p>);</p> <p>-- \u00cdndices para otimiza\u00e7\u00e3o CREATE INDEX idx_clientes_email ON clientes(email); CREATE INDEX idx_produtos_categoria ON produtos(categoria_id); CREATE INDEX idx_pedidos_cliente_data ON pedidos(cliente_id, data_pedido DESC); CREATE UNIQUE INDEX idx_produtos_nome_unique ON produtos(nome, categoria_id); 6.2. Sistema de Blog sql CREATE TABLE usuarios (     id INTEGER PRIMARY KEY AUTOINCREMENT,     username TEXT UNIQUE NOT NULL CHECK(LENGTH(username) &gt;= 3),     email TEXT UNIQUE NOT NULL CHECK(email LIKE '%@%.%'),     senha_hash TEXT NOT NULL,     data_registro DATETIME DEFAULT CURRENT_TIMESTAMP,     ativo BOOLEAN DEFAULT 1 );</p> <p>CREATE TABLE posts (     id INTEGER PRIMARY KEY AUTOINCREMENT,     titulo TEXT NOT NULL CHECK(LENGTH(titulo) BETWEEN 5 AND 200),     conteudo TEXT NOT NULL,     autor_id INTEGER NOT NULL,     data_publicacao DATETIME DEFAULT CURRENT_TIMESTAMP,     data_atualizacao DATETIME DEFAULT CURRENT_TIMESTAMP,     visivel BOOLEAN DEFAULT 1,</p> <pre><code>FOREIGN KEY (autor_id) REFERENCES usuarios(id) ON DELETE CASCADE\n</code></pre> <p>);</p> <p>CREATE TABLE comentarios (     id INTEGER PRIMARY KEY AUTOINCREMENT,     post_id INTEGER NOT NULL,     usuario_id INTEGER NOT NULL,     conteudo TEXT NOT NULL CHECK(LENGTH(conteudo) &gt; 0),     data_comentario DATETIME DEFAULT CURRENT_TIMESTAMP,     aprovado BOOLEAN DEFAULT 0,</p> <pre><code>FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE,\nFOREIGN KEY (usuario_id) REFERENCES usuarios(id) ON DELETE CASCADE\n</code></pre> <p>);</p> <p>CREATE TABLE tags (     id INTEGER PRIMARY KEY AUTOINCREMENT,     nome TEXT UNIQUE NOT NULL );</p> <p>CREATE TABLE posts_tags (     post_id INTEGER,     tag_id INTEGER,     PRIMARY KEY (post_id, tag_id),     FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE,     FOREIGN KEY (tag_id) REFERENCES tags(id) ON DELETE CASCADE ); 7. Boas Pr\u00e1ticas de Design 7.1. Normaliza\u00e7\u00e3o Primeira Forma Normal (1NF):</p> <p>Cada coluna cont\u00e9m valores at\u00f4micos</p> <p>Sem grupos repetitivos</p> <p>Segunda Forma Normal (2NF):</p> <p>Est\u00e1 na 1NF</p> <p>Todas as colunas n\u00e3o-chave dependem de toda a chave prim\u00e1ria</p> <p>Terceira Forma Normal (3NF):</p> <p>Est\u00e1 na 2NF</p> <p>N\u00e3o h\u00e1 depend\u00eancias transitivas (colunas dependem apenas da chave prim\u00e1ria)</p> <p>7.2. Nomenclatura sql -- Use nomes descritivos CREATE TABLE usuario_pedidos (...-);  -- \u274c Ruim CREATE TABLE pedidos_usuarios (...);  -- \u2705 Bom</p> <p>-- Use snake_case CREATE TABLE UsuarioPedidos (...);    -- \u274c Ruim CREATE TABLE usuario_pedidos (...);   -- \u2705 Bom</p> <p>-- Seja consistente CREATE TABLE produtos (...); CREATE TABLE categorias (...); CREATE TABLE produtos_categorias (...); 7.3. Documenta\u00e7\u00e3o do Esquema sql -- Use coment\u00e1rios SQL CREATE TABLE clientes (     id INTEGER PRIMARY KEY,          -- ID \u00fanico do cliente     nome TEXT NOT NULL,              -- Nome completo     email TEXT UNIQUE,               -- Email \u00fanico para login     -- ... outras colunas );</p> <p>-- Mantenha um arquivo de documenta\u00e7\u00e3o / TABELA: clientes DESCRI\u00c7\u00c3O: Armazena informa\u00e7\u00f5es dos clientes do sistema COLUNAS:   - id: Identificador \u00fanico (PK)   - nome: Nome completo do cliente   - email: Email \u00fanico para comunica\u00e7\u00e3o / 8. Ferramentas e Utilit\u00e1rios 8.1. Visualizar Esquema sql -- Ver todas as tabelas SELECT name FROM sqlite_master WHERE type = 'table';</p> <p>-- Ver estrutura de uma tabela PRAGMA table_info('nome_tabela');</p> <p>-- Ver SQL de cria\u00e7\u00e3o SELECT sql FROM sqlite_master WHERE name = 'nome_tabela';</p> <p>-- Ver chaves estrangeiras PRAGMA foreign_key_list('nome_tabela'); 8.2. Manuten\u00e7\u00e3o do Banco de Dados sql -- Otimizar espa\u00e7o (VACUUM) VACUUM;</p> <p>-- Verificar integridade PRAGMA integrity_check;</p> <p>-- Verificar chaves estrangeiras (ativar) PRAGMA foreign_keys = ON;</p> <p>-- Backup do esquema .sqlite3 database.db .schema &gt; schema_backup.sql 9. Exerc\u00edcios Pr\u00e1ticos Exerc\u00edcio 1: Criar Esquema de Biblioteca sql CREATE TABLE livros (     id INTEGER PRIMARY KEY AUTOINCREMENT,     titulo TEXT NOT NULL,     autor TEXT NOT NULL,     isbn TEXT UNIQUE,     ano_publicacao INTEGER CHECK(ano_publicacao &gt; 1450),     disponivel BOOLEAN DEFAULT 1 );</p> <p>CREATE TABLE membros (     id INTEGER PRIMARY KEY AUTOINCREMENT,     nome TEXT NOT NULL,     email TEXT UNIQUE CHECK(email LIKE '%@%.%'),     data_inscricao DATE DEFAULT (date('now')) );</p> <p>CREATE TABLE emprestimos (     id INTEGER PRIMARY KEY AUTOINCREMENT,     livro_id INTEGER NOT NULL,     membro_id INTEGER NOT NULL,     data_emprestimo DATE DEFAULT (date('now')),     data_devolucao DATE,     multa REAL DEFAULT 0,</p> <pre><code>FOREIGN KEY (livro_id) REFERENCES livros(id),\nFOREIGN KEY (membro_id) REFERENCES membros(id),\nCHECK(data_devolucao IS NULL OR data_devolucao &gt;= data_emprestimo)\n</code></pre> <p>); Exerc\u00edcio 2: Modificar Esquema Existente sql -- Adicionar nova coluna ALTER TABLE livros ADD COLUMN editora TEXT;</p> <p>-- Criar \u00edndice para buscas por autor CREATE INDEX idx_livros_autor ON livros(autor);</p> <p>-- Adicionar restri\u00e7\u00e3o de e-mail \u00fanico em membros CREATE UNIQUE INDEX idx_membros_email_unique ON membros(email); Exerc\u00edcio 3: Normaliza\u00e7\u00e3o sql -- Refatorar para 3NF CREATE TABLE autores (     id INTEGER PRIMARY KEY AUTOINCREMENT,     nome TEXT NOT NULL UNIQUE );</p> <p>CREATE TABLE editoras (     id INTEGER PRIMARY KEY AUTOINCREMENT,     nome TEXT NOT NULL UNIQUE );</p> <p>ALTER TABLE livros  ADD COLUMN autor_id INTEGER, ADD COLUMN editora_id INTEGER;</p> <p>-- Atualizar constraints CREATE TABLE livros_autores (     livro_id INTEGER,     autor_id INTEGER,     PRIMARY KEY (livro_id, autor_id),     FOREIGN KEY (livro_id) REFERENCES livros(id),     FOREIGN KEY (autor_id) REFERENCES autores(id) );</p> <p><sub>Documenta\u00e7\u00e3o criada por Jo\u00e3o Gonzaga (@Karmantinedev)</sub></p>"},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/","title":"Index","text":""},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>SQL (Structured Query Language) \u00e9 a linguagem padr\u00e3o para comunica\u00e7\u00e3o com bancos de dados relacionais. Este guia cobre os conceitos fundamentais necess\u00e1rios para trabalhar eficientemente com SQL, com foco especial no SQLite.</p> <ol> <li>Sintaxe B\u00e1sica do SQL</li> </ol>"},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#11-select-recuperando-dados","title":"1.1. SELECT - Recuperando Dados","text":"<p>A instru\u00e7\u00e3o [SELECT] \u00e9 usada para consultar dados de uma tabela.</p>"},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#sintaxe-basica","title":"Sintaxe b\u00e1sica:","text":"<p>SELECT coluna1, coluna2, ... FROM nome_tabela;</p>"},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#exemplos","title":"Exemplos:","text":"<p>-- Selecionar todas as colunas SELECT * FROM clientes;</p> <p>-- Selecionar colunas espec\u00edficas SELECT nome, email FROM clientes;</p> <p>-- Usar aliases para renomear colunas SELECT nome AS cliente_nome, email AS cliente_email FROM clientes;</p>"},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#12-from-especificando-a-tabela","title":"1.2. FROM - Especificando a Tabela","text":"<p>A cl\u00e1usula [FROM] indica de qual tabela os dados ser\u00e3o recuperados.</p> <p>SELECT * FROM produtos; SELECT nome, pre\u00e7o FROM pedidos;</p>"},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#13-where-filtrando-resultados","title":"1.3. WHERE - Filtrando Resultados","text":"<p>A cl\u00e1usula [WHERE] filtra registros com base em condi\u00e7\u00f5es espec\u00edficas.</p> <p>Operadores de compara\u00e7\u00e3o:</p> <p>[=] Igual</p> <p>[&lt;&gt;] ou != Diferente</p> <p>[&gt;] Maior que</p> <p>[&lt;] Menor que</p> <p>[&gt;=] Maior ou igual</p> <p>[&lt;=] Menor ou igual</p> <p>[BETWEEN] Entre um intervalo</p> <p>[LIKE] Padr\u00e3o de texto</p> <p>[IN] Especifica m\u00faltiplos valores poss\u00edveis</p>"},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#exemplos_1","title":"Exemplos:","text":"<p>-- Igualdade SELECT * FROM clientes WHERE cidade = 'S\u00e3o Paulo';</p> <p>-- Maior que SELECT * FROM produtos WHERE pre\u00e7o &gt; 100.00;</p> <p>-- BETWEEN SELECT * FROM pedidos WHERE data BETWEEN '2023-01-01' AND '2023-01-31';</p> <p>-- LIKE (correspond\u00eancia de padr\u00e3o) SELECT * FROM clientes WHERE nome LIKE 'Jo\u00e3o%'; -- Come\u00e7a com \"Jo\u00e3o\" SELECT * FROM clientes WHERE email LIKE '%@gmail.com'; -- Termina com \"@gmail.com\"</p> <p>-- IN (m\u00faltiplos valores) SELECT * FROM produtos WHERE categoria IN ('Eletr\u00f4nicos', 'Livros');</p> <ol> <li>Cl\u00e1usulas de Agrega\u00e7\u00e3o</li> </ol>"},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#21-group-by-agrupando-dados","title":"2.1. GROUP BY - Agrupando Dados","text":"<p>Agrupa linhas que t\u00eam os mesmos valores em colunas especificadas.</p> <p>[SELECT] categoria, COUNT(*) as quantidade [FROM] produtos [GROUP BY] categoria;</p>"},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#22-having-filtrando-grupos","title":"2.2. HAVING - Filtrando Grupos","text":"<p>Filtra grupos baseados em condi\u00e7\u00f5es (semelhante ao [WHERE], mas para grupos).</p> <p>[SELECT] categoria, COUNT() as quantidade [FROM] produtos [GROUP BY] categoria [HAVING] COUNT() &gt; 5;</p>"},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#diferenca-entre-where-e-having","title":"Diferen\u00e7a entre WHERE e HAVING:","text":"<p>[WHERE] filtra linhas antes do agrupamento</p> <p>[HAVING] filtra grupos depois do agrupamento</p>"},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#23-funcoes-de-agregacao","title":"2.3. Fun\u00e7\u00f5es de Agrega\u00e7\u00e3o","text":"<p>COUNT() Retorna o n\u00famero de linhas SUM()   Retorna a soma dos valores AVG()   Retorna a m\u00e9dia dos valores MAX()   Retorna o valor m\u00e1ximo MIN()   Retorna o valor m\u00ednimo</p>"},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#exemplos_2","title":"Exemplos:","text":"<p>-- Contar total de clientes SELECT COUNT(*) FROM clientes;</p> <p>-- M\u00e9dia de pre\u00e7os por categoria SELECT categoria, AVG(pre\u00e7o) as pre\u00e7o_m\u00e9dio FROM produtos GROUP BY categoria;</p> <p>-- Maior e menor pre\u00e7o SELECT MAX(pre\u00e7o) as pre\u00e7o_max, MIN(pre\u00e7o) as pre\u00e7o_min FROM produtos;</p> <ol> <li>Jun\u00e7\u00f5es (JOINs)</li> </ol>"},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#31-inner-join","title":"3.1. INNER JOIN","text":"<p>Retorna registros que t\u00eam correspond\u00eancia em ambas as tabelas.</p> <p>[SELECT] pedidos.id, clientes.nome, pedidos.data [FROM] pedidos [INNER] JOIN clientes ON pedidos.cliente_id = clientes.id;</p>"},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#32-left-join","title":"3.2. LEFT JOIN","text":"<p>Retorna todos os registros da tabela \u00e0 esquerda e os correspondentes da tabela \u00e0 direita.</p> <p>[SELECT] clientes.nome, pedidos.id [FROM] clientes [LEFT] JOIN pedidos ON clientes.id = pedidos.cliente_id;</p>"},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#33-right-join-e-full-outer-join","title":"3.3. RIGHT JOIN e FULL OUTER JOIN","text":"<p>Nota: SQLite n\u00e3o suporta RIGHT JOIN ou FULL OUTER JOIN nativamente, mas podem ser simulados.</p>"},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#34-multiplos-joins","title":"3.4. M\u00faltiplos JOINs","text":"<p>[SELECT] pedidos.id, clientes.nome, produtos.nome as produto [FROM] pedidos [INNER JOIN] clientes ON pedidos.cliente_id = clientes.id [INNER JOIN] itens_pedido ON pedidos.id = itens_pedido.pedido_id [INNER JOIN] produtos ON itens_pedido.produto_id = produtos.id;</p> <ol> <li>Subconsultas</li> </ol>"},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#41-subconsultas-na-clausula-where","title":"4.1. Subconsultas na Cl\u00e1usula WHERE","text":"<p>[SELECT] nome, pre\u00e7o [FROM] produtos [WHERE] pre\u00e7o &gt; (SELECT AVG(pre\u00e7o) FROM produtos);</p>"},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#42-subconsultas-na-clausula-from","title":"4.2. Subconsultas na Cl\u00e1usula FROM","text":"<p>[SELECT] categoria, AVG(pre\u00e7o) as m\u00e9dia_pre\u00e7o [FROM] (SELECT * FROM produtos WHERE estoque &gt; 0) as produtos_em_estoque [GROUP BY] categoria;</p>"},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#43-subconsultas-correlacionadas","title":"4.3. Subconsultas Correlacionadas","text":"<p>Subconsultas que referenciam colunas da consulta externa.</p> <p>[SELECT] nome, pre\u00e7o,         (SELECT AVG(pre\u00e7o) FROM produtos p2 WHERE p2.categoria = p1.categoria) as m\u00e9dia_categoria [FROM] produtos p1;</p> <ol> <li>Ordena\u00e7\u00e3o e Limita\u00e7\u00e3o</li> </ol>"},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#51-order-by-ordenando-resultados","title":"5.1. ORDER BY - Ordenando Resultados","text":"<p>[SELECT] nome, pre\u00e7o [FROM] produtos [ORDER BY] pre\u00e7o DESC; -- Do maior para o menor pre\u00e7o</p> <p>[SELECT] nome, data_nascimento [FROM] clientes [ORDER BY] data_nascimento ASC; -- Ordem cronol\u00f3gica Ordena\u00e7\u00e3o por m\u00faltiplas colunas:</p> <p>[SELECT] categoria, nome, pre\u00e7o [FROM] produtos [ORDER BY] categoria ASC, pre\u00e7o DESC;</p>"},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#52-limit-limitando-resultados","title":"5.2. LIMIT - Limitando Resultados","text":"<p>-- Os 10 produtos mais caros [SELECT] nome, pre\u00e7o [FROM] produtos [ORDER BY] pre\u00e7o DESC [LIMIT] 10;</p> <p>-- Pagina\u00e7\u00e3o (limite com offset) [SELECT] nome, pre\u00e7o [FROM] produtos [ORDER BY] nome [LIMIT] 10 OFFSET 20; -- Pula 20 registros, pega os pr\u00f3ximos 10</p> <ol> <li>Combinando Consultas</li> </ol>"},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#61-union-e-union-all","title":"6.1. UNION e UNION ALL","text":"<p>Combinam resultados de duas ou mais consultas.</p> <p>-- UNION (remove duplicatas) [SELECT] nome FROM clientes [UNION] [SELECT] nome FROM fornecedores;</p> <p>-- UNION ALL (mant\u00e9m duplicatas) [SELECT] nome FROM clientes [UNION ALL] [SELECT] nome FROM fornecedores;</p>"},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#exercicios-praticos","title":"Exerc\u00edcios Pr\u00e1ticos","text":""},{"location":"coelhos/Backend/SQL-SQlite/Fundamentos_de_SQL/#exercicio-1-consultas-basicas","title":"Exerc\u00edcio 1: Consultas B\u00e1sicas","text":"<p>-- 1. Selecione todos os clientes de S\u00e3o Paulo SELECT * FROM clientes WHERE cidade = 'S\u00e3o Paulo';</p> <p>-- 2. Encontre produtos com pre\u00e7o entre R$ 50 e R$ 100 SELECT * FROM produtos WHERE pre\u00e7o BETWEEN 50 AND 100;</p> <p>-- 3. Liste os 5 produtos mais caros SELECT nome, pre\u00e7o FROM produtos ORDER BY pre\u00e7o DESC LIMIT 5; Exerc\u00edcio 2: Agrega\u00e7\u00f5es</p> <p>-- 1. Conte quantos pedidos cada cliente fez SELECT cliente_id, COUNT(*) as total_pedidos FROM pedidos GROUP BY cliente_id;</p> <p>-- 2. Encontre a m\u00e9dia de pre\u00e7o por categoria SELECT categoria, AVG(pre\u00e7o) as pre\u00e7o_m\u00e9dio FROM produtos GROUP BY categoria;</p> <p>-- 3. Categorias com mais de 10 produtos SELECT categoria, COUNT() as quantidade FROM produtos GROUP BY categoria HAVING COUNT() &gt; 10; Exerc\u00edcio 3: JOINs</p> <p>-- 1. Liste todos os pedidos com nome do cliente SELECT pedidos.*, clientes.nome as cliente_nome FROM pedidos INNER JOIN clientes ON pedidos.cliente_id = clientes.id;</p> <p>-- 2. Produtos que nunca foram vendidos SELECT produtos.* FROM produtos LEFT JOIN itens_pedido ON produtos.id = itens_pedido.produto_id WHERE itens_pedido.produto_id IS NULL;</p> <p><sub>Documenta\u00e7\u00e3o criada por Jo\u00e3o Gonzaga (@Karmantinedev)</sub></p>"},{"location":"coelhos/Backend/SQL-SQlite/Manipulacao-de-Dados-em-SQL/","title":"Manipula\u00e7\u00e3o de Dados em SQL","text":""},{"location":"coelhos/Backend/SQL-SQlite/Manipulacao-de-Dados-em-SQL/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>A manipula\u00e7\u00e3o de dados \u00e9 uma das opera\u00e7\u00f5es mais fundamentais em bancos de dados. Este guia cobre as quatro opera\u00e7\u00f5es b\u00e1sicas do CRUD (Create, Read, Update, Delete) com foco no SQLite.</p>"},{"location":"coelhos/Backend/SQL-SQlite/Manipulacao-de-Dados-em-SQL/#1-insercao-de-dados-insert","title":"1. Inser\u00e7\u00e3o de Dados (INSERT)","text":""},{"location":"coelhos/Backend/SQL-SQlite/Manipulacao-de-Dados-em-SQL/#11-sintaxe-basica-do-insert","title":"1.1. Sintaxe B\u00e1sica do INSERT","text":"<p>A instru\u00e7\u00e3o <code>INSERT</code> \u00e9 usada para adicionar novos registros a uma tabela.</p> <p>Sintaxe: ```sql INSERT INTO nome_tabela (coluna1, coluna2, coluna3, ...) VALUES (valor1, valor2, valor3, ...);</p>"},{"location":"coelhos/Backend/SQL-SQlite/Manipulacao-de-Dados-em-SQL/#manipulacao-de-dados-em-sql-guia-completo","title":"Manipula\u00e7\u00e3o de Dados em SQL - Guia Completo","text":""},{"location":"coelhos/Backend/SQL-SQlite/Manipulacao-de-Dados-em-SQL/#introducao_1","title":"Introdu\u00e7\u00e3o","text":"<p>A manipula\u00e7\u00e3o de dados \u00e9 uma das opera\u00e7\u00f5es mais fundamentais em bancos de dados. Este guia cobre as quatro opera\u00e7\u00f5es b\u00e1sicas do CRUD (Create, Read, Update, Delete) com foco no SQLite.</p>"},{"location":"coelhos/Backend/SQL-SQlite/Manipulacao-de-Dados-em-SQL/#1-insercao-de-dados-insert_1","title":"1. Inser\u00e7\u00e3o de Dados (INSERT)","text":""},{"location":"coelhos/Backend/SQL-SQlite/Manipulacao-de-Dados-em-SQL/#11-sintaxe-basica-do-insert_1","title":"1.1. Sintaxe B\u00e1sica do INSERT","text":"<p>A instru\u00e7\u00e3o <code>INSERT</code> \u00e9 usada para adicionar novos registros a uma tabela.</p> <p>Sintaxe:</p> <p>INSERT INTO nome_tabela (coluna1, coluna2, coluna3, ...) VALUES (valor1, valor2, valor3, ...);</p>"},{"location":"coelhos/Backend/SQL-SQlite/Manipulacao-de-Dados-em-SQL/#12-exemplos-de-insert","title":"1.2. Exemplos de INSERT","text":"<p>sql -- Inserir um \u00fanico registro INSERT INTO clientes (nome, email, cidade) VALUES ('Jo\u00e3o Silva', 'joao@email.com', 'S\u00e3o Paulo');</p> <p>-- Inserir m\u00faltiplos registros de uma vez (SQLite suporta) INSERT INTO produtos (nome, pre\u00e7o, categoria) VALUES      ('Notebook', 2500.00, 'Eletr\u00f4nicos'),     ('Livro SQL', 89.90, 'Livros'),     ('Mouse', 45.50, 'Acess\u00f3rios');</p> <p>-- Inserir sem especificar colunas (deve incluir todos os valores na ordem correta) INSERT INTO categorias VALUES (NULL, 'Eletrodom\u00e9sticos', '2023-10-15'); 1.3. INSERT com SELECT Inserir dados a partir de uma consulta em outra tabela:</p> <p>sql INSERT INTO clientes_backup (nome, email) SELECT nome, email FROM clientes WHERE cidade = 'Rio de Janeiro';</p>"},{"location":"coelhos/Backend/SQL-SQlite/Manipulacao-de-Dados-em-SQL/#14-valores-padrao-e-null","title":"1.4. Valores Padr\u00e3o e NULL","text":"<p>sql -- Usar DEFAULT para valores padr\u00e3o INSERT INTO pedidos (cliente_id, data_pedido, status) VALUES (1, '2023-10-15', DEFAULT);</p> <p>-- Inserir NULL explicitamente INSERT INTO clientes (nome, email, telefone) VALUES ('Maria Santos', 'maria@email.com', NULL); 2. Atualiza\u00e7\u00e3o de Dados (UPDATE) 2.1. Sintaxe B\u00e1sica do UPDATE A instru\u00e7\u00e3o UPDATE modifica registros existentes em uma tabela.</p> <p>Sintaxe:</p> <p>sql UPDATE nome_tabela SET coluna1 = valor1, coluna2 = valor2, ... WHERE condi\u00e7\u00e3o; 2.2. Exemplos de UPDATE sql -- Atualizar um \u00fanico registro UPDATE clientes SET cidade = 'Belo Horizonte' WHERE id = 5;</p> <p>-- Atualizar m\u00faltiplas colunas UPDATE produtos SET pre\u00e7o = pre\u00e7o * 0.9,  -- 10% de desconto     estoque = estoque - 1 WHERE id = 10;</p> <p>-- Atualizar com base em outra tabela UPDATE pedidos SET status = 'Enviado' WHERE cliente_id IN (SELECT id FROM clientes WHERE cidade = 'S\u00e3o Paulo');</p> <p>-- Atualizar todos os registros (CUIDADO!) UPDATE configuracoes SET ultima_atualizacao = CURRENT_TIMESTAMP; 2.3. UPDATE com JOIN (SQLite) O SQLite n\u00e3o suporta JOIN diretamente no UPDATE, mas podemos usar subconsultas:</p> <p>sql -- Atualizar pre\u00e7os com base em outra tabela UPDATE produtos SET pre\u00e7o = pre\u00e7o * 1.1  -- Aumento de 10% WHERE categoria_id IN (     SELECT id FROM categorias WHERE nome = 'Eletr\u00f4nicos' ); 3. Exclus\u00e3o de Dados (DELETE) 3.1. Sintaxe B\u00e1sica do DELETE A instru\u00e7\u00e3o DELETE remove registros de uma tabela.</p> <p>Sintaxe:</p> <p>sql DELETE FROM nome_tabela WHERE condi\u00e7\u00e3o; 3.2. Exemplos de DELETE sql -- Deletar um registro espec\u00edfico DELETE FROM clientes WHERE id = 15;</p> <p>-- Deletar com condi\u00e7\u00e3o complexa DELETE FROM pedidos WHERE data_pedido &lt; '2023-01-01' AND status = 'Cancelado';</p> <p>-- Deletar todos os registros (CUIDADO EXTREMO!) DELETE FROM tabela_temporaria; 3.3. DELETE com Subconsultas sql -- Deletar clientes sem pedidos DELETE FROM clientes WHERE id NOT IN (SELECT DISTINCT cliente_id FROM pedidos);</p> <p>-- Deletar produtos de uma categoria espec\u00edfica DELETE FROM produtos WHERE categoria_id = (     SELECT id FROM categorias WHERE nome = 'Obsoletos' ); 4. Transa\u00e7\u00f5es 4.1. O que s\u00e3o Transa\u00e7\u00f5es? Transa\u00e7\u00f5es garantem que uma s\u00e9rie de opera\u00e7\u00f5es seja executada completamente ou n\u00e3o seja executada nenhuma (princ\u00edpio ACID).</p> <p>4.2. Comandos de Transa\u00e7\u00e3o sql -- Iniciar uma transa\u00e7\u00e3o BEGIN TRANSACTION;</p> <p>-- Ou alternativamente (no SQLite) BEGIN; 4.3. Exemplos de Transa\u00e7\u00f5es sql -- Exemplo 1: Transfer\u00eancia banc\u00e1ria BEGIN TRANSACTION;</p> <p>UPDATE contas SET saldo = saldo - 100 WHERE id = 1; UPDATE contas SET saldo = saldo + 100 WHERE id = 2;</p> <p>-- Se tudo estiver correto COMMIT;</p> <p>-- Se ocorrer erro ROLLBACK; sql -- Exemplo 2: Processamento de pedido BEGIN;</p> <p>INSERT INTO pedidos (cliente_id, total) VALUES (1, 250.00); UPDATE produtos SET estoque = estoque - 1 WHERE id = 5; UPDATE clientes SET ultimo_pedido = CURRENT_DATE WHERE id = 1;</p> <p>COMMIT; 4.4. Savepoints (Pontos de Salvamento) sql BEGIN;</p> <p>INSERT INTO tabela1 VALUES (...); SAVEPOINT ponto1;</p> <p>UPDATE tabela2 SET ...; -- Se algo der errado no UPDATE ROLLBACK TO ponto1;</p> <p>-- Ou continuar RELEASE ponto1; COMMIT; 5. Boas Pr\u00e1ticas de Manipula\u00e7\u00e3o de Dados 5.1. Preven\u00e7\u00e3o de Acidentes sql -- SEMPRE teste com SELECT primeiro SELECT * FROM clientes WHERE cidade = 'Rio de Janeiro'; -- Depois fa\u00e7a o UPDATE/DELETE DELETE FROM clientes WHERE cidade = 'Rio de Janeiro';</p> <p>-- Use transa\u00e7\u00f5es para opera\u00e7\u00f5es cr\u00edticas BEGIN; DELETE FROM pedidos_antigos; -- Verifique se est\u00e1 correto antes de COMMIT ROLLBACK; -- ou COMMIT; 5.2. Performance em M\u00faltiplas Inser\u00e7\u00f5es sql -- Inser\u00e7\u00f5es em lote s\u00e3o mais eficientes BEGIN; INSERT INTO tabela VALUES (...); INSERT INTO tabela VALUES (...); INSERT INTO tabela VALUES (...); COMMIT;</p> <p>-- Do que inser\u00e7\u00f5es individuais INSERT INTO tabela VALUES (...); INSERT INTO tabela VALUES (...); INSERT INTO tabela VALUES (...); 5.3. Controle de Concorr\u00eancia O SQLite gerencia automaticamente a concorr\u00eancia, mas transa\u00e7\u00f5es expl\u00edcitas ajudam:</p> <p>sql BEGIN EXCLUSIVE; -- Modo exclusivo para opera\u00e7\u00f5es cr\u00edticas -- opera\u00e7\u00f5es cr\u00edticas COMMIT; 6. Exemplos Pr\u00e1ticos Completos 6.1. Sistema de Vendas sql -- Processar um novo pedido BEGIN TRANSACTION;</p> <p>-- 1. Criar o pedido INSERT INTO pedidos (cliente_id, data_pedido, total) VALUES (1, CURRENT_DATE, 0);</p> <p>-- 2. Obter o ID do pedido rec\u00e9m-criado .last_insert_rowid() -- Fun\u00e7\u00e3o do SQLite para pegar \u00faltimo ID</p> <p>-- 3. Adicionar itens ao pedido INSERT INTO itens_pedido (pedido_id, produto_id, quantidade, preco_unitario) VALUES      (last_insert_rowid(), 5, 2, 45.50),     (last_insert_rowid(), 8, 1, 2500.00);</p> <p>-- 4. Atualizar o total do pedido UPDATE pedidos SET total = (     SELECT SUM(quantidade * preco_unitario)      FROM itens_pedido      WHERE pedido_id = last_insert_rowid() ) WHERE id = last_insert_rowid();</p> <p>-- 5. Atualizar estoque UPDATE produtos SET estoque = estoque - 2 WHERE id = 5; UPDATE produtos SET estoque = estoque - 1 WHERE id = 8;</p> <p>COMMIT; 6.2. Manuten\u00e7\u00e3o de Dados sql -- Limpeza anual de dados antigos BEGIN;</p> <p>-- Backup dos dados antigos INSERT INTO pedidos_arquivo SELECT * FROM pedidos  WHERE data_pedido &lt; date('now', '-5 years');</p> <p>-- Remover os dados antigos DELETE FROM pedidos  WHERE data_pedido &lt; date('now', '-5 years');</p> <p>-- Atualizar estat\u00edsticas UPDATE estatisticas  SET ultima_limpeza = CURRENT_TIMESTAMP;</p> <p>COMMIT; 7. Exerc\u00edcios Pr\u00e1ticos Exerc\u00edcio 1: Inser\u00e7\u00e3o de Dados sql -- 1. Insira 3 novos clientes INSERT INTO clientes (nome, email, cidade) VALUES ('Ana Costa', 'ana@email.com', 'Rio de Janeiro'), ('Carlos Souza', 'carlos@email.com', 'Belo Horizonte'), ('Mariana Lima', 'mariana@email.com', 'S\u00e3o Paulo');</p> <p>-- 2. Insira 5 produtos diferentes INSERT INTO produtos (nome, preco, categoria) VALUES ('Tablet', 899.90, 'Eletr\u00f4nicos'), ('Caderno', 15.50, 'Material'), ('Caneta', 2.50, 'Material'), ('Fone de Ouvido', 120.00, 'Acess\u00f3rios'), ('Carregador', 45.00, 'Acess\u00f3rios'); Exerc\u00edcio 2: Atualiza\u00e7\u00e3o de Dados sql -- 1. Aumente em 10% o pre\u00e7o de todos os eletr\u00f4nicos UPDATE produtos SET preco = preco * 1.1 WHERE categoria = 'Eletr\u00f4nicos';</p> <p>-- 2. Mude a cidade de um cliente espec\u00edfico UPDATE clientes SET cidade = 'Porto Alegre' WHERE email = 'ana@email.com'; Exerc\u00edcio 3: Exclus\u00e3o com Transa\u00e7\u00e3o sql -- 1. Remova todos os produtos sem estoque usando transa\u00e7\u00e3o BEGIN; DELETE FROM produtos WHERE estoque &lt;= 0; COMMIT;</p> <p>-- 2. Remova clientes inativos (sem pedidos nos \u00faltimos 2 anos) BEGIN; DELETE FROM clientes  WHERE id NOT IN (     SELECT DISTINCT cliente_id      FROM pedidos      WHERE data_pedido &gt; date('now', '-2 years') ); COMMIT; 8. Tratamento de Erros Comuns 8.1. Viola\u00e7\u00e3o de Restri\u00e7\u00f5es sql -- Erro: Chave \u00fanica duplicada INSERT INTO clientes (id, nome) VALUES (1, 'Jo\u00e3o'); -- Se id=1 j\u00e1 existe</p> <p>-- Solu\u00e7\u00e3o: Use INSERT OR IGNORE ou INSERT OR REPLACE INSERT OR IGNORE INTO clientes (id, nome) VALUES (1, 'Jo\u00e3o'); INSERT OR REPLACE INTO clientes (id, nome) VALUES (1, 'Jo\u00e3o'); 8.2. Valores Nulos em Campos NOT NULL sql -- Erro: Campo obrigat\u00f3rio n\u00e3o preenchido INSERT INTO clientes (nome) VALUES (NULL); -- Se nome \u00e9 NOT NULL</p> <p>-- Solu\u00e7\u00e3o: Sempre forne\u00e7a valores para campos NOT NULL INSERT INTO clientes (nome, email) VALUES ('Jo\u00e3o', 'joao@email.com');</p> <p><sub>Documenta\u00e7\u00e3o criada por Jo\u00e3o Gonzaga (@Karmantinedev)</sub></p>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/","title":"SQL com Python - Guia Completo de Integra\u00e7\u00e3o","text":""},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>A integra\u00e7\u00e3o entre SQLite e Python \u00e9 uma das mais simples e poderosas combina\u00e7\u00f5es para desenvolvimento de aplica\u00e7\u00f5es com banco de dados. Este guia cobre o uso do m\u00f3dulo <code>sqlite3</code> da biblioteca padr\u00e3o Python, boas pr\u00e1ticas de seguran\u00e7a e padr\u00f5es avan\u00e7ados de integra\u00e7\u00e3o.</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#1-modulo-sqlite3-da-biblioteca-padrao","title":"1. M\u00f3dulo sqlite3 da Biblioteca Padr\u00e3o","text":""},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#11-conexao-basica-com-o-banco-de-dados","title":"1.1. Conex\u00e3o B\u00e1sica com o Banco de Dados","text":"<p>Estabelecendo conex\u00e3o: ```python import sqlite3 import os</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#conexao-basica","title":"Conex\u00e3o b\u00e1sica","text":"<p>conn = sqlite3.connect('database.db') cursor = conn.cursor()</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#conexao-em-memoria-otima-para-testes","title":"Conex\u00e3o em mem\u00f3ria (\u00f3tima para testes)","text":"<p>conn_memory = sqlite3.connect(':memory:')</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#conexao-com-configuracoes-especificas","title":"Conex\u00e3o com configura\u00e7\u00f5es espec\u00edficas","text":"<p>conn = sqlite3.connect(     'app.db',     timeout=30,  # Timeout de 30 segundos     detect_types=sqlite3.PARSE_DECLTYPES  # Detectar tipos Python ) Gerenciamento de contexto (recomendado):</p> <p>python</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#usando-context-manager-para-conexao","title":"Usando context manager para conex\u00e3o","text":"<p>with sqlite3.connect('database.db') as conn:     cursor = conn.cursor()     cursor.execute(\"SELECT * FROM users\")     results = cursor.fetchall()</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#conexao-e-automaticamente-fechada-ao-sair-do-bloco","title":"Conex\u00e3o \u00e9 automaticamente fechada ao sair do bloco","text":"<p>1.2. Executando Consultas B\u00e1sicas Opera\u00e7\u00f5es CRUD:</p> <p>python</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#create-inserindo-dados","title":"CREATE - Inserindo dados","text":"<p>def create_user(name, email):     with sqlite3.connect('database.db') as conn:         cursor = conn.cursor()         cursor.execute(             \"INSERT INTO users (name, email) VALUES (?, ?)\",             (name, email)         )         conn.commit()         return cursor.lastrowid</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#read-consultando-dados","title":"READ - Consultando dados","text":"<p>def get_users():     with sqlite3.connect('database.db') as conn:         cursor = conn.cursor()         cursor.execute(\"SELECT id, name, email FROM users\")         return cursor.fetchall()</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#update-atualizando-dados","title":"UPDATE - Atualizando dados","text":"<p>def update_user_email(user_id, new_email):     with sqlite3.connect('database.db') as conn:         cursor = conn.cursor()         cursor.execute(             \"UPDATE users SET email = ? WHERE id = ?\",             (new_email, user_id)         )         conn.commit()         return cursor.rowcount</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#delete-removendo-dados","title":"DELETE - Removendo dados","text":"<p>def delete_user(user_id):     with sqlite3.connect('database.db') as conn:         cursor = conn.cursor()         cursor.execute(\"DELETE FROM users WHERE id = ?\", (user_id,))         conn.commit()         return cursor.rowcount 2. Preven\u00e7\u00e3o de SQL Injection 2.1. O Problema do SQL Injection \u274c NUNCA fa\u00e7a isso:</p> <p>python</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#codigo-vulneravel-a-sql-injection","title":"C\u00f3digo vulner\u00e1vel a SQL injection","text":"<p>def get_user_unsafe(username):     conn = sqlite3.connect('database.db')     cursor = conn.cursor()</p> <pre><code># \u26a0\ufe0f PERIGO: Concaten\u00e7\u00e3o direta de strings\nquery = f\"SELECT * FROM users WHERE username = '{username}'\"\ncursor.execute(query)  # Vulner\u00e1vel a injection\n\nreturn cursor.fetchall()\n</code></pre>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#exemplo-de-ataque","title":"Exemplo de ataque:","text":""},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#username-admin-or-11","title":"username = \"admin' OR '1'='1\"","text":""},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#query-resultante-select-from-users-where-username-admin-or-11","title":"Query resultante: SELECT * FROM users WHERE username = 'admin' OR '1'='1'","text":"<p>2.2. Usando Par\u00e2metros com Placeholders \u2705 SEMPRE use placeholders:</p> <p>python</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#metodo-seguro-usando-placeholders","title":"M\u00e9todo seguro usando placeholders","text":"<p>def get_user_safe(username):     with sqlite3.connect('database.db') as conn:         cursor = conn.cursor()</p> <pre><code>    # Usando ? como placeholder\n    cursor.execute(\n        \"SELECT * FROM users WHERE username = ?\",\n        (username,)  # Tuple com par\u00e2metros\n    )\n\n    return cursor.fetchall()\n</code></pre>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#metodo-seguro-com-named-placeholders","title":"M\u00e9todo seguro com named placeholders","text":"<p>def update_user_safe(user_id, **fields):     with sqlite3.connect('database.db') as conn:         cursor = conn.cursor()</p> <pre><code>    set_clause = \", \".join([f\"{key} = :{key}\" for key in fields])\n    query = f\"UPDATE users SET {set_clause} WHERE id = :id\"\n\n    # Usando dicion\u00e1rio de par\u00e2metros\n    params = fields.copy()\n    params['id'] = user_id\n\n    cursor.execute(query, params)\n    conn.commit()\n</code></pre> <p>2.3. Valida\u00e7\u00e3o de Entrada python import re</p> <p>def validate_email(email):     \"\"\"Valida formato de email\"\"\"     pattern = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,}$'     return bool(re.match(pattern, email))</p> <p>def validate_input(data):     \"\"\"Valida dados de entrada\"\"\"     if not isinstance(data, str):         return False</p> <pre><code># Remove caracteres potencialmente perigosos\ndata = data.strip()\nif not data:\n    return False\n\nreturn True\n</code></pre> <p>def safe_query(query, params):     \"\"\"Executa query com valida\u00e7\u00e3o\"\"\"     if not all(validate_input(str(p)) for p in params if p is not None):         raise ValueError(\"Par\u00e2metros inv\u00e1lidos\")</p> <pre><code>with sqlite3.connect('database.db') as conn:\n    cursor = conn.cursor()\n    cursor.execute(query, params)\n    return cursor.fetchall()\n</code></pre> <ol> <li>Context Managers para Gerenciamento de Conex\u00f5es 3.1. Classe de Gerenciamento de Database python import sqlite3 from contextlib import contextmanager</li> </ol> <p>class DatabaseManager:     def init(self, database_path):         self.database_path = database_path</p> <pre><code>@contextmanager\ndef get_connection(self):\n    \"\"\"Context manager para conex\u00f5es\"\"\"\n    conn = None\n    try:\n        conn = sqlite3.connect(\n            self.database_path,\n            timeout=30,\n            detect_types=sqlite3.PARSE_DECLTYPES\n        )\n        conn.execute(\"PRAGMA foreign_keys = ON\")  # Habilitar FK\n        yield conn\n    except sqlite3.Error as e:\n        print(f\"Erro de database: {e}\")\n        if conn:\n            conn.rollback()\n        raise\n    finally:\n        if conn:\n            conn.close()\n\n@contextmanager\ndef get_cursor(self):\n    \"\"\"Context manager para cursor\"\"\"\n    with self.get_connection() as conn:\n        cursor = conn.cursor()\n        try:\n            yield cursor\n            conn.commit()\n        except Exception:\n            conn.rollback()\n            raise\n</code></pre>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#uso-da-classe","title":"Uso da classe","text":"<p>db = DatabaseManager('app.db')</p> <p>with db.get_cursor() as cursor:     cursor.execute(\"SELECT * FROM users\")     results = cursor.fetchall() 3.2. Decorator para Transa\u00e7\u00f5es python def with_transaction(func):     \"\"\"Decorator para gerenciar transa\u00e7\u00f5es automaticamente\"\"\"     def wrapper(self, args, kwargs):         with self.get_connection() as conn:             try:                 result = func(self, conn, args, **kwargs)                 conn.commit()                 return result             except Exception as e:                 conn.rollback()                 raise e     return wrapper</p> <p>class UserRepository:     def init(self, db_manager):         self.db = db_manager</p> <pre><code>@with_transaction\ndef create_user(self, conn, name, email):\n    cursor = conn.cursor()\n    cursor.execute(\n        \"INSERT INTO users (name, email) VALUES (?, ?)\",\n        (name, email)\n    )\n    return cursor.lastrowid\n\n@with_transaction\ndef get_users(self, conn):\n    cursor = conn.cursor()\n    cursor.execute(\"SELECT * FROM users\")\n    return cursor.fetchall()\n</code></pre> <ol> <li>Convers\u00e3o de Resultados para Estruturas Python 4.1. Row Factory para Objetos Python python</li> </ol>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#converter-rows-para-dicionarios","title":"Converter rows para dicion\u00e1rios","text":"<p>def dict_factory(cursor, row):     \"\"\"Converte resultados para dicion\u00e1rios\"\"\"     fields = [column[0] for column in cursor.description]     return {key: value for key, value in zip(fields, row)}</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#converter-rows-para-namedtuples","title":"Converter rows para namedtuples","text":"<p>from collections import namedtuple</p> <p>def namedtuple_factory(cursor, row):     \"\"\"Converte resultados para namedtuples\"\"\"     fields = [column[0] for column in cursor.description]     Row = namedtuple('Row', fields)     return Row(*row)</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#usando-row-factories","title":"Usando row factories","text":"<p>conn = sqlite3.connect('database.db') conn.row_factory = dict_factory  # ou namedtuple_factory</p> <p>cursor = conn.cursor() cursor.execute(\"SELECT id, name, email FROM users\") users = cursor.fetchall()  # Lista de dicion\u00e1rios ou namedtuples 4.2. Mapeamento para Classes Python python from dataclasses import dataclass from typing import Optional</p> <p>@dataclass class User:     id: Optional[int] = None     name: str = \"\"     email: str = \"\"     created_at: Optional[str] = None</p> <pre><code>@classmethod\ndef from_dict(cls, data):\n    \"\"\"Cria User a partir de dicion\u00e1rio\"\"\"\n    return cls(**{k: v for k, v in data.items() if hasattr(cls, k)})\n\ndef to_dict(self):\n    \"\"\"Converte User para dicion\u00e1rio\"\"\"\n    return {\n        'name': self.name,\n        'email': self.email\n    }\n</code></pre> <p>class UserRepository:     def init(self, db_manager):         self.db = db_manager         self.db.conn.row_factory = dict_factory</p> <pre><code>def get_user(self, user_id):\n    with self.db.get_cursor() as cursor:\n        cursor.execute(\"SELECT * FROM users WHERE id = ?\", (user_id,))\n        data = cursor.fetchone()\n        return User.from_dict(data) if data else None\n\ndef save_user(self, user):\n    with self.db.get_cursor() as cursor:\n        if user.id:\n            # Update\n            cursor.execute(\n                \"UPDATE users SET name = ?, email = ? WHERE id = ?\",\n                (user.name, user.email, user.id)\n            )\n        else:\n            # Insert\n            cursor.execute(\n                \"INSERT INTO users (name, email) VALUES (?, ?)\",\n                (user.name, user.email)\n            )\n            user.id = cursor.lastrowid\n    return user\n</code></pre> <p>4.3. Convers\u00e3o de Tipos de Dados python import json from datetime import datetime</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#registrar-adaptadores-e-conversores","title":"Registrar adaptadores e conversores","text":"<p>def adapt_datetime(dt):     \"\"\"Adapta datetime para string ISO\"\"\"     return dt.isoformat()</p> <p>def convert_datetime(text):     \"\"\"Converte string para datetime\"\"\"     return datetime.fromisoformat(text.decode() if isinstance(text, bytes) else text)</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#registrar-conversores","title":"Registrar conversores","text":"<p>sqlite3.register_adapter(datetime, adapt_datetime) sqlite3.register_converter(\"datetime\", convert_datetime)</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#para-dados-json","title":"Para dados JSON","text":"<p>def adapt_json(data):     return json.dumps(data)</p> <p>def convert_json(text):     return json.loads(text)</p> <p>sqlite3.register_adapter(dict, adapt_json) sqlite3.register_adapter(list, adapt_json) sqlite3.register_converter(\"JSON\", convert_json) 5. Padr\u00f5es Avan\u00e7ados e Boas Pr\u00e1ticas 5.1. Repository Pattern python from abc import ABC, abstractmethod from typing import List, Optional</p> <p>class BaseRepository(ABC):     @abstractmethod     def get(self, id):         pass</p> <pre><code>@abstractmethod\ndef get_all(self):\n    pass\n\n@abstractmethod\ndef create(self, entity):\n    pass\n\n@abstractmethod\ndef update(self, entity):\n    pass\n\n@abstractmethod\ndef delete(self, id):\n    pass\n</code></pre> <p>class UserRepository(BaseRepository):     def init(self, db_manager):         self.db = db_manager         self.table = \"users\"</p> <pre><code>def get(self, user_id: int) -&gt; Optional[User]:\n    with self.db.get_cursor() as cursor:\n        cursor.execute(f\"SELECT * FROM {self.table} WHERE id = ?\", (user_id,))\n        data = cursor.fetchone()\n        return User.from_dict(data) if data else None\n\ndef get_all(self) -&gt; List[User]:\n    with self.db.get_cursor() as cursor:\n        cursor.execute(f\"SELECT * FROM {self.table}\")\n        return [User.from_dict(row) for row in cursor.fetchall()]\n\ndef create(self, user: User) -&gt; User:\n    with self.db.get_cursor() as cursor:\n        cursor.execute(\n            f\"INSERT INTO {self.table} (name, email) VALUES (?, ?)\",\n            (user.name, user.email)\n        )\n        user.id = cursor.lastrowid\n        return user\n\ndef update(self, user: User) -&gt; User:\n    with self.db.get_cursor() as cursor:\n        cursor.execute(\n            f\"UPDATE {self.table} SET name = ?, email = ? WHERE id = ?\",\n            (user.name, user.email, user.id)\n        )\n        return user\n\ndef delete(self, user_id: int) -&gt; bool:\n    with self.db.get_cursor() as cursor:\n        cursor.execute(f\"DELETE FROM {self.table} WHERE id = ?\", (user_id,))\n        return cursor.rowcount &gt; 0\n</code></pre> <p>5.2. Migra\u00e7\u00f5es de Esquema python import os from pathlib import Path</p> <p>class MigrationManager:     def init(self, db_manager, migrations_dir=\"migrations\"):         self.db = db_manager         self.migrations_dir = Path(migrations_dir)         self.migrations_dir.mkdir(exist_ok=True)</p> <pre><code>def create_migration(self, name):\n    \"\"\"Cria novo arquivo de migra\u00e7\u00e3o\"\"\"\n    timestamp = datetime.now().strftime(\"%Y%m%d_%H%M%S\")\n    filename = self.migrations_dir / f\"{timestamp}_{name}.sql\"\n\n    with open(filename, 'w') as f:\n        f.write(\"-- Migration: {name}\\n\")\n        f.write(\"BEGIN TRANSACTION;\\n\\n\")\n        f.write(\"-- Suas altera\u00e7\u00f5es de schema aqui\\n\\n\")\n        f.write(\"COMMIT;\\n\")\n\n    return filename\n\ndef run_migrations(self):\n    \"\"\"Executa migra\u00e7\u00f5es pendentes\"\"\"\n    with self.db.get_connection() as conn:\n        self._ensure_migrations_table(conn)\n\n        applied_migrations = self._get_applied_migrations(conn)\n        migration_files = sorted(self.migrations_dir.glob(\"*.sql\"))\n\n        for migration_file in migration_files:\n            if migration_file.name not in applied_migrations:\n                self._apply_migration(conn, migration_file)\n\ndef _ensure_migrations_table(self, conn):\n    conn.execute(\"\"\"\n        CREATE TABLE IF NOT EXISTS migrations (\n            id INTEGER PRIMARY KEY,\n            filename TEXT UNIQUE,\n            applied_at DATETIME DEFAULT CURRENT_TIMESTAMP\n        )\n    \"\"\")\n\ndef _get_applied_migrations(self, conn):\n    cursor = conn.cursor()\n    cursor.execute(\"SELECT filename FROM migrations\")\n    return {row[0] for row in cursor.fetchall()}\n\ndef _apply_migration(self, conn, migration_file):\n    with open(migration_file, 'r') as f:\n        sql_script = f.read()\n\n    try:\n        conn.executescript(sql_script)\n        conn.execute(\n            \"INSERT INTO migrations (filename) VALUES (?)\",\n            (migration_file.name,)\n        )\n        conn.commit()\n    except Exception as e:\n        conn.rollback()\n        raise Exception(f\"Migration failed: {migration_file.name}\") from e\n</code></pre> <p>5.3. Logging e Monitoramento python import logging import time</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#configurar-logging","title":"Configurar logging","text":"<p>logging.basicConfig(level=logging.INFO) logger = logging.getLogger(name)</p> <p>class LoggingCursor:     \"\"\"Cursor com logging de queries\"\"\"     def init(self, cursor):         self.cursor = cursor</p> <pre><code>def execute(self, query, params=None):\n    start_time = time.time()\n\n    try:\n        if params:\n            result = self.cursor.execute(query, params)\n        else:\n            result = self.cursor.execute(query)\n\n        end_time = time.time()\n        duration = (end_time - start_time) * 1000  # ms\n\n        logger.info(f\"Query executed: {query[:100]}... [Duration: {duration:.2f}ms]\")\n        return result\n    except Exception as e:\n        logger.error(f\"Query failed: {query} - Error: {e}\")\n        raise\n\ndef __getattr__(self, name):\n    return getattr(self.cursor, name)\n</code></pre> <p>class LoggingConnection:     \"\"\"Conex\u00e3o com logging\"\"\"     def init(self, connection):         self.connection = connection</p> <pre><code>def cursor(self):\n    return LoggingCursor(self.connection.cursor())\n\ndef __getattr__(self, name):\n    return getattr(self.connection, name)\n</code></pre>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#uso","title":"Uso","text":"<p>conn = sqlite3.connect('database.db') logging_conn = LoggingConnection(conn) 6. Exemplos Completos 6.1. Aplica\u00e7\u00e3o Completa de Blog python import sqlite3 from datetime import datetime from typing import List, Optional from dataclasses import dataclass</p> <p>@dataclass class Post:     id: Optional[int] = None     title: str = \"\"     content: str = \"\"     author_id: int = 0     created_at: Optional[datetime] = None     updated_at: Optional[datetime] = None</p> <p>class BlogDatabase:     def init(self, db_path: str):         self.db_path = db_path         self.init_db()</p> <pre><code>def init_db(self):\n    \"\"\"Inicializa o banco de dados\"\"\"\n    with sqlite3.connect(self.db_path) as conn:\n        conn.execute(\"\"\"\n            CREATE TABLE IF NOT EXISTS posts (\n                id INTEGER PRIMARY KEY AUTOINCREMENT,\n                title TEXT NOT NULL,\n                content TEXT NOT NULL,\n                author_id INTEGER NOT NULL,\n                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP\n            )\n        \"\"\")\n\ndef create_post(self, post: Post) -&gt; Post:\n    \"\"\"Cria um novo post\"\"\"\n    with sqlite3.connect(self.db_path) as conn:\n        cursor = conn.cursor()\n        cursor.execute(\n            \"INSERT INTO posts (title, content, author_id) VALUES (?, ?, ?)\",\n            (post.title, post.content, post.author_id)\n        )\n        post.id = cursor.lastrowid\n        return post\n\ndef get_posts(self, limit: int = 10) -&gt; List[Post]:\n    \"\"\"Obt\u00e9m posts recentes\"\"\"\n    with sqlite3.connect(self.db_path) as conn:\n        conn.row_factory = sqlite3.Row\n        cursor = conn.cursor()\n        cursor.execute(\n            \"SELECT * FROM posts ORDER BY created_at DESC LIMIT ?\",\n            (limit,)\n        )\n        return [Post(**dict(row)) for row in cursor.fetchall()]\n</code></pre>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#uso_1","title":"Uso","text":"<p>blog_db = BlogDatabase('blog.db') new_post = Post(title=\"Hello SQLite\", content=\"Content here\", author_id=1) created_post = blog_db.create_post(new_post) posts = blog_db.get_posts() 6.2. Sistema de Autentica\u00e7\u00e3o python import hashlib import secrets from typing import Optional</p> <p>class AuthSystem:     def init(self, db_manager):         self.db = db_manager</p> <pre><code>def create_user(self, username: str, password: str, email: str) -&gt; bool:\n    \"\"\"Cria usu\u00e1rio com senha hasheada\"\"\"\n    salt = secrets.token_hex(16)\n    hashed_password = self._hash_password(password, salt)\n\n    try:\n        with self.db.get_cursor() as cursor:\n            cursor.execute(\n                \"\"\"INSERT INTO users (username, password_hash, salt, email)\n                   VALUES (?, ?, ?, ?)\"\"\",\n                (username, hashed_password, salt, email)\n            )\n        return True\n    except sqlite3.IntegrityError:\n        return False\n\ndef verify_user(self, username: str, password: str) -&gt; bool:\n    \"\"\"Verifica credenciais do usu\u00e1rio\"\"\"\n    with self.db.get_cursor() as cursor:\n        cursor.execute(\n            \"SELECT password_hash, salt FROM users WHERE username = ?\",\n            (username,)\n        )\n        result = cursor.fetchone()\n\n        if not result:\n            return False\n\n        stored_hash, salt = result\n        input_hash = self._hash_password(password, salt)\n\n        return secrets.compare_digest(stored_hash, input_hash)\n\ndef _hash_password(self, password: str, salt: str) -&gt; str:\n    \"\"\"Gera hash da senha\"\"\"\n    return hashlib.pbkdf2_hmac(\n        'sha256',\n        password.encode('utf-8'),\n        salt.encode('utf-8'),\n        100000  # N\u00famero de itera\u00e7\u00f5es\n    ).hex()\n</code></pre> <ol> <li>Exerc\u00edcios Pr\u00e1ticos Exerc\u00edcio 1: CRUD Completo python</li> </ol>"},{"location":"coelhos/Backend/SQL-SQlite/SQL_com_python/#implementar-crud-para-produtos","title":"Implementar CRUD para produtos","text":"<p>class ProductRepository:     def init(self, db_manager):         self.db = db_manager</p> <pre><code>def create_product(self, name: str, price: float, category: str):\n    # Implementar cria\u00e7\u00e3o\n    pass\n\ndef get_products_by_category(self, category: str):\n    # Implementar busca por categoria\n    pass\n\ndef update_product_price(self, product_id: int, new_price: float):\n    # Implementar atualiza\u00e7\u00e3o\n    pass\n\ndef delete_product(self, product_id: int):\n    # Implementar exclus\u00e3o\n    pass\n</code></pre> <p><sub>Documenta\u00e7\u00e3o criada por Jo\u00e3o Gonzaga (@Karmantinedev)</sub></p>"},{"location":"coelhos/Backend/SQL-SQlite/SQlite-especifico/","title":"SQLite Espec\u00edfico - Guia Completo","text":""},{"location":"coelhos/Backend/SQL-SQlite/SQlite-especifico/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O SQLite \u00e9 um banco de dados embutido com caracter\u00edsticas \u00fanicas que o diferenciam de outros sistemas de gerenciamento de banco de dados. Este guia cobre aspectos espec\u00edficos do SQLite, incluindo fun\u00e7\u00f5es built-in, limita\u00e7\u00f5es, extens\u00f5es e opera\u00e7\u00f5es de manuten\u00e7\u00e3o.</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQlite-especifico/#1-funcoes-built-in-do-sqlite","title":"1. Fun\u00e7\u00f5es Built-in do SQLite","text":""},{"location":"coelhos/Backend/SQL-SQlite/SQlite-especifico/#11-funcoes-de-data-e-hora","title":"1.1. Fun\u00e7\u00f5es de Data e Hora","text":"<p>Fun\u00e7\u00f5es principais: ```sql -- Data e hora atual SELECT datetime('now');        -- 2023-12-07 15:30:45 SELECT date('now');            -- 2023-12-07 SELECT time('now');            -- 15:30:45</p> <p>-- Com timezone (UTC) SELECT datetime('now', 'utc'); -- 2023-12-07 18:30:45</p> <p>-- Manipula\u00e7\u00e3o de datas SELECT date('now', '+1 day');     -- Amanh\u00e3 SELECT date('now', '-1 month');   -- M\u00eas passado SELECT datetime('now', '+3 hours', '-30 minutes');</p> <p>-- Formata\u00e7\u00e3o personalizada SELECT strftime('%Y-%m-%d %H:%M:%S', 'now'); SELECT strftime('%d/%m/%Y', 'now');  -- 07/12/2023 Exemplos pr\u00e1ticos:</p> <p>sql -- Idade a partir da data de nascimento SELECT nome,         date('now') - data_nascimento AS idade_aproximada,        (julianday('now') - julianday(data_nascimento)) / 365.25 AS idade_exata FROM clientes;</p> <p>-- Pedidos dos \u00faltimos 30 dias SELECT * FROM pedidos  WHERE data_pedido &gt;= date('now', '-30 days');</p> <p>-- Agrupar por semana SELECT strftime('%Y-%W', data_pedido) AS semana,        COUNT(*) AS total_pedidos FROM pedidos GROUP BY semana; 1.2. Fun\u00e7\u00f5es Matem\u00e1ticas sql -- Fun\u00e7\u00f5es b\u00e1sicas SELECT ABS(-15);              -- 15 SELECT ROUND(3.14159, 2);     -- 3.14 SELECT RANDOM();              -- N\u00famero aleat\u00f3rio SELECT RANDOM() % 100;        -- N\u00famero entre 0-99</p> <p>-- Fun\u00e7\u00f5es avan\u00e7adas SELECT MAX(10, 20, 5);        -- 20 SELECT MIN(10, 20, 5);        -- 5 SELECT COALESCE(NULL, NULL, 'valor', NULL); -- 'valor'</p> <p>-- Exemplos com dados SELECT produto,         preco,        ROUND(preco * 0.9, 2) AS preco_com_desconto,        CEIL(preco) AS preco_arredondado FROM produtos; 1.3. Fun\u00e7\u00f5es de Agrega\u00e7\u00e3o Al\u00e9m das fun\u00e7\u00f5es SQL padr\u00e3o, SQLite tem algumas particularidades:</p> <p>sql -- GROUP_CONCAT - Concatena valores do grupo SELECT departamento,         GROUP_CONCAT(nome, ', ') AS funcionarios FROM empregados GROUP BY departamento;</p> <p>-- Total aggregates SELECT TOTAL(preco) AS soma_total FROM vendas;  -- Sempre retorna REAL SELECT SUM(preco) AS soma FROM vendas;          -- Retorna INTEGER se poss\u00edvel</p> <p>-- Statistical functions (com extens\u00e3o math) SELECT AVG(salario) AS media_salarial,        COUNT(*) AS total_funcionarios,        MAX(salario) AS maior_salario,        MIN(salario) AS menor_salario FROM funcionarios; 1.4. Fun\u00e7\u00f5es de Texto sql -- Manipula\u00e7\u00e3o de strings SELECT LENGTH('SQLite');           -- 6 SELECT LOWER('SQLite');            -- 'sqlite' SELECT UPPER('sqlite');            -- 'SQLITE' SELECT SUBSTR('SQLite', 1, 3);     -- 'SQL' SELECT REPLACE('Hello World', 'World', 'SQLite'); -- 'Hello SQLite'</p> <p>-- Busca e posi\u00e7\u00e3o SELECT INSTR('SQLite', 'Lite');    -- 3 SELECT TRIM('   SQLite   ');       -- 'SQLite' SELECT LTRIM('   SQLite');         -- 'SQLite' SELECT RTRIM('SQLite   ');         -- 'SQLite'</p> <p>-- Exemplo pr\u00e1tico: extrair dom\u00ednio de email SELECT email,        SUBSTR(email, INSTR(email, '@') + 1) AS dominio FROM usuarios; 2. Tipos de Armazenamento e Limita\u00e7\u00f5es 2.1. Sistema de Tipagem Din\u00e2mica SQLite usa tipagem din\u00e2mica (manifest typing):</p> <p>sql CREATE TABLE exemplo_tipagem (     id INTEGER,     qualquer_dado );</p> <p>INSERT INTO exemplo_tipagem VALUES (1, 100);       -- INTEGER INSERT INTO exemplo_tipagem VALUES (2, 3.14);      -- REAL INSERT INTO exemplo_tipagem VALUES (3, 'Texto');   -- TEXT INSERT INTO exemplo_tipagem VALUES (4, NULL);      -- NULL INSERT INTO exemplo_tipagem VALUES (5, x'0001');   -- BLOB 2.2. Limita\u00e7\u00f5es do SQLite Limites conhecidos:</p> <p>sql -- Tamanho m\u00e1ximo do banco: ~140 TB -- Tamanho m\u00e1ximo de texto: 1 bilh\u00e3o de caracteres -- Tamanho m\u00e1ximo de BLOB: 2.1 GB -- Colunas por tabela: 2000 -- Tamanho m\u00e1ximo de SQL: 1 milh\u00e3o de bytes</p> <p>-- Verificar limites PRAGMA page_size;          -- Tamanho da p\u00e1gina (1024-65536) PRAGMA max_page_count;     -- N\u00famero m\u00e1ximo de p\u00e1ginas PRAGMA encoding;           -- UTF-8 ou UTF-16 2.3. Gerenciamento de Mem\u00f3ria sql -- Configura\u00e7\u00f5es de cache PRAGMA cache_size = -2000;   -- 2000 p\u00e1ginas em cache (cerca de 2MB) PRAGMA temp_store = MEMORY;  -- Armazenar tempor\u00e1rios em mem\u00f3ria</p> <p>-- Otimiza\u00e7\u00e3o de desempenho PRAGMA journal_mode = WAL;   -- Write-Ahead Logging (recomendado) PRAGMA synchronous = NORMAL; -- Balance entre seguran\u00e7a e performance</p> <p>-- Ver estat\u00edsticas de mem\u00f3ria PRAGMA memory_map_size = 0;      -- Desativar memory mapping PRAGMA mmap_size = 268435456;    -- 256MB para memory mapping 3. Backup e Recupera\u00e7\u00e3o 3.1. M\u00e9todos de Backup Backup usando SQLite Online Backup API:</p> <p>sql -- Backup program\u00e1tico (exemplo em Python) import sqlite3</p> <p>def backup_database(src_db, dst_db):     src = sqlite3.connect(src_db)     dst = sqlite3.connect(dst_db)</p> <pre><code>with dst:\n    src.backup(dst)\n\nsrc.close()\ndst.close()\n</code></pre>"},{"location":"coelhos/Backend/SQL-SQlite/SQlite-especifico/#uso","title":"Uso","text":"<p>backup_database('prod.db', 'backup.db') Backup via Command Line:</p> <p>bash</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQlite-especifico/#backup-completo","title":"Backup completo","text":"<p>sqlite3 database.db .dump &gt; backup.sql</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQlite-especifico/#backup-apenas-esquema","title":"Backup apenas esquema","text":"<p>sqlite3 database.db .schema &gt; schema_backup.sql</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQlite-especifico/#backup-apenas-dados","title":"Backup apenas dados","text":"<p>sqlite3 database.db .dump --data-only &gt; data_backup.sql</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQlite-especifico/#backup-incremental-usando-dump-com-where","title":"Backup incremental usando .dump com WHERE","text":"<p>sqlite3 database.db \"SELECT * FROM pedidos WHERE data &gt; '2023-01-01'\" &gt; pedidos_recentes.sql 3.2. Recupera\u00e7\u00e3o de Dados sql -- Restaurar de arquivo SQL sqlite3 restored.db &lt; backup.sql</p> <p>-- Restaurar apenas dados espec\u00edficos sqlite3 database.db .read data_backup.sql</p> <p>-- Recupera\u00e7\u00e3o de dados exclu\u00eddos acidentalmente -- (Requer ferramentas externas como sqlite3_undrop) 3.3. Estrat\u00e9gias de Backup Backup Automatizado:</p> <p>sql -- Script de backup com timestamp .backup /var/backups/db_backup_$(date +%Y%m%d_%H%M%S).db</p> <p>-- Backup com reten\u00e7\u00e3o (exemplo em shell)</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQlite-especifico/#binbash","title":"!/bin/bash","text":"<p>BACKUP_DIR=\"/var/backups\" DB_FILE=\"/app/data/database.db\" RETENTION_DAYS=7</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQlite-especifico/#criar-backup","title":"Criar backup","text":"<p>sqlite3 \\(DB_FILE \".backup '\\)BACKUP_DIR/backup_$(date +%Y%m%d_%H%M%S).db'\"</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQlite-especifico/#limpar-backups-antigos","title":"Limpar backups antigos","text":"<p>find \\(BACKUP_DIR -name \"backup_*.db\" -mtime +\\)RETENTION_DAYS -delete 4. Extens\u00f5es do SQLite 4.1. Extens\u00e3o JSON (JSON1) Fun\u00e7\u00f5es JSON dispon\u00edveis:</p> <p>sql -- Extrair dados JSON SELECT json_extract('{\"nome\": \"Jo\u00e3o\", \"idade\": 30}', '$.nome'); -- 'Jo\u00e3o'</p> <p>-- Consultar dados JSON em colunas SELECT id,         json_extract(dados_json, '\\(.email') AS email,        json_extract(dados_json, '\\).endereco.cidade') AS cidade FROM usuarios;</p> <p>-- Fun\u00e7\u00f5es JSON completas SELECT json('{\"id\": 1, \"nome\": \"Teste\"}'); SELECT json_object('id', 1, 'nome', 'Jo\u00e3o'); SELECT json_array(1, 2, 3); SELECT json_group_array(nome) FROM clientes; Exemplo pr\u00e1tico com JSON:</p> <p>sql -- Armazenar dados flex\u00edveis CREATE TABLE configuracoes (     id INTEGER PRIMARY KEY,     chave TEXT UNIQUE,     valor_json TEXT );</p> <p>INSERT INTO configuracoes VALUES  (1, 'usuario', '{\"nome\": \"admin\", \"permissoes\": [\"read\", \"write\"]}');</p> <p>-- Consultar dados JSON SELECT json_extract(valor_json, '$.permissoes[0]') AS permissao FROM configuracoes WHERE chave = 'usuario'; 4.2. Full-Text Search (FTS5) Criando tabelas de busca textual:</p> <p>sql -- Tabela FTS5 CREATE VIRTUAL TABLE documentos USING fts5(     titulo,     conteudo,     autor );</p> <p>-- Inserir dados INSERT INTO documentos VALUES  ('Introdu\u00e7\u00e3o ao SQLite', 'SQLite \u00e9 um banco de dados...', 'Autor1'), ('Busca Full-Text', 'FTS5 permite buscas avan\u00e7adas...', 'Autor2');</p> <p>-- Buscar texto SELECT * FROM documentos WHERE documentos MATCH 'SQLite'; SELECT * FROM documentos WHERE titulo MATCH 'introdu\u00e7\u00e3o';</p> <p>-- Buscas avan\u00e7adas SELECT * FROM documentos WHERE documentos MATCH 'SQLite OR FTS5'; SELECT * FROM documentos WHERE documentos MATCH 'titulo:SQLite'; SELECT * FROM documentos WHERE documentos MATCH 'conteudo:banco NEAR dados'; 4.3. Outras Extens\u00f5es \u00dateis Math Extension:</p> <p>sql -- Habilitar extens\u00e3o matem\u00e1tica .load /usr/lib/sqlite3/libmath.so</p> <p>-- Fun\u00e7\u00f5es matem\u00e1ticas avan\u00e7adas SELECT sin(radians(30));     -- Seno de 30 graus SELECT log10(100);           -- Logaritmo base 10 SELECT power(2, 8);          -- 2^8 = 256 Regex Extension:</p> <p>sql -- Habilitar regex .load /usr/lib/sqlite3/libregexp.so</p> <p>-- Usar regex em consultas SELECT * FROM usuarios WHERE email REGEXP '^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,}$'; SELECT * FROM produtos WHERE nome REGEXP '^[A-Z]'; 5. Recursos Avan\u00e7ados 5.1. Common Table Expressions (CTEs) sql -- CTE recursiva (hierarquia) WITH RECURSIVE hierarquia AS (     -- Caso base     SELECT id, nome, supervisor_id, 1 as nivel     FROM funcionarios     WHERE supervisor_id IS NULL</p> <pre><code>UNION ALL\n\n-- Caso recursivo\nSELECT f.id, f.nome, f.supervisor_id, h.nivel + 1\nFROM funcionarios f\nJOIN hierarquia h ON f.supervisor_id = h.id\n</code></pre> <p>) SELECT * FROM hierarquia ORDER BY nivel, nome;</p> <p>-- CTE para queries complexas WITH vendas_por_mes AS (     SELECT strftime('%Y-%m', data) as mes,            SUM(total) as total_vendas     FROM pedidos     GROUP BY mes ), media_movel AS (     SELECT mes,            total_vendas,            AVG(total_vendas) OVER (ORDER BY mes ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as media_3meses     FROM vendas_por_mes ) SELECT * FROM media_movel; 5.2. Window Functions sql -- Fun\u00e7\u00f5es de janela SELECT nome,         departamento,        salario,        RANK() OVER (PARTITION BY departamento ORDER BY salario DESC) as ranking,        AVG(salario) OVER (PARTITION BY departamento) as media_departamento,        SUM(salario) OVER (ORDER BY data_contratacao) as soma_acumulativa FROM funcionarios;</p> <p>-- Pagina\u00e7\u00e3o eficiente SELECT * FROM (     SELECT *,            ROW_NUMBER() OVER (ORDER BY data_criacao DESC) as row_num     FROM artigos ) WHERE row_num BETWEEN 11 AND 20; 5.3. Triggers Avan\u00e7ados sql -- Trigger para hist\u00f3rico de altera\u00e7\u00f5es CREATE TABLE historico_precos (     id INTEGER PRIMARY KEY,     produto_id INTEGER,     preco_antigo REAL,     preco_novo REAL,     data_alteracao DATETIME DEFAULT CURRENT_TIMESTAMP,     usuario TEXT );</p> <p>CREATE TRIGGER trg_historico_preco AFTER UPDATE OF preco ON produtos FOR EACH ROW WHEN OLD.preco &lt;&gt; NEW.preco BEGIN     INSERT INTO historico_precos (produto_id, preco_antigo, preco_novo, usuario)     VALUES (OLD.id, OLD.preco, NEW.preco, 'sistema'); END; 6. Performance e Otimiza\u00e7\u00e3o 6.1. An\u00e1lise de Desempenho sql -- Habilitar profiling .timer on .echo on</p> <p>-- Analisar query plan EXPLAIN QUERY PLAN SELECT * FROM pedidos  WHERE cliente_id = 100  ORDER BY data_pedido DESC;</p> <p>-- Statistics ANALYZE; SELECT * FROM sqlite_stat1; 6.2. Otimiza\u00e7\u00f5es Espec\u00edficas sql -- Configura\u00e7\u00f5es para performance PRAGMA optimize;                  -- Otimiza\u00e7\u00e3o autom\u00e1tica PRAGMA automatic_index = ON;      -- \u00cdndices autom\u00e1ticos PRAGMA busy_timeout = 3000;       -- Timeout de 3 segundos</p> <p>-- Para opera\u00e7\u00f5es em lote BEGIN TRANSACTION; -- M\u00faltiplas opera\u00e7\u00f5es COMMIT;</p> <p>-- Usar \u00edndices covering CREATE INDEX idx_pedidos_covering ON pedidos(cliente_id, data_pedido, status); 7. Exerc\u00edcios Pr\u00e1ticos Exerc\u00edcio 1: Fun\u00e7\u00f5es de Data sql -- Calcular idade exata dos clientes SELECT nome,         data_nascimento,        FLOOR((julianday('now') - julianday(data_nascimento)) / 365.25) AS idade FROM clientes;</p> <p>-- Pedidos do m\u00eas atual SELECT * FROM pedidos  WHERE strftime('%Y-%m', data_pedido) = strftime('%Y-%m', 'now'); Exerc\u00edcio 2: Full-Text Search sql -- Criar \u00edndice de busca para artigos CREATE VIRTUAL TABLE artigos_fts USING fts5(titulo, conteudo);</p> <p>-- Popular com dados INSERT INTO artigos_fts  SELECT id, titulo, conteudo FROM artigos;</p> <p>-- Buscar artigos sobre \"banco de dados\" SELECT * FROM artigos_fts  WHERE artigos_fts MATCH 'banco NEAR dados'; Exerc\u00edcio 3: Backup e Recovery bash</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQlite-especifico/#script-de-backup-automatizado","title":"Script de backup automatizado","text":""},{"location":"coelhos/Backend/SQL-SQlite/SQlite-especifico/#binbash_1","title":"!/bin/bash","text":"<p>DB=\"app.db\" BACKUP_DIR=\"/backups\" TIMESTAMP=$(date +%Y%m%d_%H%M%S)</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQlite-especifico/#criar-backup_1","title":"Criar backup","text":"<p>sqlite3 \\(DB \".backup '\\)BACKUP_DIR/\\({DB}_\\){TIMESTAMP}.bak'\"</p>"},{"location":"coelhos/Backend/SQL-SQlite/SQlite-especifico/#manter-apenas-ultimos-7-backups","title":"Manter apenas \u00faltimos 7 backups","text":"<p>ls -t $BACKUP_DIR/.bak | tail -n +8 | xargs rm -f /</p> <p><sub>Documenta\u00e7\u00e3o criada por Jo\u00e3o Gonzaga (@Karmantinedev)</sub></p>"},{"location":"coelhos/Figma/","title":"Estudo e Implementa\u00e7\u00e3o: Uso do Figma no Processo de Desenvolvimento","text":""},{"location":"coelhos/Figma/#descricao","title":"\ud83d\udccb Descri\u00e7\u00e3o","text":"<p>Esta issue tem como objetivo estruturar o estudo e a aplica\u00e7\u00e3o pr\u00e1tica do Figma como ferramenta central para o design de interfaces dentro do nosso fluxo de desenvolvimento de software. O foco \u00e9 ir al\u00e9m da cria\u00e7\u00e3o de telas est\u00e1ticas, explorando funcionalidades que permitam a cria\u00e7\u00e3o de prot\u00f3tipos de alta fidelidade, interativos e que sirvam como uma fonte de verdade \u00fanica para desenvolvedores e stakeholders, garantindo fidelidade ao design e melhorando a colabora\u00e7\u00e3o entre times.</p>"},{"location":"coelhos/Figma/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<p>Capacitar a equipe (designers e desenvolvedores) a utilizar o Figma de forma avan\u00e7ada, criando sistemas de design robustos e prot\u00f3tipos fi\u00e9is que agilizem o processo de desenvolvimento, reduzam retrabalho e melhorem a qualidade final do produto.</p>"},{"location":"coelhos/Figma/#topicos-a-serem-explorados-e-aplicados","title":"\ud83d\udccc T\u00f3picos a Serem Explorados e Aplicados","text":""},{"location":"coelhos/Figma/#1-fundamentos-do-figma-para-sistemas-escalaveis","title":"1. Fundamentos do Figma para Sistemas Escal\u00e1veis","text":"<ul> <li> <p>Frames: Domina\u00e7\u00e3o do uso de frames para organizar telas de diferentes dispositivos e resolu\u00e7\u00f5es (Desktop, Mobile, Tablet) ou para design gr\u00e1fico.</p> </li> <li> <p>Layers e Grupos: Boas pr\u00e1ticas de nomea\u00e7\u00e3o e organiza\u00e7\u00e3o de layers para facilitar a handoff para desenvolvimento.</p> </li> <li> <p>Componentes: Cria\u00e7\u00e3o e uso de componentes principais (master components) e inst\u00e2ncias para construir bibliotecas de UI consistentes e reutiliz\u00e1veis (ex: bot\u00f5es, inputs, modais).</p> </li> <li> <p>Auto Layout: Aplica\u00e7\u00e3o intensiva de Auto Layout para criar componentes e telas que sejam flex\u00edveis e adapt\u00e1veis \u00e0 diferentes conte\u00fados e tamanhos de tela, aproximando o layout do CSS real.</p> </li> </ul>"},{"location":"coelhos/Figma/#recurso-audiovisual-sobre-o-uso-basico-de-frameslayerscomponentesauto-layout-httpsyoutubedxzb0bi6uissifiotw8khi3hpuce5","title":"recurso audiovisual sobre o uso b\u00e1sico de frames/layers/componentes/auto layout: https://youtu.be/dXZB0bI6uis?si=FIotw8KHi3hpuce5","text":""},{"location":"coelhos/Figma/#2-tecnicas-de-prototipagem-de-alta-fidelidade","title":"2. T\u00e9cnicas de Prototipagem de Alta Fidelidade","text":"<ul> <li>Sistema de Design: Estabelecer e documentar um guia de estilo diretamente no Figma, incluindo:</li> <li>Cores: Uso de estilos de cores para facilidade de manuten\u00e7\u00e3o e consist\u00eancia.</li> <li>Tipografia: Defini\u00e7\u00e3o de estilos de texto (Font, Size, Weight, Line Height).</li> <li>Espa\u00e7amento: Uso de grades (grids) e regras de espa\u00e7amento consistentes (8px grid, por exemplo).</li> <li>Responsividade: T\u00e9cnicas para prototipar e testar designs em diferentes breakpoints, utilizando constraints e auto layout para simular comportamento responsivo.</li> </ul>"},{"location":"coelhos/Figma/#recurso-audiovisual-sobre-o-uso-basico-de-tecnicas-de-prototipagem-httpsyoutubeal1xsdol4pksiuxmzygrtnj4cxfy3","title":"recurso audiovisual sobre o uso b\u00e1sico de T\u00e9cnicas de Prototipagem: https://youtu.be/Al1xsdol4Pk?si=uXMZYgRtNJ4cxfy3","text":""},{"location":"coelhos/Figma/#3-animacoes-e-interacoes-no-prototipo","title":"3. Anima\u00e7\u00f5es e Intera\u00e7\u00f5es no Prot\u00f3tipo","text":"<ul> <li>Prototipagem Interativa: Utilizar o painel \"Prototype\" para conectar frames e simular o fluxo real da aplica\u00e7\u00e3o (transi\u00e7\u00f5es entre telas, overlays, navega\u00e7\u00e3o).</li> <li>Microintera\u00e7\u00f5es: Explorar a cria\u00e7\u00e3o de anima\u00e7\u00f5es e transi\u00e7\u00f5es de UI (ex: hover states, loading animations, toggles) usando Smart Animate e solu\u00e7\u00f5es criativas.</li> <li>Comunica\u00e7\u00e3o com Devs: Garantir que as especifica\u00e7\u00f5es de anima\u00e7\u00e3o (dura\u00e7\u00e3o, easing, tipo) sejam claramente vis\u00edveis e documentadas para os desenvolvedores implementarem com fidelidade.</li> </ul>"},{"location":"coelhos/Figma/#recurso-audiovisual-sobre-o-uso-basico-de-animacoes-e-interacoes-no-prototipo-httpsyoutubehhp4fgvchjysiceufqhz04bm3evql","title":"recurso audiovisual sobre o uso b\u00e1sico de Anima\u00e7\u00f5es e Intera\u00e7\u00f5es no Prot\u00f3tipo: https://youtu.be/hHp4FGVcHjY?si=CeuFQhZ04bm3evQL","text":""},{"location":"coelhos/Figma/#recursos-uteis-a-mais-sugestao","title":"\ud83d\udd17 Recursos \u00dateis a mais (Sugest\u00e3o)","text":"<ul> <li>Documenta\u00e7\u00e3o Oficial do Figma para pesquisa mais robusta: https://help.figma.com/</li> <li>Curso \"Figmaster\" (Udemy/Coursera) no YouTube.</li> <li>Artigos sobre \"Design Systems no Figma\".</li> </ul> <p><sub>Documenta\u00e7\u00e3o criada por Jo\u00e3o Gonzaga (@Karmantinedev)</sub></p>"},{"location":"coelhos/Frontend/","title":"\ud83c\udfa8 Frontend","text":"<p>Este diret\u00f3rio re\u00fane conte\u00fados sobre o desenvolvimento frontend do projeto, abordando tanto o uso de React com Axios para consumo de APIs quanto o TypeScript para maior tipagem e seguran\u00e7a no c\u00f3digo.</p>"},{"location":"coelhos/Frontend/#estrutura-da-documentacao","title":"\ud83d\udcc2 Estrutura da Documenta\u00e7\u00e3o","text":"<ul> <li> <p>React + Axios   Criado por Luan Ludry (@luanludry)  </p> </li> <li> <p>TypeScript   Criado por Maria Clara (@MariaClara-Canuto)  </p> </li> </ul> <p><sub>Documenta\u00e7\u00e3o colaborativa da pasta Frontend: Luan Ludry (@luanludry) e Maria Clara (@MariaClara-Canuto)</sub></p>"},{"location":"coelhos/Frontend/React-Axios/","title":"INTRODU\u00c7\u00c3O A REACT E AXIOS","text":""},{"location":"coelhos/Frontend/React-Axios/#introducao-a-react-e-axios_1","title":"\ud83d\udcd8 Introdu\u00e7\u00e3o a React e Axios","text":""},{"location":"coelhos/Frontend/React-Axios/#1-o-que-e-o-react","title":"1. O que \u00e9 o React?","text":"<p>O React \u00e9 uma biblioteca JavaScript criada pela Meta para constru\u00e7\u00e3o de interfaces de usu\u00e1rio (UI).</p> <p>Ele \u00e9 baseado em componentes reutiliz\u00e1veis, o que facilita o desenvolvimento de aplica\u00e7\u00f5es modernas e din\u00e2micas.</p>"},{"location":"coelhos/Frontend/React-Axios/#principais-caracteristicas","title":"Principais caracter\u00edsticas:","text":"<ul> <li>Componentiza\u00e7\u00e3o: cada parte da interface \u00e9 um componente independente.</li> <li>JSX: permite escrever HTML dentro do JavaScript.</li> <li>Virtual DOM: melhora a performance atualizando apenas os elementos que mudaram.</li> <li>Unidirecionalidade: o fluxo de dados acontece de forma previs\u00edvel (top-down).</li> </ul>"},{"location":"coelhos/Frontend/React-Axios/#exemplo","title":"Exemplo:","text":"<pre><code>import React from \"react\";\n\nfunction App() {\n  return (\n    &lt;div&gt;\n      &lt;h1&gt;Ol\u00e1, mundo com React!&lt;/h1&gt;\n    &lt;/div&gt;\n  );\n}\n\nexport default App;\n</code></pre>"},{"location":"coelhos/Frontend/React-Axios/#2-o-que-e-axios","title":"2. O que \u00e9 Axios?","text":"<p>O Axios \u00e9 uma biblioteca para fazer requisi\u00e7\u00f5es HTTP (GET, POST, PUT, DELETE, etc.) no navegador e no Node.js.</p> <p>\u00c9 muito util em conjunto com React para buscar e enviar dados a APIs.</p>"},{"location":"coelhos/Frontend/React-Axios/#principais-caracteristicas_1","title":"Principais caracter\u00edsticas:","text":"<ul> <li>Suporte a Promises.</li> <li>Mais simples que o <code>fetch</code>.</li> <li>Suporta interceptadores (para autentica\u00e7\u00e3o, logs, etc.).</li> <li>Facilita o tratamento de erros.</li> </ul> <p>Para a instala\u00e7\u00e3o:</p> <pre><code>npm install axios\n</code></pre>"},{"location":"coelhos/Frontend/React-Axios/#3-vantagem-de-usar-react-com-axios","title":"3. Vantagem de usar React com Axios","text":"<p>A vantagem de usar React junto com Axios \u00e9 que eles se complementam muito bem:</p> <ul> <li>O React organiza a interface em componentes reutiliz\u00e1veis e atualiza a tela de forma eficiente com o Virtual DOM.</li> <li>O Axios resolve a parte de comunica\u00e7\u00e3o com APIs, permitindo buscar ou enviar dados de forma simples.</li> </ul> <p>Unindo os dois:</p> <ul> <li>Voc\u00ea consegue buscar dados de uma API (por exemplo, lista de produtos, usu\u00e1rios, posts) com Axios.</li> <li>Esses dados podem ser armazenados no estado do React (<code>useState</code>) e exibidos de forma reativa nos componentes.</li> <li>Se os dados mudarem (como ap\u00f3s um <code>POST</code> ou <code>DELETE</code>), o React atualiza automaticamente a interface, sem voc\u00ea precisar manipular a DOM manualmente.</li> </ul>"},{"location":"coelhos/Frontend/React-Axios/#4-dicas","title":"4. Dicas","text":"<p>O Cursor AI, editor de c\u00f3digo que o grupo que apresentou em sala o projeto do semestre passado, \u00e9 muito recomendado para quem est\u00e1 come\u00e7ando a programar React + Axios.</p>"},{"location":"coelhos/Frontend/React-Axios/#vantagens","title":"Vantagens","text":"<ul> <li>Gera\u00e7\u00e3o de chamadas prontas: \u00e9 poss\u00edvel solicitar, por exemplo, \u201cfa\u00e7a um hook React que use Axios para buscar usu\u00e1rios de uma API\u201d, e o Cursor gera a fun\u00e7\u00e3o completa.</li> <li>Tratamento de erros autom\u00e1tico: muitas vezes o desenvolvedor esquece de lidar com exce\u00e7\u00f5es (<code>try/catch</code>, <code>.catch</code>), e o Cursor j\u00e1 sugere essas boas pr\u00e1ticas.</li> <li>Integra\u00e7\u00e3o com o estado do React: a ferramenta entende o uso de hooks como <code>useState</code> e <code>useEffect</code>, construindo diretamente a l\u00f3gica de busca e atualiza\u00e7\u00e3o de dados.</li> <li>Documenta\u00e7\u00e3o em tempo real: caso o programador n\u00e3o se recorde da sintaxe do Axios, basta selecionar o trecho para receber uma explica\u00e7\u00e3o.</li> <li>Refatora\u00e7\u00e3o inteligente: se houver repeti\u00e7\u00e3o de chamadas \u00e0 API, o Cursor sugere a cria\u00e7\u00e3o de um servi\u00e7o separado (ex.: <code>api.js</code>), melhorando a organiza\u00e7\u00e3o do c\u00f3digo.</li> <li> <p>Aux\u00edlio em autentica\u00e7\u00e3o: ele ajuda a configurar interceptadores do Axios, como no uso de tokens JWT, sem necessidade de memorizar toda a sintaxe.</p> <p>Dessa forma, mesmo com tempo limitado, o Cursor pode acelerar o progresso do desenvolvimento e contribuir para que o c\u00f3digo final tenha mais qualidade e boas pr\u00e1ticas.</p> <p>A instala\u00e7\u00e3o \u00e9 bem simples, \u00e9 so acessar o site https://cursor.com/, a configura\u00e7\u00e3o \u00e9 bem simples</p> </li> </ul>"},{"location":"coelhos/Frontend/React-Axios/#referencias","title":"Refer\u00eancias:","text":"<p>Para as refer\u00eancias de react e axios eu usei a forma\u00e7\u00e3o Front-end- HTML, css, javaScript, React e + da Udemy</p> <p>Para o cursor:</p> <ul> <li>https://www.youtube.com/watch?v=Rgz6mX93C4Y&amp;ab_channel=CorbinBrown</li> <li>https://youtu.be/-Olw8ytbSZw?si=6wMEzcXmisAXfS0w</li> <li>https://youtu.be/mGNm6GtoWuU?si=tZ3MS-Pwffwyc0WY</li> <li>O gpt tem bons prompts para o cursor</li> </ul> <p><sub>Documenta\u00e7\u00e3o criada por Luan Ludry (@luanludry)</sub></p>"},{"location":"coelhos/Frontend/Typescript/","title":"Estudo de Typescript aplicado a React","text":"<p>Este documento tem o objetivo de fornecer as anota\u00e7\u00f5es sobre o uso do TypeScript ou Tsx aplicado \u00e1 web utilizando React como framework.</p>"},{"location":"coelhos/Frontend/Typescript/#pre-requisitos","title":"Pre-requisitos","text":"<ul> <li>Git Instalado</li> <li>Node.js Instalado (vers\u00e3o LTS)</li> <li>Conhecimento b\u00e1sico de Javascript</li> <li>Ambiente de Desenvolvimento Integrado (IDE)</li> </ul>"},{"location":"coelhos/Frontend/Typescript/#instalacao","title":"Instala\u00e7\u00e3o","text":"<ul> <li>Abra o git bash, ou o terminal, e verifique a sua vers\u00e3o do node.js <code>$ node -v</code></li> </ul> <p>Deve retornar a vers\u00e3o instalada mais recente, caso retorne um erro, no Linux rode o comando a baixo. No Windows, baixe o node.js no site oficial</p> <pre><code>curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash - \nsudo apt-get install -y nodejs\n</code></pre> <ul> <li> <p>Com o node.js instalado corretamente, abra o git bash ou o terminal e digite o comando: <code>$ npm install -g typescript</code></p> </li> <li> <p>Se for desejado instalar a linguagem localmente em um projeto, v\u00e1 para o diret\u00f3rio do seu projeto e instale o Typescript como uma depend\u00eancia: <code>$ npm install --save-dev typescript</code></p> </li> <li> <p>(Opicional) Inicialize a configura\u00e7\u00e3o do Typescript, dessa forma \u00e9 poss\u00edvel configurar o comportamento do compilador <code>$ npx tsc --init</code></p> </li> </ul>"},{"location":"coelhos/Frontend/Typescript/#configuracao-do-tsconfigjson-para-react","title":"Configura\u00e7\u00e3o do tsconfig.json para React","text":"<p>Para projetos React com TypeScript, o <code>tsconfig.json</code> define como o compilador interpreta seu c\u00f3digo. Um exemplo b\u00e1sico de configura\u00e7\u00e3o:</p> <pre><code>{\n  \"compilerOptions\": {\n    \"target\": \"ES6\",                        // Vers\u00e3o do JavaScript de sa\u00edda\n    \"lib\": [\"DOM\", \"DOM.Iterable\", \"ESNext\"], // Bibliotecas dispon\u00edveis\n    \"allowJs\": true,                         // Permitir arquivos .js\n    \"skipLibCheck\": true,                     // Ignorar checagem de bibliotecas externas\n    \"esModuleInterop\": true,                 // Importa\u00e7\u00f5es compat\u00edveis com CommonJS\n    \"allowSyntheticDefaultImports\": true,    // Importa\u00e7\u00e3o padr\u00e3o de m\u00f3dulos\n    \"strict\": true,                           // Habilitar checagem estrita de tipos\n    \"forceConsistentCasingInFileNames\": true,// Evitar conflitos de mai\u00fasculas/min\u00fasculas\n    \"module\": \"ESNext\",                       // Tipo de m\u00f3dulo\n    \"moduleResolution\": \"Node\",               // Resolu\u00e7\u00e3o de m\u00f3dulos\n    \"resolveJsonModule\": true,                // Importar arquivos JSON\n    \"isolatedModules\": true,                  // Necess\u00e1rio para projetos React\n    \"noEmit\": true,                           // N\u00e3o emitir arquivos .js (usado com Babel/React Scripts)\n    \"jsx\": \"react-jsx\"                        // Transforma\u00e7\u00e3o JSX (React 17+)\n  },\n  \"include\": [\"src\"],                         // Pastas inclu\u00eddas na compila\u00e7\u00e3o\n  \"exclude\": [\"node_modules\"]                 // Pastas exclu\u00eddas\n}\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#integracao-com-bibliotecas-e-apis-externas","title":"Integra\u00e7\u00e3o com Bibliotecas e APIs Externas","text":"<p>Em aplica\u00e7\u00f5es React modernas, \u00e9 comum precisar integrar bibliotecas externas (como Axios, Lodash, Moment.js) ou consumir APIs externas (REST ou GraphQL). O TypeScript ajuda garantindo tipos corretos para dados e fun\u00e7\u00f5es, evitando erros e facilitando o autocompletar.</p>"},{"location":"coelhos/Frontend/Typescript/#integracao-com-bibliotecas-externas","title":"\ud83d\udd39 Integra\u00e7\u00e3o com Bibliotecas Externas","text":""},{"location":"coelhos/Frontend/Typescript/#1-instalando-bibliotecas","title":"1. Instalando bibliotecas","text":"<p>Exemplo com Axios para requisi\u00e7\u00f5es HTTP:</p> <pre><code>npm install axios\nnpm install --save-dev @types/axios\n</code></pre> <p>Muitas bibliotecas j\u00e1 v\u00eam com tipos embutidos. Se n\u00e3o tiver, podemos usar @types/nome-da-biblioteca.</p>"},{"location":"coelhos/Frontend/Typescript/#2-uso-com-tipagem","title":"2. Uso com tipagem","text":"<pre><code>import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n\ntype Usuario = {\n  id: number;\n  nome: string;\n  email: string;\n};\n\nfunction ListaUsuarios() {\n  const [usuarios, setUsuarios] = useState&lt;Usuario[]&gt;([]);\n\n  useEffect(() =&gt; {\n    axios.get&lt;Usuario[]&gt;(\"https://jsonplaceholder.typicode.com/users\")\n      .then(res =&gt; setUsuarios(res.data))\n      .catch(err =&gt; console.error(err));\n  }, []);\n\n  return (\n    &lt;ul&gt;\n      {usuarios.map(u =&gt; (\n        &lt;li key={u.id}&gt;{u.nome} - {u.email}&lt;/li&gt;\n      ))}\n    &lt;/ul&gt;\n  );\n}\n</code></pre> <p>Tipar a resposta da API (axios.get) evita erros de acesso a propriedades inexistentes."},{"location":"coelhos/Frontend/Typescript/#integracao-com-apis-externas","title":"\ud83d\udd39 Integra\u00e7\u00e3o com APIs externas","text":""},{"location":"coelhos/Frontend/Typescript/#1-fetch-api-com-tipagem","title":"1. Fetch API com tipagem","text":"<pre><code>import React, { useEffect, useState } from \"react\";\n\ntype Post = {\n  id: number;\n  title: string;\n  body: string;\n};\n\nfunction ListaPosts() {\n  const [posts, setPosts] = useState&lt;Post[]&gt;([]);\n\n  useEffect(() =&gt; {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\n      .then(res =&gt; res.json())\n      .then((data: Post[]) =&gt; setPosts(data))\n      .catch(err =&gt; console.error(err));\n  }, []);\n\n  return (\n    &lt;div&gt;\n      {posts.map(p =&gt; (\n        &lt;div key={p.id}&gt;\n          &lt;h3&gt;{p.title}&lt;/h3&gt;\n          &lt;p&gt;{p.body}&lt;/p&gt;\n        &lt;/div&gt;\n      ))}\n    &lt;/div&gt;\n  );\n}\n</code></pre> <p>Use try/catch ou .catch para tratar erros e evitar crash da aplica\u00e7\u00e3o.</p>"},{"location":"coelhos/Frontend/Typescript/#2-criando-um-hook-para-requisicoes-reutilizaveis","title":"2. Criando um Hook para Requisi\u00e7\u00f5es Reutiliz\u00e1veis","text":"<pre><code>import { useState, useEffect } from \"react\";\n\nfunction useFetch&lt;T&gt;(url: string) {\n  const [data, setData] = useState&lt;T | null&gt;(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState&lt;string | null&gt;(null);\n\n  useEffect(() =&gt; {\n    setLoading(true);\n    fetch(url)\n      .then(res =&gt; res.json())\n      .then((res: T) =&gt; setData(res))\n      .catch(err =&gt; setError(err.message))\n      .finally(() =&gt; setLoading(false));\n  }, [url]);\n\n  return { data, loading, error };\n}\n\n// Uso do hook\ntype Produto = { id: number; nome: string; preco: number };\n\nfunction ListaProdutos() {\n  const { data: produtos, loading, error } = useFetch&lt;Produto[]&gt;(\"https://api.exemplo.com/produtos\");\n\n  if (loading) return &lt;p&gt;Carregando...&lt;/p&gt;;\n  if (error) return &lt;p&gt;Erro: {error}&lt;/p&gt;;\n\n  return (\n    &lt;ul&gt;\n      {produtos?.map(p =&gt; (\n        &lt;li key={p.id}&gt;{p.nome} - R$ {p.preco}&lt;/li&gt;\n      ))}\n    &lt;/ul&gt;\n  );\n}\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#boas-praticas","title":"\ud83d\udd39 Boas Pr\u00e1ticas","text":"<ul> <li>Sempre tipar a resposta da API com type ou interface.</li> <li>Tratar erros usando try/catch ou .catch.</li> <li>Criar hooks reutiliz\u00e1veis para requisi\u00e7\u00f5es frequentes.</li> <li>Usar bibliotecas com tipos embutidos ou @types/....</li> <li>Evitar manipular dados da API diretamente sem checagem de tipos.</li> </ul>"},{"location":"coelhos/Frontend/Typescript/#tipos-basicos-e-avancados","title":"Tipos b\u00e1sicos e Avan\u00e7ados","text":""},{"location":"coelhos/Frontend/Typescript/#tipos-basicos","title":"\ud83d\udd39 Tipos b\u00e1sicos","text":"<p>A seguir, segue os tipos mais comuns, utilizados no dia a dia</p>"},{"location":"coelhos/Frontend/Typescript/#1-string-textos","title":"1. <code>String</code> - Textos","text":"<p><code>let nome: string = \"Mario\";</code></p>"},{"location":"coelhos/Frontend/Typescript/#2-number-inteiros-e-decimais","title":"2. <code>Number</code> - Inteiros e Decimais","text":"<p><code>let idade: number = 15;</code></p>"},{"location":"coelhos/Frontend/Typescript/#3-boolean-verdadeiro-ou-falso","title":"3. <code>Boolean</code> - Verdadeiro ou Falso","text":"<p><code>let ativo: boolean = true;</code></p>"},{"location":"coelhos/Frontend/Typescript/#4-null-e-unidentified","title":"4. <code>Null</code> e <code>Unidentified</code>","text":"<pre><code>vazio: null = null;\nlet indefinido: unidentified = unidentified;\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#5-any-aceita-qualquer-tipo","title":"5. <code>Any</code> - Aceita qualquer tipo","text":"<pre><code>let dado: any = \"texto\"; \ndado = 10; \\\\v\u00e1lido\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#6-unknown-similar-ao-any-mas-requer-checagem-de-tipo-antes-de-usar","title":"6. <code>Unknown</code> - Similar ao any mas requer checagem de tipo antes de usar","text":"<pre><code>let valor: unknown = \"texto\"; \nif(typeof valor == \"string\") {\n    console.log(valor.toUpperCase());\n    }\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#7-void-usado-em-funcoes-que-nao-retornam-valor","title":"7. <code>Void</code> - Usado em fun\u00e7\u00f5es que n\u00e3o retornam valor","text":"<pre><code>function: logar(): void {\n    console.log(\"Executando...\")\n};\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#8-object-qualquer-objeto-nao-primitivo","title":"8. <code>Object</code> - Qualquer objeto n\u00e3o primitivo","text":"<pre><code>let pessoa: object = { nome: \"Ana\", idade: 22 };\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#9-never-funcoes-que-nunca-retornam-lancam-erro-ou-loop-infinito","title":"9. <code>Never</code> - Fun\u00e7\u00f5es que nunca retornam (lan\u00e7am erro ou loop infinito)","text":"<p><code>function erro(msg: string): never {throw new Error(msg);}</code></p>"},{"location":"coelhos/Frontend/Typescript/#10-array","title":"10. <code>Array</code>","text":"<pre><code>let numeros: number[] = [1, 2, 3];\nlet nomes: Array&lt;string&gt; = [\"Ana\", \"Jo\u00e3o\"];\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#11-tupla-array-com-tamanho-e-tipos-fixos","title":"11. <code>Tupla</code> - Array com tamanho e tipos fixos","text":"<p><code>let tupla: [string, number] = [\"idade\", 30];</code></p>"},{"location":"coelhos/Frontend/Typescript/#tipos-avancados","title":"\ud83d\udd39 Tipos Avan\u00e7ados","text":""},{"location":"coelhos/Frontend/Typescript/#1-interface-contrato-para-objetos","title":"1. <code>Interface</code> - Contrato para objetos","text":"<pre><code>interface Usuario {nome: string; idade: number;}\nlet u: Usuario = { nome: \"Carlos\", idade: 30 };\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#2-enum-conjunto-de-valores-nomeados","title":"2. <code>Enum</code> \u2013 Conjunto de valores nomeados","text":"<pre><code>enum Cores {Vermelho, Verde,Azul}\nlet cor: Cores = Cores.Verde;\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#3-union-variavel-pode-ter-multiplos-tipos","title":"3. <code>Union</code> (|) \u2013 Vari\u00e1vel pode ter m\u00faltiplos tipos","text":"<pre><code>let id: number | string; id = 123; \nid = \"ABC123\";\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#4-intersection-combina-tipos","title":"4. <code>Intersection</code> (&amp;) \u2013 Combina tipos","text":"<pre><code>type Pessoa = { nome: string }; \ntype Funcionario = { salario: number }; type Empregado = Pessoa &amp; Funcionario;\nlet joao: Empregado = { nome: \"Jo\u00e3o\", salario: 5000 };\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#5-type-aliases-apelidos-para-tipos-complexos","title":"5. <code>Type Aliases</code> \u2013 Apelidos para tipos complexos","text":"<pre><code>type ID = string | number;\nlet userId: ID = 42;\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#6-generics-tipos-genericos-reutilizaveis","title":"6. <code>Generics</code> \u2013 Tipos gen\u00e9ricos reutiliz\u00e1veis","text":"<pre><code>function identidade&lt;T&gt;(valor: T): T {return valor;}\nlet numero = identidade&lt;number&gt;(10);\nlet texto = identidade&lt;string&gt;(\"Oi\");\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#7-literal-types-restringe-valores-possiveis","title":"7. <code>Literal</code> types \u2013 Restringe valores poss\u00edveis","text":"<pre><code>let direcao: \"norte\" | \"sul\" | \"leste\" | \"oeste\"; \ndirecao = \"norte\";\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#8-optional-e-nullable","title":"8. <code>Optional</code> e <code>Nullable</code>","text":"<pre><code>function ola(nome?: string) {\n    console.log(\"Ol\u00e1 \" + (nome ?? \"visitante\"));\n}\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#9-type-assertion-forcar-tipo","title":"9. <code>Type assertion</code> \u2013 for\u00e7ar tipo","text":"<pre><code>let valorDesconhecido: unknown = \"texto\";\nlet tamanho: number = (valorDesconhecido as string).length;\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#10-mapped-type-criar-tipos-a-partir-de-outros","title":"10. <code>Mapped</code> type \u2013 Criar tipos a partir de outros","text":"<pre><code>UsuarioBase = { nome: string; idade: number }; \ntype Parcial&lt;T&gt; = { [K in keyof T]?: T[K] };\nlet u1: Parcial&lt;UsuarioBase&gt; = { nome: \"Jo\u00e3o\" };\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#11-utility-types-utilitarios-prontos-do","title":"11. <code>Utility</code> types \u2013 utilit\u00e1rios prontos do","text":"<pre><code>interface Pessoa {nome: string; idade: number; email?: string}\nlet p1: Partial&lt;Pessoa&gt; = { nome: \"Lucas\" };// todos opcionais\nlet p2: Required&lt;Pessoa&gt; = { nome: \"Ana\", idade: 20, email: \"a@b.com\" }; // todos obrigat\u00f3rios\nlet p3: Readonly&lt;Pessoa&gt; = { nome: \"Marcos\", idade: 30 }; // somente leitura\nlet p4: Pick&lt;Pessoa, \"nome\"&gt; = { nome: \"Sofia\" };  // pega apenas \"nome\"\nlet p5: Omit&lt;Pessoa, \"email\"&gt; = { nome: \"Leo\", idade: 22 }; // remove \"email\"\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#tipagem-de-props-e-estados-em-react-com-tsx","title":"Tipagem de props e estados em React com Tsx","text":"<p>No React com TypeScript, tipar props e estados \u00e9 essencial para garantir que os componentes recebam e manipulem os dados corretos, evitando erros em tempo de compila\u00e7\u00e3o.</p>"},{"location":"coelhos/Frontend/Typescript/#tipagem-de-props","title":"\ud83d\udd39 Tipagem de Props","text":"<p>Props s\u00e3o propriedades que um componente recebe de outro componente pai. A tipagem das props define quais dados e tipos s\u00e3o esperados, permitindo autocompletar e checar tipos.</p>"},{"location":"coelhos/Frontend/Typescript/#1-usando-type","title":"1. Usando <code>type</code>","text":"<pre><code>type BotaoProps = {\n  texto: string;\n  onClick: () =&gt; void;\n};\n\nfunction Botao({ texto, onClick }: BotaoProps) {\n  return &lt;button onClick={onClick}&gt;{texto}&lt;/button&gt;;\n}\n\n&lt;Botao texto=\"Clique aqui\" onClick={() =&gt; alert(\"Clicou!\")} /&gt;;\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#2-usando-interface","title":"2. Usando <code>interface</code>","text":"<pre><code>interface CardProps {\n  titulo: string;\n  conteudo: string;\n  destacado?: boolean; // opcional\n}\n\nfunction Card({ titulo, conteudo, destacado = false }: CardProps) {\n  return (\n    &lt;div style={{ border: destacado ? \"2px solid red\" : \"1px solid gray\" }}&gt;\n      &lt;h3&gt;{titulo}&lt;/h3&gt;\n      &lt;p&gt;{conteudo}&lt;/p&gt;\n    &lt;/div&gt;\n  );\n}\n\n&lt;Card titulo=\"Nota\" conteudo=\"Exemplo de card\" /&gt;;\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#3-props-com-children","title":"3. Props com <code>children</code>","text":"<pre><code>type LayoutProps = {\n  children: React.ReactNode;\n};\n\nfunction Layout({ children }: LayoutProps) {\n  return &lt;div className=\"layout\"&gt;{children}&lt;/div&gt;;\n}\n\n&lt;Layout&gt;\n  &lt;h1&gt;Ol\u00e1 Mundo&lt;/h1&gt;\n&lt;/Layout&gt;;\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#tipagem-de-estado-usestate","title":"\ud83d\udd39 Tipagem de Estado <code>useState</code>","text":"<p>O estado \u00e9 um dado interno do componente que pode mudar ao longo do tempo. Tipar o estado garante que voc\u00ea atribua valores compat\u00edveis.</p>"},{"location":"coelhos/Frontend/Typescript/#1-estado-simples","title":"1. Estado Simples","text":"<pre><code>import { useState } from \"react\";\n\nfunction Toggle() {\n  // Estado booleano simples\n  const [visivel, setVisivel] = useState&lt;boolean&gt;(false);\n\n  return (\n    &lt;div&gt;\n        &lt;button onClick={() =&gt; setVisivel(!visivel)}&gt;\n            {visivel ? \"Ocultar\" : \"Mostrar\"} Mensagem\n        &lt;/button&gt;\n\n        {visivel &amp;&amp; &lt;p&gt;\ud83c\udf89 Agora voc\u00ea est\u00e1 vendo esta mensagem!&lt;/p&gt;}\n    &lt;/div&gt;\n    )\n}\n\nexport default Toggle;\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#2-estado-com-objeto","title":"2. Estado com objeto","text":"<pre><code>type Usuario = {\n  nome: string;\n  idade: number;\n};\n\nfunction Perfil() {\n  const [usuario, setUsuario] = useState&lt;Usuario | null&gt;(null);\n\n  return (\n    &lt;div&gt;\n      &lt;button\n        onClick={() =&gt; setUsuario({ nome: \"Ana\", idade: 25 })}\n      &gt;\n        Carregar Usu\u00e1rio\n      &lt;/button&gt;\n\n      {usuario &amp;&amp; &lt;p&gt;{usuario.nome} - {usuario.idade} anos&lt;/p&gt;}\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#3-estado-com-array-tipado","title":"3. Estado com Array tipado","text":"<pre><code>function Lista() {\n  const [itens, setItens] = useState&lt;string[]&gt;([]);\n\n  return (\n    &lt;div&gt;\n      &lt;button onClick={() =&gt; setItens([...itens, \"Novo item\"])}&gt;\n        Adicionar\n      &lt;/button&gt;\n      &lt;ul&gt;\n        {itens.map((item, index) =&gt; (\n          &lt;li key={index}&gt;{item}&lt;/li&gt;\n        ))}\n      &lt;/ul&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#dicas","title":"\ud83d\udd39 Dicas","text":"<ul> <li>Sempre prefira type ou interface para descrever props e estados complexos.</li> <li>Use union types para restringir valores poss\u00edveis em props.</li> <li>Tipar o useState ajuda a evitar estados undefined inesperados.</li> <li>Para children, use React.ReactNode.</li> <li>Para eventos, utilize os tipos do React:</li> </ul> <p><code>React.ChangeEvent&lt;HTMLInputElement&gt;</code> <code>React.MouseEvent&lt;HTMLButtonElement&gt;</code> <code>React.FormEvent&lt;HTMLFormElement&gt;</code></p>"},{"location":"coelhos/Frontend/Typescript/#funcoes-e-generics-em-typescript","title":"Fun\u00e7\u00f5es e Generics em TypeScript","text":""},{"location":"coelhos/Frontend/Typescript/#funcoes","title":"\ud83d\udd39 Fun\u00e7\u00f5es","text":"<p>No tsx, as fun\u00e7\u00f5es funcionam da mesma maneira que no Javascript por\u00e9m permite a tipagem da entrada e do returno da fun\u00e7\u00e3o.</p>"},{"location":"coelhos/Frontend/Typescript/#1-declaracao-de-funcao-com-tipagem","title":"1. Declara\u00e7\u00e3o de fun\u00e7\u00e3o com tipagem","text":"<pre><code>function soma(a: number, b: number): number {\n  return a + b;\n}\n\nlet resultado = soma(2, 3); // 5\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#2-funcoes-anonimas-arrow-function","title":"2. Fun\u00e7\u00f5es an\u00f4nimas (arrow function)","text":"<pre><code>const multiplicar = (x: number, y: number): number =&gt; {\n  return x * y;\n};\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#3-parametros-opcionais","title":"3. Par\u00e2metros opcionais","text":"<pre><code>function saudacao(nome: string, saudacao?: string): string {\n  return `${saudacao ?? \"Ol\u00e1\"}, ${nome}`;\n}\n\nsaudacao(\"Ana\"); // \"Ol\u00e1, Ana\"\nsaudacao(\"Ana\", \"Bem-vinda\"); // \"Bem-vinda, Ana\"\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#4-parametros-com-valor-padrao","title":"4. Par\u00e2metros com valor padr\u00e3o","text":"<pre><code>function potencia(base: number, expoente: number = 2): number {\n  return base ** expoente;\n}\n\npotencia(3); // 9\npotencia(2, 3); // 8\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#5-funcoes-que-nao-retornam-valor-void","title":"5. Fun\u00e7\u00f5es que n\u00e3o retornam valor (<code>void</code>)","text":"<pre><code>function logar(mensagem: string): void {\n  console.log(mensagem);\n}\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#6-funcoes-que-nunca-retornam-never","title":"6. Fun\u00e7\u00f5es que nunca retornam (<code>never</code>)","text":"<pre><code>function erro(mensagem: string): never {\n  throw new Error(mensagem);\n}\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#generics","title":"\ud83d\udd39 Generics","text":"<p>Generics permitem criar fun\u00e7\u00f5es, hooks ou componentes que funcionam com v\u00e1rios tipos, mantendo a tipagem forte.</p>"},{"location":"coelhos/Frontend/Typescript/#1-funcao-generica","title":"1. Fun\u00e7\u00e3o gen\u00e9rica","text":"<pre><code>function identidade&lt;T&gt;(valor: T): T {\n  return valor;\n}\n\nlet numero = identidade&lt;number&gt;(10);\nlet texto = identidade&lt;string&gt;(\"Oi\");\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#2-array-generico","title":"2. Array gen\u00e9rico","text":"<pre><code>function primeiroElemento&lt;T&gt;(arr: T[]): T | undefined {\n  return arr[0];\n}\n\nlet primeiro = primeiroElemento([1, 2, 3]); // 1\nlet palavra = primeiroElemento([\"a\", \"b\", \"c\"]); // \"a\"\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#3-restricao-de-tipo-extends","title":"3. Restri\u00e7\u00e3o de tipo (<code>extends</code>)","text":"<pre><code>function obterTamanho&lt;T extends { length: number }&gt;(obj: T): number {\n  return obj.length;\n}\n\nobterTamanho(\"Hello\"); // 5\nobterTamanho([1, 2, 3]); // 3\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#4-generics-em-interfaces","title":"4. Generics em interfaces","text":"<pre><code>interface RespostaApi&lt;T&gt; {\n  dados: T;\n  sucesso: boolean;\n}\n\nlet respostaUsuario: RespostaApi&lt;{ nome: string; idade: number }&gt; = {\n  dados: { nome: \"Ana\", idade: 25 },\n  sucesso: true,\n};\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#5-generics-em-classes","title":"5. Generics em classes","text":"<pre><code>class Caixa&lt;T&gt; {\n  private valor: T;\n\n  constructor(valor: T) {\n    this.valor = valor;\n  }\n\n  getValor(): T {\n    return this.valor;\n  }\n}\n\nlet caixaNumero = new Caixa&lt;number&gt;(100);\nlet caixaTexto = new Caixa&lt;string&gt;(\"Gen\u00e9rico\");\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#hooks-com-typescript","title":"Hooks com TypeScript","text":"<p>Hooks s\u00e3o fun\u00e7\u00f5es especiais do React que permitem usar o estado e outros recursos em componentes funcionais sem a necessidade de criar classes espec\u00edficas.  O Typescript permite a tipagem de estados, fun\u00e7\u00f5es e contextos nos hooks.</p>"},{"location":"coelhos/Frontend/Typescript/#usestate","title":"\ud83d\udd39 useState","text":"<p>O <code>useState</code> precisa ser tipado quando o TypeScript n\u00e3o consegue inferir automaticamente o tipo.</p>"},{"location":"coelhos/Frontend/Typescript/#1-estado-simples-number","title":"1. Estado simples (number)","text":"<pre><code>import { useState } from \"react\";\n\nfunction Contador() {\n  const [contador, setContador] = useState&lt;number&gt;(0);\n\n  return (\n    &lt;div&gt;\n      &lt;p&gt;Valor: {contador}&lt;/p&gt;\n      &lt;button onClick={() =&gt; setContador(contador + 1)}&gt;Incrementar&lt;/button&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#2-estado-booleano","title":"2. Estado booleano","text":"<pre><code>function Toggle() {\n  const [visivel, setVisivel] = useState&lt;boolean&gt;(false);\n\n  return (\n    &lt;div&gt;\n      &lt;button onClick={() =&gt; setVisivel(!visivel)}&gt;\n        {visivel ? \"Ocultar\" : \"Mostrar\"} Mensagem\n      &lt;/button&gt;\n      {visivel &amp;&amp; &lt;p&gt;\ud83c\udf89 Agora voc\u00ea est\u00e1 vendo a mensagem!&lt;/p&gt;}\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#3-estado-com-objeto","title":"3. Estado com objeto","text":"<pre><code>type Usuario = {\n  nome: string;\n  idade: number;\n};\n\nfunction Perfil() {\n  const [usuario, setUsuario] = useState&lt;Usuario | null&gt;(null);\n\n  return (\n    &lt;div&gt;\n      &lt;button onClick={() =&gt; setUsuario({ nome: \"Ana\", idade: 25 })}&gt;\n        Carregar Usu\u00e1rio\n      &lt;/button&gt;\n      {usuario &amp;&amp; &lt;p&gt;{usuario.nome} - {usuario.idade} anos&lt;/p&gt;}\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#4-estado-com-array","title":"4. Estado com array","text":"<pre><code>function Lista() {\n  const [itens, setItens] = useState&lt;string[]&gt;([]);\n\n  return (\n    &lt;div&gt;\n      &lt;button onClick={() =&gt; setItens([...itens, \"Novo item\"])}&gt;\n        Adicionar\n      &lt;/button&gt;\n      &lt;ul&gt;\n        {itens.map((item, i) =&gt; &lt;li key={i}&gt;{item}&lt;/li&gt;)}\n      &lt;/ul&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#useeffect","title":"\ud83d\udd39 useEffect","text":"<pre><code>O `useEffect` executa efeitos colaterais como requisi\u00e7\u00f5es, timers e subscri\u00e7\u00f5es.\n</code></pre> <pre><code>import { useState, useEffect } from \"react\";\n\nfunction Relogio() {\n  const [hora, setHora] = useState&lt;Date&gt;(new Date());\n\n  useEffect(() =&gt; {\n    const timer = setInterval(() =&gt; setHora(new Date()), 1000);\n\n    return () =&gt; clearInterval(timer); // cleanup\n  }, []);\n\n  return &lt;h2&gt;{hora.toLocaleTimeString()}&lt;/h2&gt;;\n}\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#usecontext","title":"\ud83d\udd39 useContext","text":"<p>O <code>useContext</code> permite compartilhar estado global sem precisar passar props manualmente.</p> <pre><code>import { createContext, useContext, useState } from \"react\";\n\ntype Tema = \"claro\" | \"escuro\";\n\nconst TemaContext = createContext&lt;{\n  tema: Tema;\n  alternar: () =&gt; void;\n}&gt;({\n  tema: \"claro\",\n  alternar: () =&gt; {},\n});\n\nfunction TemaProvider({ children }: { children: React.ReactNode }) {\n  const [tema, setTema] = useState&lt;Tema&gt;(\"claro\");\n\n  const alternar = () =&gt; setTema(tema === \"claro\" ? \"escuro\" : \"claro\");\n\n  return (\n    &lt;TemaContext.Provider value={{ tema, alternar }}&gt;\n      {children}\n    &lt;/TemaContext.Provider&gt;\n  );\n}\n\nfunction BotaoTema() {\n  const { tema, alternar } = useContext(TemaContext);\n  return &lt;button onClick={alternar}&gt;Tema atual: {tema}&lt;/button&gt;;\n}\n\nfunction App() {\n  return (\n    &lt;TemaProvider&gt;\n      &lt;BotaoTema /&gt;\n    &lt;/TemaProvider&gt;\n  );\n}\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#usereducer","title":"\ud83d\udd39 useReducer","text":"<p>O <code>useReducer</code> \u00e9 \u00fatil para estados mais complexos ou com m\u00faltiplas transi\u00e7\u00f5es.</p> <pre><code>import { useReducer } from \"react\";\n\ntype Estado = { contador: number };\ntype Acao = { type: \"incrementar\" } | { type: \"decrementar\" };\n\nfunction reducer(estado: Estado, acao: Acao): Estado {\n  switch (acao.type) {\n    case \"incrementar\":\n      return { contador: estado.contador + 1 };\n    case \"decrementar\":\n      return { contador: estado.contador - 1 };\n    default:\n      return estado;\n  }\n}\n\nfunction ContadorReducer() {\n  const [estado, dispatch] = useReducer(reducer, { contador: 0 });\n\n  return (\n    &lt;div&gt;\n      &lt;p&gt;Contador: {estado.contador}&lt;/p&gt;\n      &lt;button onClick={() =&gt; dispatch({ type: \"incrementar\" })}&gt;+&lt;/button&gt;\n      &lt;button onClick={() =&gt; dispatch({ type: \"decrementar\" })}&gt;-&lt;/button&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#custom-hooks","title":"\ud83d\udd39 Custom Hooks","text":"<p>Custom hooks permitem extrair l\u00f3gica reutiliz\u00e1vel em fun\u00e7\u00f5es pr\u00f3prias. A seguir segue um exemplo de hook para armazenar estado no <code>localStorage</code>.</p> <pre><code>import { useState, useEffect } from \"react\";\n\nfunction useLocalStorage&lt;T&gt;(chave: string, valorInicial: T) {\n  const [valor, setValor] = useState&lt;T&gt;(() =&gt; {\n    const salvo = localStorage.getItem(chave);\n    return salvo ? (JSON.parse(salvo) as T) : valorInicial;\n  });\n\n  useEffect(() =&gt; {\n    localStorage.setItem(chave, JSON.stringify(valor));\n  }, [chave, valor]);\n\n  return [valor, setValor] as const;\n}\n\nfunction App() {\n  const [nome, setNome] = useLocalStorage&lt;string&gt;(\"nome\", \"\");\n\n  return (\n    &lt;div&gt;\n      &lt;input value={nome} onChange={(e) =&gt; setNome(e.target.value)} /&gt;\n      &lt;p&gt;Nome salvo: {nome}&lt;/p&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#tratamento-de-eventos-e-tipos-de-jsx","title":"Tratamento de Eventos e Tipos de JSX","text":"<p>No React, os eventos s\u00e3o usados para interagir com os elementos da interface, como cliques, mudan\u00e7as de input, submiss\u00e3o de formul\u00e1rios, etc. No TypeScript, podemos tipar esses eventos para garantir maior seguran\u00e7a e evitar erros em tempo de compila\u00e7\u00e3o.</p>"},{"location":"coelhos/Frontend/Typescript/#tratamento-de-eventos","title":"\ud83d\udd39 Tratamento de Eventos","text":""},{"location":"coelhos/Frontend/Typescript/#1-tipos-basicos-de-eventos","title":"1. Tipos b\u00e1sicos de eventos","text":"<p>O TypeScript oferece tipos espec\u00edficos para cada tipo de evento no React, dispon\u00edveis no namespace <code>React</code>. Alguns exemplos:</p> Evento Tipo Click em bot\u00e3o <code>React.MouseEvent&lt;HTMLButtonElement&gt;</code> Mudan\u00e7a em input <code>React.ChangeEvent&lt;HTMLInputElement&gt;</code> Submit de formul\u00e1rio <code>React.FormEvent&lt;HTMLFormElement&gt;</code> Foco/Blur <code>React.FocusEvent&lt;HTMLInputElement&gt;</code>"},{"location":"coelhos/Frontend/Typescript/#2-exemplo-evento-de-click","title":"2. Exemplo: Evento de click","text":"<pre><code>import React from \"react\";\n\nfunction Botao() {\n  const handleClick = (evento: React.MouseEvent&lt;HTMLButtonElement&gt;) =&gt; {\n    console.log(\"Bot\u00e3o clicado!\", evento);\n  };\n\n  return &lt;button onClick={handleClick}&gt;Clique aqui&lt;/button&gt;;\n}\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#3-exemplo-evento-de-input","title":"3. Exemplo: Evento de input","text":"<pre><code>import React, { useState } from \"react\";\n\nfunction Input() {\n  const [valor, setValor] = useState(\"\");\n\n  const handleChange = (evento: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; {\n    setValor(evento.target.value);\n  };\n\n  return (\n    &lt;div&gt;\n      &lt;input type=\"text\" value={valor} onChange={handleChange} /&gt;\n      &lt;p&gt;Valor digitado: {valor}&lt;/p&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#4-exemplo-submit-de-formulario","title":"4. Exemplo: Submit de formul\u00e1rio","text":"<pre><code>import React, { useState } from \"react\";\n\nfunction Formulario() {\n  const [nome, setNome] = useState(\"\");\n\n  const handleSubmit = (evento: React.FormEvent&lt;HTMLFormElement&gt;) =&gt; {\n    evento.preventDefault(); // evita reload da p\u00e1gina\n    alert(`Nome enviado: ${nome}`);\n  };\n\n  return (\n    &lt;form onSubmit={handleSubmit}&gt;\n      &lt;input type=\"text\" value={nome} onChange={e =&gt; setNome(e.target.value)} /&gt;\n      &lt;button type=\"submit\"&gt;Enviar&lt;/button&gt;\n    &lt;/form&gt;\n  );\n}\n</code></pre>"},{"location":"coelhos/Frontend/Typescript/#tipos-de-jsx","title":"\ud83d\udd39 Tipos de JSX","text":"<p>Em TypeScript, podemos tipar elementos JSX e fun\u00e7\u00f5es que retornam JSX.</p>"},{"location":"coelhos/Frontend/Typescript/#1-funcao-que-retorna-jsx","title":"1. Fun\u00e7\u00e3o que retorna JSX","text":"<pre><code>import React from \"react\";\n\nfunction Saudacao(nome: string): JSX.Element {\n  return &lt;h1&gt;Ol\u00e1, {nome}!&lt;/h1&gt;;\n}\n</code></pre> <p>JSX.Element \u00e9 o tipo padr\u00e3o para qualquer elemento JSX retornado por uma fun\u00e7\u00e3o. Tamb\u00e9m \u00e9 poss\u00edvel usar React.ReactNode para aceitar JSX, strings, n\u00fameros ou arrays de elementos.</p>"},{"location":"coelhos/Frontend/Typescript/#2-props-com-jsx","title":"2. Props com JSX","text":"<pre><code>type CardProps = {\n  titulo: string;\n  conteudo: React.ReactNode; // aceita JSX ou texto\n};\n\nfunction Card({ titulo, conteudo }: CardProps) {\n  return (\n    &lt;div className=\"card\"&gt;\n      &lt;h2&gt;{titulo}&lt;/h2&gt;\n      &lt;div&gt;{conteudo}&lt;/div&gt;\n    &lt;/div&gt;\n  );\n}\n\n// Uso do componente\nfunction App() {\n  return (\n    &lt;Card \n      titulo=\"Meu Card\" \n      conteudo={&lt;p&gt;Este \u00e9 um conte\u00fado em JSX dentro do card!&lt;/p&gt;} \n    /&gt;\n  );\n}\n</code></pre> <p><sub>Documenta\u00e7\u00e3o criada por Maria Clara (@MariaClara-Canuto)</sub></p>"},{"location":"coelhos/Git-Github/","title":"Git e GitHub","text":"<p>Aprenda o essencial para versionar projetos com Git e colaborar usando GitHub.  </p>"},{"location":"coelhos/Git-Github/#resumao-rapido","title":"\ud83d\udccc Resum\u00e3o r\u00e1pido","text":"<ul> <li>Git \u2192 versionamento local/distribu\u00eddo (salva vers\u00f5es do c\u00f3digo).  </li> <li>GitHub \u2192 backup online + colabora\u00e7\u00e3o em equipe.  </li> <li>Push \u2192 envia c\u00f3digo pro GitHub.  </li> <li>Pull \u2192 baixa atualiza\u00e7\u00f5es do GitHub.  </li> <li>Branching \u2192 ramifica\u00e7\u00f5es para trabalhar em paralelo.  </li> <li>Merging \u2192 junta branches (ex.: <code>feature</code> \u2192 <code>main</code>).  </li> <li>Pull Request (PR) \u2192 revis\u00e3o antes de juntar.  </li> <li>Conflitos \u2192 quando duas branches mexem no mesmo trecho de jeitos diferentes.  </li> </ul>"},{"location":"coelhos/Git-Github/#git","title":"Git","text":""},{"location":"coelhos/Git-Github/#conceitos-importantes","title":"Conceitos importantes","text":"<ul> <li>Changed Area: altera\u00e7\u00f5es locais ainda n\u00e3o staged.  </li> <li>Staged Area: arquivos prontos para o pr\u00f3ximo commit.  </li> <li>HEAD: aponta para a vers\u00e3o/branch atual.  </li> <li>.gitignore: arquivos/pastas que o Git deve ignorar (ex.: <code>.env</code>, <code>node_modules</code>).  </li> </ul>"},{"location":"coelhos/Git-Github/#comandos-basicos","title":"Comandos b\u00e1sicos","text":"<pre>\ngit init                  # inicia reposit\u00f3rio\ngit status                # mostra status dos arquivos\ngit add .                 # adiciona todos\ngit add &lt;arquivo&gt;          # adiciona espec\u00edfico\ngit commit -m \"mensagem\"  # cria commit\ngit log --all --graph     # hist\u00f3rico visual\n</pre>"},{"location":"coelhos/Git-Github/#ajustando-versoes","title":"Ajustando vers\u00f5es","text":"<pre>\ngit commit --amend -m \"nova mensagem\"   # altera \u00faltimo commit\ngit reset &lt;arquivo&gt;                     # tira da staged area\ngit checkout &lt;id-do-commit&gt;             # vai para commit espec\u00edfico\n</pre> <p>[!NOTE] <code>git checkout &lt;id&gt;</code> leva a detached HEAD \u2014 cuidado pra n\u00e3o perder commits novos; crie uma branch antes.  </p>"},{"location":"coelhos/Git-Github/#personalizacoes","title":"Personaliza\u00e7\u00f5es","text":"<pre>\ngit config --global alias.s \"status\"   # cria atalho (git s)\ngit config --global user.name \"Seu Nome\"\ngit config --global user.email \"vc@ex.com\"\nrm -rf .git                            # apaga todo o repo local\n</pre> <p>[!TIP] Use <code>git diff</code> e <code>git diff --staged</code> para revisar antes de commitar.  </p>"},{"location":"coelhos/Git-Github/#github","title":"GitHub","text":""},{"location":"coelhos/Git-Github/#o-que-e","title":"O que \u00e9","text":"<p>Plataforma online para hospedar reposit\u00f3rios Git, trabalhar em equipe, abrir issues e pull requests.  </p>"},{"location":"coelhos/Git-Github/#conectar-local-remoto","title":"Conectar local \u2194 remoto","text":"<pre>\ngit remote add origin &lt;url&gt;   # conecta repo local ao remoto\ngit remote remove origin      # remove conex\u00e3o\n</pre> <p>[!NOTE] Para autenticar <code>git push</code>, use Personal Access Token (em vez de senha).  </p>"},{"location":"coelhos/Git-Github/#fluxo-basico-de-uso","title":"Fluxo b\u00e1sico de uso","text":"<pre>\n# primeira vez\ngit add .\ngit commit -m \"mensagem\"\ngit push --set-upstream origin main\n\n# depois\ngit push\n\n# atualizar local\ngit fetch\ngit pull origin main\n</pre>"},{"location":"coelhos/Git-Github/#clonar-repositorio","title":"Clonar reposit\u00f3rio","text":"<pre>\ngit clone &lt;url&gt;              # clona repo\ngit clone &lt;url&gt; &lt;pasta&gt;      # clona em pasta personalizada\n</pre>"},{"location":"coelhos/Git-Github/#branching","title":"Branching","text":""},{"location":"coelhos/Git-Github/#por-que-usar","title":"Por que usar","text":"<p>Trabalhar em features/corre\u00e7\u00f5es sem atrapalhar a <code>main</code>.  </p>"},{"location":"coelhos/Git-Github/#comandos","title":"Comandos","text":"<pre>\ngit branch &lt;nome&gt;       # cria branch\ngit checkout &lt;nome&gt;     # troca de branch\ngit switch -c &lt;nome&gt;    # cria e troca (atalho moderno)\n</pre>"},{"location":"coelhos/Git-Github/#merging","title":"Merging","text":""},{"location":"coelhos/Git-Github/#conceito","title":"Conceito","text":"<p>Juntar a branch de feature na branch principal.  </p> <pre>\ngit checkout main\ngit pull origin main\ngit merge minha-feature\n</pre>"},{"location":"coelhos/Git-Github/#conflitos","title":"Conflitos","text":"<p>Ocorrem quando duas branches alteram o mesmo trecho.  </p> <ul> <li>Git marca com <code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>, <code>=======</code>, <code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>.  </li> <li>Resolve manualmente no editor, depois:  </li> </ul> <pre>\ngit add .\ngit commit\ngit push origin minha-feature\n</pre>"},{"location":"coelhos/Git-Github/#feature-branch-workflow","title":"Feature Branch Workflow","text":"<ol> <li> <p>Clonar reposit\u00f3rio <code>git clone &lt;url&gt;</code> </p> </li> <li> <p>Criar branch <code>git checkout -b feature/minha-coisa</code> </p> </li> <li> <p>Trabalhar e commitar <code>git add . &amp;&amp; git commit -m \"feat: implementa X\"</code> </p> </li> <li> <p>Subir branch <code>git push origin feature/minha-coisa</code> </p> </li> <li> <p>Abrir Pull Request no GitHub </p> </li> <li>Base: <code>main</code> \u2190 Compare: <code>feature/minha-coisa</code> </li> <li> <p>Escreve descri\u00e7\u00e3o clara, linka issues, explica testes.  </p> </li> <li> <p>Revis\u00f5es </p> </li> <li> <p>Corrigir o que pedirem, dar push novamente.  </p> </li> <li> <p>Merge </p> </li> <li>Ap\u00f3s aprova\u00e7\u00e3o, escolher m\u00e9todo de merge (Merge commit / Squash / Rebase).  </li> <li>Deletar branch remota se n\u00e3o for mais necess\u00e1ria.  </li> </ol>"},{"location":"coelhos/Git-Github/#observacoes-finais","title":"Observa\u00e7\u00f5es finais","text":"<ul> <li>Use <code>.gitignore</code> para n\u00e3o versionar arquivos sens\u00edveis.  </li> <li>Proteja a <code>main</code>: s\u00f3 merge via Pull Request.  </li> <li>Commits descritivos (evite \u201cupdate\u201d ou \u201cteste\u201d).  </li> <li>Use <code>git reflog</code> para recuperar commits perdidos.  </li> <li>Tokens/SSH para autenticar pushes.  </li> </ul> <p><sub>Documenta\u00e7\u00e3o criada por Matheus Saraiva (@apptrx)</sub></p>"},{"location":"coelhos/Github-Pages/","title":"\ud83d\ude80 GitHub Pages + Hugo","text":""},{"location":"coelhos/Github-Pages/#1-o-que-e-github-pages","title":"1. O que \u00e9 GitHub Pages?","text":"<p>O GitHub Pages \u00e9 basicamente um servidor gr\u00e1tis do GitHub. Voc\u00ea coloca os arquivos do seu site l\u00e1 (HTML, CSS, JS) e ele fica online sem voc\u00ea pagar nada.  </p> <p>S\u00f3 vale pra site est\u00e1tico (n\u00e3o pode PHP, banco de dados ou Node). \u00c9 perfeito para as documenta\u00e7\u00f5es que faremos</p>"},{"location":"coelhos/Github-Pages/#exemplo-rapido","title":"Exemplo r\u00e1pido:","text":"<ul> <li>Criei um reposit\u00f3rio no GitHub chamado <code>pages</code></li> <li>Coloquei um arquivo <code>index.html</code> dentro</li> <li>Ativei o GitHub Pages nas configura\u00e7\u00f5es do reposit\u00f3rio</li> <li>O site ficou no ar em: https://usuario.github.io/pages/</li> <li>Voc\u00ea pode usar um dom\u00ednio pr\u00f3prio tamb\u00e9m ex: \"www.squad6.com\" se quiser</li> </ul> <p>Teste que eu fiz : https://luanludry.github.io/teste-github-pages/</p>"},{"location":"coelhos/Github-Pages/#observacoes-importantes","title":"Observa\u00e7\u00f5es importantes:","text":"<ul> <li>S\u00f3 roda em site est\u00e1tico</li> <li>O reposit\u00f3rio tem que ter no m\u00e1ximo 1 GB (que \u00e9 o suficiente para a documenta\u00e7\u00e3o)</li> <li>Da para usar diversas ferramentas que geram sites est\u00e1ticos mas n\u00f3s vamos usar o Hugo</li> </ul>"},{"location":"coelhos/Github-Pages/#o-que-e-o-hugo","title":"O que \u00e9 o Hugo?","text":"<p>O Hugo \u00e9 um gerador de sites est\u00e1ticos bem r\u00e1pido feito em Go. Voc\u00ea escreve um Markdown, escolhe o tema e o site ta pronto. Tem diversos temas prontos que voc\u00ea pode encontrar aqui Hugo Themes</p> <p>Tutorial https://www.youtube.com/watch?v=rX7VVaEIzPM&amp;ab_channel=%E8%BE%B0%E5%8D%97</p>"},{"location":"coelhos/Github-Pages/#como-criar-um-site-com-hugo-github-pages","title":"Como criar um site com Hugo + GitHub pages","text":"<p>bash sudo apt install hugo</p> <p>Ver se deu certo: bash hugo version</p>"},{"location":"coelhos/Github-Pages/#criar-o-projeto","title":"Criar o projeto","text":"<p>bash hugo new site meu-site cd meu-site</p>"},{"location":"coelhos/Github-Pages/#escolher-um-tema","title":"Escolher um tema","text":"<p>bash git init git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke themes/ananke (exemplo de tema)</p> <p>Configura no <code>hugo.toml</code>: toml theme = \"ananke\"</p>"},{"location":"coelhos/Github-Pages/#criar-um-post","title":"Criar um post","text":"<p>bash hugo new posts/primeiro-post.md</p> <p>Vai em <code>content/posts/primeiro-post.md</code> e troca <code>draft = true</code> pra <code>draft = false</code>.</p>"},{"location":"coelhos/Github-Pages/#testar-no-navegador","title":"Testar no navegador","text":"<p>bash hugo server -D</p> <p>Acesse: http://localhost:1313</p>"},{"location":"coelhos/Github-Pages/#gerar-o-site-final","title":"Gerar o site final","text":"<p>bash hugo</p> <p>Ele vai criar a pasta <code>public/</code> com os arquivos prontos pra publicar.</p>"},{"location":"coelhos/Github-Pages/#4-colocando-no-ar-com-github-pages","title":"4. Colocando no ar com GitHub Pages","text":""},{"location":"coelhos/Github-Pages/#jeito-rapido-branch-gh-pages","title":"Jeito r\u00e1pido (branch <code>gh-pages</code>)","text":"<ol> <li>Cria um repo no GitHub</li> <li>Vai na pasta <code>public/</code></li> <li> <p>Faz o push:    bash    git init    git remote add origin https://github.com/seuusuario/meu-site.git    git checkout -b gh-pages    git add .    git commit -m \"deploy\"    git push origin gh-pages --force</p> </li> <li> <p>No GitHub \u2192 Settings \u2192 Pages \u2192 escolhe o branch <code>gh-pages</code>.</p> </li> </ol>"},{"location":"coelhos/Github-Pages/#observacoes-importantes_1","title":"Observa\u00e7\u00f5es importantes","text":"<ul> <li>Acho que seria bom a gente padronizar os temas, existem alguns temas que eles s\u00e3o mais \"completos\" e s\u00e3o mais dif\u00edceis de ser usados</li> <li>A pasta public/ n\u00e3o deve ser comitada no repositorio principal</li> <li>o GitHub pages demora uns 3 minutos para ser postado, caso n\u00e3o funcione tenta fazer um novo commit, se isso n\u00e3o funcionar pode falar comigo que eu ajudo :)</li> <li>Infelizmente n\u00e3o existe muito conte\u00fado em portugu\u00eas, mas por ser bem simples de ser usado o GPT e outras inteligencias artificiais podem auxiliar bastante</li> </ul>"},{"location":"coelhos/Github-Pages/#linkds-dos-conteudos-estudados","title":"linkds dos conte\u00fados estudados","text":"<ul> <li>Site do hugo, existem muita coisa interessantes aqui: https://gohugo.io/documentation/</li> <li>Essa playlist tem muito conte\u00fado para iniciar com o site: https://www.youtube.com/watch?v=0RKpf3rK57I&amp;list=PLbb_NncyMIquNU4pdg6rVW3TuK30Gq9dw&amp;ab_channel=Fireship</li> <li>Desse site peguei o passo a passo, inclusive ele \u00e9 feito usandoHugo: https://www.testingwithmarie.com/posts/20241126-create-a-static-blog-with-hugo/</li> <li>Um v\u00eddeo do Lempa fazendo o passo a passo de como usar o Hugo com um dos themes mais utilizados: https://youtu.be/MX4yy1dTVYg?si=abOstu-P9trbIxTy</li> </ul> <p><sub>Documenta\u00e7\u00e3o criada por Luan Ludry (@luanludry)</sub></p>"},{"location":"coelhos/Machine-Learn/","title":"\ud83e\udd16 Machine Learn","text":"<p>Este diret\u00f3rio concentra conte\u00fados relacionados a Machine Learning, organizados por bibliotecas e t\u00e9cnicas utilizadas no desenvolvimento de modelos de aprendizado de m\u00e1quina.</p>"},{"location":"coelhos/Machine-Learn/#estrutura-da-documentacao","title":"\ud83d\udcc2 Estrutura da Documenta\u00e7\u00e3o","text":"<ul> <li>Scikit-Learn   \ud83d\udcd8 Inclui:  </li> <li>Pr\u00e9-processamento  </li> <li>Classifica\u00e7\u00e3o  </li> <li>Regress\u00e3o  </li> <li>Clustering  </li> <li>Valida\u00e7\u00e3o de Modelos  </li> </ul> <p><sub>Documenta\u00e7\u00e3o criada por Tiago Bittencourt (@TiagoSBittencourt)&lt;"},{"location":"coelhos/Machine-Learn/Scikit-Learn/","title":"\ud83d\udcd8 Scikit-Learn","text":"<p>O Scikit-Learn \u00e9 uma biblioteca de Machine Learning em Python, focada em: - Pr\u00e9-processamento de dados - Algoritmos de classifica\u00e7\u00e3o - Algoritmos de regress\u00e3o - M\u00e9todos de clustering - T\u00e9cnicas de valida\u00e7\u00e3o de modelos</p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/#estrutura-da-documentacao","title":"\ud83d\udcc2 Estrutura da Documenta\u00e7\u00e3o","text":"<ul> <li>Pr\u00e9-processamento </li> <li>Classifica\u00e7\u00e3o </li> <li>Regress\u00e3o </li> <li>Clustering </li> <li>Valida\u00e7\u00e3o de Modelos </li> </ul> <p>Cada se\u00e7\u00e3o cont\u00e9m um guia explicativo e exemplos pr\u00e1ticos.</p> <p><sub>Documenta\u00e7\u00e3o colaborativa da pasta Skit-Learn: Tiago Bittencourt (@TiagoSBittencourt)</sub></p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Classificacao/","title":"\ud83c\udf32 Modelos de Classifica\u00e7\u00e3o no Scikit-Learn","text":"<p>O Scikit-Learn oferece uma ampla variedade de algoritmos de classifica\u00e7\u00e3o prontos para uso, permitindo treinar e avaliar modelos de forma r\u00e1pida e eficiente. Abaixo, exploramos os principais tipos de classificadores dispon\u00edveis:</p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Classificacao/#arvores-de-decisao-decision-trees","title":"\ud83d\udd39 \u00c1rvores de Decis\u00e3o (Decision Trees)","text":""},{"location":"coelhos/Machine-Learn/Scikit-Learn/Classificacao/#o-que-sao","title":"O que s\u00e3o?","text":"<p>\u00c1rvores de decis\u00e3o s\u00e3o modelos baseados em regras hier\u00e1rquicas que dividem os dados em regi\u00f5es homog\u00eaneas de acordo com os atributos.  </p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Classificacao/#vantagens","title":"Vantagens","text":"<ul> <li>F\u00e1cil interpreta\u00e7\u00e3o e visualiza\u00e7\u00e3o.  </li> <li>N\u00e3o requer normaliza\u00e7\u00e3o dos dados.  </li> <li>Pode lidar com vari\u00e1veis num\u00e9ricas e categ\u00f3ricas.  </li> </ul>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Classificacao/#exemplo-visual","title":"Exemplo Visual","text":""},{"location":"coelhos/Machine-Learn/Scikit-Learn/Classificacao/#exemplo-com-scikit-learn","title":"Exemplo com Scikit-Learn","text":"<pre><code>from sklearn.tree import DecisionTreeClassifier\n\nmodel = DecisionTreeClassifier(max_depth=3, random_state=42)\nmodel.fit(X_train, y_train)\ny_pred = model.predict(X_test)\n</code></pre>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Classificacao/#florestas-aleatorias-random-forest","title":"\ud83d\udd39 Florestas Aleat\u00f3rias (Random Forest)","text":""},{"location":"coelhos/Machine-Learn/Scikit-Learn/Classificacao/#o-que-sao_1","title":"O que s\u00e3o?","text":"<p>Conjunto de v\u00e1rias \u00e1rvores de decis\u00e3o treinadas em subconjuntos dos dados, cujas previs\u00f5es s\u00e3o combinadas.</p> <p> </p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Classificacao/#vantagens_1","title":"Vantagens","text":"<ul> <li> <p>Reduz o risco de overfitting.</p> </li> <li> <p>Melhor desempenho que \u00e1rvores \u00fanicas.</p> </li> </ul> <pre><code>Copy code\nfrom sklearn.ensemble import RandomForestClassifier\n\nmodel = RandomForestClassifier(n_estimators=100, random_state=42)\nmodel.fit(X_train, y_train)\n</code></pre>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Classificacao/#gradient-boosting-xgboost-lightgbm-etc","title":"\ud83d\udd39 Gradient Boosting (XGBoost, LightGBM, etc.)","text":"<p>O que \u00e9? M\u00e9todo baseado em boosting, onde modelos fracos (\u00e1rvores pequenas) s\u00e3o treinados sequencialmente, cada um corrigindo os erros do anterior.</p> <p> </p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Classificacao/#vantagens_2","title":"Vantagens","text":"<ul> <li> <p>Excelente desempenho em competi\u00e7\u00f5es de ML.</p> </li> <li> <p>Muito eficaz em dados tabulares.</p> </li> </ul> <p>Exemplo com Scikit-Learn <pre><code>from sklearn.ensemble import GradientBoostingClassifier\n\nmodel = GradientBoostingClassifier()\nmodel.fit(X_train, y_train)\n</code></pre></p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Classificacao/#support-vector-machines-svm","title":"\ud83d\udd39 Support Vector Machines (SVM)","text":"<p>O que s\u00e3o? Algoritmos que buscam um hiperplano \u00f3timo para separar classes no espa\u00e7o de atributos.</p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Classificacao/#vantagens_3","title":"Vantagens","text":"<ul> <li> <p>Eficaz em espa\u00e7os de alta dimens\u00e3o.</p> </li> <li> <p>Funciona bem com margens claras entre classes.</p> </li> </ul>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Classificacao/#quando-utilizar","title":"Quando utilizar?","text":"<p>Dados com classes bem separadas.</p> <p>Problemas de alta dimensionalidade.</p> <pre><code>from sklearn.svm import SVC\n\nmodel = SVC(kernel=\"rbf\", C=1, gamma=\"scale\")\nmodel.fit(X_train, y_train)\n</code></pre>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Classificacao/#k-nearest-neighbors-knn","title":"\ud83d\udd39 K-Nearest Neighbors (KNN)","text":""},{"location":"coelhos/Machine-Learn/Scikit-Learn/Classificacao/#o-que-e","title":"O que \u00e9?","text":"<p>Classificador baseado em dist\u00e2ncia: um novo ponto \u00e9 classificado de acordo com a maioria dos r\u00f3tulos dos seus vizinhos mais pr\u00f3ximos.</p> <p> </p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Classificacao/#vantagens_4","title":"Vantagens","text":"<ul> <li> <p>Simples e intuitivo.</p> </li> <li> <p>Funciona bem com poucos atributos.</p> </li> </ul> <p>\u26a0\ufe0f Importante: KNN \u00e9 sens\u00edvel \u00e0 escala dos dados \u2192 usar Feature Scaling.</p> <pre><code>Copy code\nfrom sklearn.neighbors import KNeighborsClassifier\n\nmodel = KNeighborsClassifier(n_neighbors=5)\nmodel.fit(X_train, y_train)\n</code></pre>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Classificacao/#regressao-logistica","title":"\ud83d\udd39 Regress\u00e3o Log\u00edstica","text":"<p>Apesar do nome, \u00e9 um modelo de classifica\u00e7\u00e3o linear tambem. Ele estima a probabilidade de uma amostra pertencer a uma classe utilizando a fun\u00e7\u00e3o sigmoide.</p> <p> </p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Classificacao/#vantagens_5","title":"Vantagens","text":"<ul> <li> <p>Simples, r\u00e1pido e interpret\u00e1vel.</p> </li> <li> <p>\u00datil como baseline.</p> </li> </ul> <pre><code>Copy code\nfrom sklearn.linear_model import LogisticRegression\n\nmodel = LogisticRegression()\nmodel.fit(X_train, y_train)\n</code></pre> <p>\ud83d\udcca Compara\u00e7\u00e3o entre Modelos de Classifica\u00e7\u00e3o</p> Modelo Vantagens Desvantagens Quando Usar \u00c1rvore de Decis\u00e3o F\u00e1cil interpreta\u00e7\u00e3o, lida com dados categ\u00f3ricos Pode sofrer overfitting Quando interpretabilidade \u00e9 importante Random Forest Reduz overfitting, robusto Mais lento que \u00e1rvore \u00fanica Dados tabulares gerais SVM Bom em alta dimens\u00e3o, margens claras Lento em datasets muito grandes, exige tuning Classes bem separadas, alta dimens\u00e3o KNN Simples, n\u00e3o precisa de treino intensivo Sens\u00edvel \u00e0 escala e a ru\u00eddo Poucos atributos, dataset pequeno Regress\u00e3o Log\u00edstica R\u00e1pida, interpret\u00e1vel Limitada a separa\u00e7\u00e3o linear Como baseline para compara\u00e7\u00e3o Gradient Boosting Alta performance, \u00f3timo em dados tabulares Mais complexo, tuning necess\u00e1rio Competi\u00e7\u00e3o de ML, quando performance \u00e9 prioridade <p><sub>Documenta\u00e7\u00e3o criada por Tiago Bittencourt (@TiagoSBittencourt)</sub></p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Clustering/","title":"\ud83d\udcca Clustering no Scikit-Learn","text":"<p>O clustering \u00e9 uma t\u00e9cnica de aprendizado n\u00e3o supervisionado, usada para agrupar dados similares sem r\u00f3tulos predefinidos.  </p> <p>No Scikit-Learn, temos v\u00e1rios algoritmos populares de clustering, incluindo:</p> <ul> <li>K-Means  </li> <li>Agglomerative (Hier\u00e1rquico)  </li> <li>DBSCAN  </li> <li>Mean Shift  </li> </ul> <p>Este guia cobre os conceitos, f\u00f3rmulas e exemplos pr\u00e1ticos de cada t\u00e9cnica.</p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Clustering/#k-means-clustering","title":"\ud83d\udd39 K-Means Clustering","text":""},{"location":"coelhos/Machine-Learn/Scikit-Learn/Clustering/#o-que-e","title":"O que \u00e9?","text":"<p>K-Means busca dividir os dados em K clusters, minimizando a dist\u00e2ncia intra-cluster. Cada cluster \u00e9 representado pelo centroide (m\u00e9dia dos pontos do cluster).</p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Clustering/#formula","title":"F\u00f3rmula","text":"<pre><code>\\text{SSE} = \\sum_{i=1}^{K} \\sum_{x \\in C_i} \\| x - \\mu_i \\|^2 \n</code></pre> <p>Onde: - \\(\\\\K<code>$ = n\u00famero de clusters   - $\\\\C_i</code>\\) = cluster \\(i\\) - \\(\\mu_i<code>$ = centroide do cluster \\(i\\)   - $\\\\| x - \\mu_i \\|^2</code>\\) = dist\u00e2ncia quadr\u00e1tica entre o ponto \\(x\\) e o centroide</p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Clustering/#exemplo-em-python","title":"Exemplo em Python","text":"<pre><code>from sklearn.cluster import KMeans\nimport numpy as np\n\n# Dados de exemplo\nX = np.array([[1, 2], [1, 4], [1, 0],\n              [4, 2], [4, 4], [4, 0]])\n\nkmeans = KMeans(n_clusters=2, random_state=42)\nkmeans.fit(X)\n\nprint(\"Centroides:\", kmeans.cluster_centers_)\nprint(\"Labels:\", kmeans.labels_)\n</code></pre>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Clustering/#step-by-step-iteration","title":"Step By Step ( Iteration )","text":""},{"location":"coelhos/Machine-Learn/Scikit-Learn/Clustering/#final-result","title":"Final Result","text":"<p><sub>Documenta\u00e7\u00e3o criada por Tiago Bittencourt (@TiagoSBittencourt)</sub></p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/PreProcessamento/","title":"\u2699\ufe0f Pr\u00e9-processamento de Dados","text":"<p>O pr\u00e9-processamento \u00e9 uma etapa fundamental em Machine Learning, pois garante que os dados estejam em um formato adequado para os algoritmos. Aqui abordaremos:</p> <ul> <li>Normaliza\u00e7\u00e3o  </li> <li>Padroniza\u00e7\u00e3o  </li> <li>Feature Scaling (com exemplo pr\u00e1tico em KNN)  </li> <li>Codifica\u00e7\u00e3o de vari\u00e1veis  </li> </ul>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/PreProcessamento/#normalizacao","title":"\ud83d\udd39 Normaliza\u00e7\u00e3o","text":""},{"location":"coelhos/Machine-Learn/Scikit-Learn/PreProcessamento/#o-que-e","title":"O que \u00e9?","text":"<p>A normaliza\u00e7\u00e3o refere-se ao processo de ajustar valores em escalas diferentes para uma escala comum. Ela \u00e9 particularmente \u00fatil quando a distribui\u00e7\u00e3o dos dados \u00e9 desconhecida ou n\u00e3o segue uma distribui\u00e7\u00e3o gaussiana.</p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/PreProcessamento/#principais-tipos-de-normalizacao","title":"Principais tipos de normaliza\u00e7\u00e3o","text":"<ul> <li> <p>Min-Max (m\u00ednimo e m\u00e1ximo)   Redimensiona os valores para um intervalo espec\u00edfico, geralmente <code>[0, 1]</code>.   Exemplo: o menor valor vira <code>0</code>, o maior vira <code>1</code>.</p> </li> <li> <p>Logarithmic Scaling (normaliza\u00e7\u00e3o logar\u00edtmica)   Aplica uma transforma\u00e7\u00e3o logar\u00edtmica para reduzir o impacto de valores muito altos.</p> </li> <li> <p>Escala decimal   Desloca o ponto decimal para tornar os valores mais manej\u00e1veis sem alterar as diferen\u00e7as relativas.</p> </li> <li> <p>Normaliza\u00e7\u00e3o da m\u00e9dia (centraliza\u00e7\u00e3o da m\u00e9dia)   Subtrai a m\u00e9dia de cada valor, centralizando os dados em torno de <code>0</code>.</p> </li> </ul>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/PreProcessamento/#quando-utilizar","title":"Quando utilizar?","text":"<ul> <li>Quando os dados possuem distribui\u00e7\u00e3o desconhecida ou n\u00e3o-gaussiana </li> <li>Em algoritmos baseados em dist\u00e2ncia (KNN, SVM, KMeans), para evitar que vari\u00e1veis com escalas maiores dominem os c\u00e1lculos.</li> </ul>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/PreProcessamento/#exemplo-com-scikit-learn","title":"Exemplo com Scikit-Learn","text":"<pre><code>from sklearn.preprocessing import MinMaxScaler\nimport numpy as np\n\n# Exemplo: valores de tamanho de casas\nX = np.array([[500], [1000], [1500], [2000]])\n\nscaler = MinMaxScaler()\nX_scaled = scaler.fit_transform(X)\n\nprint(\"Original:\", X.ravel())\nprint(\"Normalizado:\", X_scaled.ravel())\n</code></pre>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/PreProcessamento/#padronizacao","title":"\ud83d\udd39 Padroniza\u00e7\u00e3o","text":"<p>Enquanto a normaliza\u00e7\u00e3o ajusta os dados para um intervalo espec\u00edfico, a padroniza\u00e7\u00e3o transforma os dados para que tenham:</p> <ul> <li> <p>M\u00e9dia = 0</p> </li> <li> <p>Desvio padr\u00e3o = 1</p> </li> </ul> <p>Essa t\u00e9cnica \u00e9 tamb\u00e9m conhecida como z-score scaling.</p> <p>F\u00f3rmula</p> <p> </p> <p>Onde:</p> <ul> <li> <p>X \u00e9 o valor original</p> </li> <li> <p>\u03bc \u00e9 a m\u00e9dia</p> </li> <li> <p>\u03c3 \u00e9 o desvio padr\u00e3o</p> </li> </ul> <p>Exemplo com Scikit-Learn <pre><code>from sklearn.preprocessing import StandardScaler\nimport numpy as np\n\n# Exemplo: valores de pre\u00e7os de casas\nX = np.array([[100000], [200000], [400000], [800000]])\n\nscaler = StandardScaler()\nX_scaled = scaler.fit_transform(X)\n\nprint(\"Original:\", X.ravel())\nprint(\"Padronizado:\", np.round(X_scaled.ravel(), 2))\n</code></pre> X \u00e9 o valor original, mu \u00e9 a m\u00e9dia do recurso, e sigma \u00e9 o desvio padr\u00e3o do recurso. Essa f\u00f3rmula redimensiona os dados de forma que sua distribui\u00e7\u00e3o tenha uma m\u00e9dia de 0 e um desvio padr\u00e3o de 1. <pre><code>from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nX_scaled = scaler.fit_transform(X)\n</code></pre></p> <p>\ud83d\udd39 Feature Scaling (Escalonamento de Vari\u00e1veis)</p> <p>O escalonamento de vari\u00e1veis \u00e9 crucial em algoritmos baseados em dist\u00e2ncias, como o KNN. A imagem abaixo mostra como os limites de decis\u00e3o mudam drasticamente dependendo se os dados foram escalados ou n\u00e3o.</p> <p> </p> <p>Retirado da documenta\u00e7\u00e3o oficial do Scikit-Learn.org</p> <p>No lado esquerdo, sem escalonamento, a vari\u00e1vel \"proline\" domina a decis\u00e3o do modelo, pois seus valores variam aproximadamente entre 0 e 1.000, enquanto a vari\u00e1vel \"hue\" varia apenas entre 1 e 10. Isso faz com que diferen\u00e7as em \u201chue\u201d sejam praticamente ignoradas.</p> <p>No lado direito, ap\u00f3s aplicar o StandardScaler, ambas as vari\u00e1veis s\u00e3o transformadas para uma escala aproximada entre -3 e 3, permitindo que o modelo leve em considera\u00e7\u00e3o de forma equilibrada as duas vari\u00e1veis. Assim, a estrutura de vizinhan\u00e7a muda completamente e os limites de decis\u00e3o se tornam mais representativos.</p> <p>\ud83d\udd39 Codifica\u00e7\u00e3o de Vari\u00e1veis</p> <p>Preferencialmente feito utilizando pandas</p> <p>Muitos algoritmos n\u00e3o trabalham diretamente com vari\u00e1veis categ\u00f3ricas, sendo necess\u00e1rio convert\u00ea-las em valores num\u00e9ricos.</p> <p>One-Hot Encoding</p> <p>Cria colunas bin\u00e1rias para cada categoria. Exemplo: cor = [vermelho, azul, verde] vira cor_vermelho, cor_azul, cor_verde. <pre><code>import pandas as pd\nfrom sklearn.preprocessing import OneHotEncoder\n\ndf = pd.DataFrame({\"Cor\": [\"vermelho\", \"azul\", \"verde\", \"azul\"]})\n\nencoder = OneHotEncoder(sparse_output=False)\nencoded = encoder.fit_transform(df[[\"Cor\"]])\n\nprint(pd.DataFrame(encoded, columns=encoder.get_feature_names_out([\"Cor\"])))\n</code></pre> Label Encoding</p> <p>Atribui inteiros para cada categoria. Exemplo: vermelho=0, azul=1, verde=2. <pre><code>from sklearn.preprocessing import LabelEncoder\n\nle = LabelEncoder()\nlabels = le.fit_transform(df[\"Cor\"])\nprint(labels)\n</code></pre></p> <p><sub>Documenta\u00e7\u00e3o criada por Tiago Bittencourt (@TiagoSBittencourt)</sub></p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Regressao/","title":"\ud83d\udcc8 Modelos de Regress\u00e3o no Scikit-Learn","text":"<p>A regress\u00e3o \u00e9 uma das tarefas fundamentais em Machine Learning, usada para prever valores num\u00e9ricos cont\u00ednuos com base em vari\u00e1veis independentes.  </p> <p>O Scikit-Learn oferece desde modelos lineares simples at\u00e9 t\u00e9cnicas avan\u00e7adas de regulariza\u00e7\u00e3o e ensemble.  </p> <p>Neste guia, abordaremos:</p> <ul> <li>Regress\u00e3o Linear  </li> <li>Regress\u00e3o N\u00e3o Linear</li> <li>Regress\u00e3o Ridge  </li> <li>Regress\u00e3o Lasso  </li> <li>Elastic Net  </li> <li>\u00c1rvores de Regress\u00e3o e Random Forest  </li> <li>Gradient Boosting Regressor  </li> </ul>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Regressao/#regressao-linear","title":"\ud83d\udd39 Regress\u00e3o Linear","text":""},{"location":"coelhos/Machine-Learn/Scikit-Learn/Regressao/#o-que-e","title":"O que \u00e9?","text":"<p>Assume que existe uma rela\u00e7\u00e3o linear entre as vari\u00e1veis independentes (X) e a vari\u00e1vel dependente (y).  </p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Regressao/#formula","title":"F\u00f3rmula","text":"\\[ y = \\beta_0 + \\beta_1 x_1 + \\beta_2 x_2 + \\dots + \\beta_n x_n \\] <p>Onde: - \\( \\beta_0 \\) \u00e9 o intercepto - \\( \\beta_i \\) s\u00e3o os coeficientes - \\( x_i \\) s\u00e3o as vari\u00e1veis independentes  </p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Regressao/#exemplo-em-python","title":"Exemplo em Python","text":"<pre><code>from sklearn.linear_model import LinearRegression\nimport numpy as np\n\n# Dados de exemplo: horas de estudo (X) e nota final (y)\nX = np.array([[1], [2], [3], [4], [5]])\ny = np.array([50, 55, 65, 70, 80])\n\nmodel = LinearRegression()\nmodel.fit(X, y)\n\nprint(\"Coeficiente:\", model.coef_)\nprint(\"Intercepto:\", model.intercept_)\nprint(\"Previs\u00e3o para 6 horas de estudo:\", model.predict([[6]]))\n</code></pre>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Regressao/#regressao-nao-linear","title":"\ud83d\udd39 Regress\u00e3o N\u00e3o Linear","text":"<p>Nem toda rela\u00e7\u00e3o \u00e9 linear. Para casos n\u00e3o lineares, podemos:</p> <p>Transformar features: aplicar polin\u00f4mios ou fun\u00e7\u00f5es n\u00e3o lineares.</p> <pre><code>from sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.pipeline import Pipeline\n\n# Transformacao polinomial de grau 2\npoly_model = Pipeline([\n    ('poly', PolynomialFeatures(degree=2)),\n    ('linear', LinearRegression())\n])\n\npoly_model.fit(X, y)\nprint(\"Previs\u00e3o para 6 horas:\", poly_model.predict([[6]]))\n</code></pre> <p> </p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Regressao/#regressao-ridge-l2","title":"\ud83d\udd39 Regress\u00e3o Ridge (L2)","text":""},{"location":"coelhos/Machine-Learn/Scikit-Learn/Regressao/#o-que-e_1","title":"O que \u00e9?","text":"<p>Aplica penaliza\u00e7\u00e3o L2 aos coeficientes, evitando que fiquem muito grandes. Reduz overfitting.</p> <pre><code>from sklearn.linear_model import Ridge\n\nridge = Ridge(alpha=1.0)\nridge.fit(X, y)\n\nprint(\"Coeficientes Ridge:\", ridge.coef_)\n</code></pre>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Regressao/#regressao-lasso-l1","title":"\ud83d\udd39 Regress\u00e3o Lasso (L1)","text":""},{"location":"coelhos/Machine-Learn/Scikit-Learn/Regressao/#o-que-e_2","title":"O que \u00e9?","text":"<p>Aplica penaliza\u00e7\u00e3o L1, podendo reduzir coeficientes irrelevantes a zero, realizando sele\u00e7\u00e3o autom\u00e1tica de vari\u00e1veis.</p> <pre><code>from sklearn.linear_model import Lasso\n\nlasso = Lasso(alpha=0.1)\nlasso.fit(X, y)\n\nprint(\"Coeficientes Lasso:\", lasso.coef_)\n</code></pre>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Regressao/#elastic-net-l1-l2","title":"\ud83d\udd39 Elastic Net (L1 + L2)","text":""},{"location":"coelhos/Machine-Learn/Scikit-Learn/Regressao/#o-que-e_3","title":"O que \u00e9?","text":"<p>Combina as penaliza\u00e7\u00f5es L1 (sele\u00e7\u00e3o de vari\u00e1veis) e L2 (estabilidade dos coeficientes).</p> <pre><code>from sklearn.linear_model import ElasticNet\n\nelastic = ElasticNet(alpha=0.1, l1_ratio=0.5)\nelastic.fit(X, y)\n\nprint(\"Coeficientes ElasticNet:\", elastic.coef_)\n</code></pre> <p>\ud83d\udcca Compara\u00e7\u00e3o entre Modelos de Regress\u00e3o | Modelo            | Vantagens                                | Desvantagens                         | Quando Usar                            | | ----------------- | ---------------------------------------- | ------------------------------------ | -------------------------------------- | | Linear Regression | Simples, interpret\u00e1vel                   | Limita\u00e7\u00f5es em dados n\u00e3o-lineares     | Rela\u00e7\u00f5es lineares simples              | | Ridge             | Reduz overfitting, coeficientes est\u00e1veis | N\u00e3o zera vari\u00e1veis irrelevantes      | Muitos atributos correlacionados       | | Lasso             | Sele\u00e7\u00e3o de vari\u00e1veis autom\u00e1tica          | Pode eliminar vari\u00e1veis relevantes   | Muitas vari\u00e1veis irrelevantes          | | Multi Variable Regression       | Consegue captar rela\u00e7\u00f5es mais complexas          | Mais dif\u00edcil ajustar e suset\u00edvel a overfitting | Rela\u00e7\u00f5es n\u00e3o lineares     |</p> <p><sub>Documenta\u00e7\u00e3o criada por Tiago Bittencourt (@TiagoSBittencourt)</sub></p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Validacao/","title":"\ud83e\uddea T\u00e9cnicas de Valida\u00e7\u00e3o de Modelos no Scikit-Learn","text":"<p>A valida\u00e7\u00e3o de modelos \u00e9 essencial para avaliar a performance e a generaliza\u00e7\u00e3o de algoritmos de Machine Learning. Evita overfitting (quando o modelo aprende demais os dados de treino) e garante previs\u00f5es confi\u00e1veis em dados novos.</p> <p>As principais t\u00e9cnicas incluem:</p> <ul> <li>Train/Test Split </li> <li>Cross-Validation (K-Fold, Stratified K-Fold) </li> <li>Leave-One-Out (LOO) </li> <li>Shuffle Split </li> </ul>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Validacao/#traintest-split","title":"\ud83d\udd39 Train/Test Split","text":""},{"location":"coelhos/Machine-Learn/Scikit-Learn/Validacao/#o-que-e","title":"O que \u00e9?","text":"<p>Divide o dataset em conjunto de treino e conjunto de teste. - Treino \u2192 modelo aprende padr\u00f5es - Teste \u2192 modelo \u00e9 avaliado</p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Validacao/#exemplo-em-python","title":"Exemplo em Python","text":"<pre><code>from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nimport numpy as np\n\n# Dados de exemplo\nX = np.arange(10).reshape(-1, 1)\ny = np.array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19])\n\n# Divis\u00e3o: 70% treino, 30% teste\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\n\nprint(\"Score no treino:\", model.score(X_train, y_train))\nprint(\"Score no teste:\", model.score(X_test, y_test))\n</code></pre> <p>O par\u00e2metro random_state garante reprodutibilidade.</p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Validacao/#cross-validation-cv","title":"\ud83d\udd39 Cross-Validation (CV)","text":""},{"location":"coelhos/Machine-Learn/Scikit-Learn/Validacao/#o-que-e_1","title":"O que \u00e9?","text":"<ol> <li> <p>O dataset \u00e9 dividido em K partes (folds).</p> </li> <li> <p>O modelo \u00e9 treinado em K-1 folds e testado no fold restante</p> </li> <li> <p>O processo se repete K vezes, cada fold sendo usado como teste uma vez</p> </li> </ol> <p>A m\u00e9dia dos scores fornece uma estimativa mais robusta da performance</p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Validacao/#exemplo-com-k-fold","title":"Exemplo com K-Fold","text":"<pre><code>from sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LinearRegression\nimport numpy as np\n\nX = np.arange(10).reshape(-1, 1)\ny = np.array([1,3,5,7,9,11,13,15,17,19])\n\nmodel = LinearRegression()\n\n# 5-Fold Cross-Validation\nscores = cross_val_score(model, X, y, cv=5)\nprint(\"Scores de cada fold:\", scores)\nprint(\"M\u00e9dia dos scores:\", scores.mean())\n</code></pre>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Validacao/#stratified-k-fold","title":"Stratified K-Fold","text":"<p>Usado principalmente em classifica\u00e7\u00e3o, mant\u00e9m a propor\u00e7\u00e3o de classes em cada fold.</p> <pre><code>from sklearn.model_selection import StratifiedKFold\n\n# Exemplo para classifica\u00e7\u00e3o\nfrom sklearn.datasets import load_iris\nfrom sklearn.ensemble import RandomForestClassifier\n\niris = load_iris()\nX = iris.data\ny = iris.target\n\nskf = StratifiedKFold(n_splits=5, shuffle=True, random_state=42)\nmodel = RandomForestClassifier()\n\nfor train_idx, test_idx in skf.split(X, y):\n    model.fit(X[train_idx], y[train_idx])\n    score = model.score(X[test_idx], y[test_idx])\n    print(\"Fold score:\", score)\n</code></pre>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Validacao/#leave-one-out-loo","title":"\ud83d\udd39 Leave-One-Out (LOO)","text":""},{"location":"coelhos/Machine-Learn/Scikit-Learn/Validacao/#o-que-e_2","title":"O que \u00e9?","text":"<p>Caso extremo de cross-validation:</p> <p>Cada amostra do dataset \u00e9 usada uma vez como teste, o restante como treino</p> <p>Bom para datasets pequenos, mas computacionalmente caro em datasets grandes <pre><code>from sklearn.model_selection import LeaveOneOut\n\nloo = LeaveOneOut()\nscores = []\n\nfor train_idx, test_idx in loo.split(X):\n    model.fit(X[train_idx], y[train_idx])\n    scores.append(model.score(X[test_idx], y[test_idx]))\n\nprint(\"Score m\u00e9dio LOO:\", np.mean(scores))\n</code></pre></p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Validacao/#shuffle-split","title":"\ud83d\udd39 Shuffle Split","text":""},{"location":"coelhos/Machine-Learn/Scikit-Learn/Validacao/#o-que-e_3","title":"O que \u00e9?","text":"<p>Gera m\u00faltiplas divis\u00f5es aleat\u00f3rias de treino/teste, \u00fatil para validar estabilidade do modelo. <pre><code>from sklearn.model_selection import ShuffleSplit\n\nss = ShuffleSplit(n_splits=5, test_size=0.3, random_state=42)\nscores = cross_val_score(model, X, y, cv=ss)\n\nprint(\"Scores Shuffle Split:\", scores)\nprint(\"M\u00e9dia:\", scores.mean())\n</code></pre></p>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Validacao/#comparacao-das-tecnicas","title":"\ud83d\udd39 Compara\u00e7\u00e3o das T\u00e9cnicas","text":"T\u00e9cnica Vantagens Desvantagens Quando Usar Train/Test Split Simples, r\u00e1pido Pode depender da divis\u00e3o escolhida Dados grandes e teste r\u00e1pido K-Fold CV Mais robusto que train/test split Computacionalmente mais caro Avalia\u00e7\u00e3o mais confi\u00e1vel Stratified K-Fold Mant\u00e9m propor\u00e7\u00e3o de classes Igual ao K-Fold Classifica\u00e7\u00e3o, classes desbalanceadas Leave-One-Out (LOO) M\u00e1xima utiliza\u00e7\u00e3o dos dados Muito lento para datasets grandes Dados pequenos Shuffle Split Avalia estabilidade do modelo Pode gerar folds semelhantes Testes r\u00e1pidos em datasets m\u00e9dios"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Validacao/#dicas-praticas","title":"\ud83d\udd39 Dicas Pr\u00e1ticas","text":"<ol> <li> <p>Sempre use random_state para resultados reproduz\u00edveis.</p> </li> <li> <p>Para datasets pequenos, K-Fold ou LOO s\u00e3o mais confi\u00e1veis.</p> </li> <li> <p>Para datasets grandes, train/test split ou ShuffleSplit s\u00e3o suficientes.</p> </li> <li> <p>Combine com m\u00e9tricas adequadas:</p> </li> <li> <p>Regress\u00e3o \u2192 R\u00b2, MSE, MAE</p> </li> <li> <p>Classifica\u00e7\u00e3o \u2192 Accuracy, F1, ROC-AUC</p> </li> </ol>"},{"location":"coelhos/Machine-Learn/Scikit-Learn/Validacao/#exmplos-de-separacao-de-dados","title":"\ud83d\udd39 Exmplos de Separa\u00e7\u00e3o de dados","text":"<p>A propor\u00e7\u00e3o de dados para cada fun\u00e7\u00e3o varia de caso para caso, mas no geral est\u00e1 entre alguma dessa situa\u00e7\u00f5es: </p> <p> <p> <sub>Documenta\u00e7\u00e3o criada por **Tiago Bittencourt** ([@TiagoSBittencourt](https://github.com/TiagoSBittencourt))</sub>"},{"location":"coelhos/Requisitos/","title":"\ud83d\udccc Requisitos de Software","text":""},{"location":"coelhos/Requisitos/#1-introducao","title":"1. Introdu\u00e7\u00e3o","text":"<p>Requisitos de software s\u00e3o descri\u00e7\u00f5es do que o sistema deve fazer e como ele deve funcionar. Eles servem como um \"contrato\" entre o cliente e a equipe de desenvolvimento.  </p> <ul> <li>Sem requisitos bem definidos \u2192 o sistema pode ser constru\u00eddo errado.  </li> <li>Com requisitos claros \u2192 maior chance de sucesso no projeto.  </li> </ul> <p>Exemplo: - Mal definido: \"O sistema deve ser r\u00e1pido.\" - Bem definido: \"O sistema deve responder em at\u00e9 2 segundos em 95% das requisi\u00e7\u00f5es.\" </p>"},{"location":"coelhos/Requisitos/#2-tipos-de-requisitos","title":"2. Tipos de Requisitos","text":""},{"location":"coelhos/Requisitos/#21-funcionais","title":"2.1 Funcionais","text":"<p>S\u00e3o as fun\u00e7\u00f5es que o sistema precisa realizar. - Cadastro de usu\u00e1rio - Login e autentica\u00e7\u00e3o - Gera\u00e7\u00e3o de relat\u00f3rios  </p> <p>\ud83d\udc49 Respondem \u00e0 pergunta: O que o sistema faz? </p>"},{"location":"coelhos/Requisitos/#22-nao-funcionais","title":"2.2 N\u00e3o Funcionais","text":"<p>S\u00e3o restri\u00e7\u00f5es e qualidades do sistema. - Desempenho (tempo de resposta, consumo de mem\u00f3ria) - Seguran\u00e7a (criptografia, controle de acesso) - Usabilidade (interface amig\u00e1vel, acessibilidade)  </p> <p>\ud83d\udc49 Respondem \u00e0 pergunta: Como o sistema deve ser? </p>"},{"location":"coelhos/Requisitos/#3-elicitacao-de-requisitos","title":"3. Elicita\u00e7\u00e3o de Requisitos","text":"<p>\"Elicitar\" significa levantar, coletar e descobrir requisitos junto \u00e0s partes interessadas (stakeholders), que podem ser clientes, usu\u00e1rios finais, gestores ou at\u00e9 especialistas do neg\u00f3cio.  </p> <p>Esse processo geralmente come\u00e7a em uma reuni\u00e3o inicial chamada Kick Off (pontap\u00e9 inicial). \u27a1\ufe0f Nela, os principais representantes do cliente e da equipe de desenvolvimento se re\u00fanem para alinhar objetivos, expectativas e problemas que o sistema precisa resolver.  </p>"},{"location":"coelhos/Requisitos/#principais-tecnicas-de-elicitacao","title":"Principais T\u00e9cnicas de Elicita\u00e7\u00e3o:","text":"<ul> <li>Entrevistas  \u2192 conversar diretamente com usu\u00e1rios ou gestores para entender necessidades.  </li> <li>Question\u00e1rios \u2192 \u00fateis quando h\u00e1 muitos usu\u00e1rios e \u00e9 preciso coletar respostas em massa.  </li> <li>Observa\u00e7\u00e3o  \u2192 acompanhar como os usu\u00e1rios realizam suas tarefas no dia a dia.  </li> <li>Prototipa\u00e7\u00e3o  \u2192 criar esbo\u00e7os ou telas simples que ajudam a validar ideias antes da implementa\u00e7\u00e3o.  </li> </ul>"},{"location":"coelhos/Requisitos/#o-objetivo-da-elicitacao-nao-e-apenas-coletar-funcionalidades-mas-entender-o-problema-do-cliente-para-que-a-solucao-desenvolvida-realmente-atenda-as-suas-necessidades","title":"\ud83d\udc49 O objetivo da elicita\u00e7\u00e3o n\u00e3o \u00e9 apenas coletar funcionalidades, mas entender o problema do cliente para que a solu\u00e7\u00e3o desenvolvida realmente atenda \u00e0s suas necessidades.","text":""},{"location":"coelhos/Requisitos/#4-modelagem-e-documentacao","title":"4. Modelagem e Documenta\u00e7\u00e3o","text":"<p>Depois de coletar os requisitos, \u00e9 preciso organizar e registrar.  </p>"},{"location":"coelhos/Requisitos/#formas-comuns","title":"Formas comuns:","text":"<ul> <li>Casos de uso (UML) \u2192 mostram intera\u00e7\u00f5es do usu\u00e1rio com o sistema.  </li> <li>User stories (\u00e1geis) \u2192 pequenas frases que descrevem funcionalidades.  </li> <li>Exemplo: \"Como aluno, quero acessar minhas notas online para acompanhar meu desempenho.\" </li> <li>Backlog de produto \u2192 lista priorizada de requisitos.  </li> </ul>"},{"location":"coelhos/Requisitos/#5-validacao-e-verificacao","title":"5. Valida\u00e7\u00e3o e Verifica\u00e7\u00e3o","text":"<ul> <li>Valida\u00e7\u00e3o: verificar se os requisitos realmente atendem \u00e0s necessidades do cliente.  </li> <li>Verifica\u00e7\u00e3o: conferir se os requisitos foram implementados corretamente no sistema.  </li> </ul> <p>\ud83d\udccc M\u00e9todos: - Revis\u00f5es com stakeholders. - Prototipagem validada. - Testes de aceita\u00e7\u00e3o.  </p>"},{"location":"coelhos/Requisitos/#6-gerenciamento-de-requisitos","title":"6. Gerenciamento de Requisitos","text":"<p>Durante o ciclo de vida de um projeto, \u00e9 comum que os requisitos mudem. Novas demandas podem surgir, outras se tornarem obsoletas, ou ainda precisarem de ajustes. Por isso, n\u00e3o basta s\u00f3 elicitar requisitos: \u00e9 necess\u00e1rio gerenciar.  </p>"},{"location":"coelhos/Requisitos/#principais-atividades-de-gerenciamento","title":"Principais Atividades de Gerenciamento:","text":"<ul> <li>Controle de mudan\u00e7as </li> <li>Cada altera\u00e7\u00e3o deve ser registrada, avaliada e aprovada antes de ser implementada.  </li> <li> <p>Isso evita que mudan\u00e7as inesperadas prejudiquem o cronograma ou aumentem custos.  </p> </li> <li> <p>Rastreabilidade </p> </li> <li>Significa acompanhar o \u201ccaminho\u201d de cada requisito:  <ul> <li>Onde surgiu (usu\u00e1rio/cliente)  </li> <li>Onde foi documentado  </li> <li>Onde \u00e9 implementado no c\u00f3digo  </li> <li>Onde \u00e9 testado e validado  </li> </ul> </li> <li> <p>Isso ajuda a garantir que nada importante seja perdido.  </p> </li> <li> <p>Prioriza\u00e7\u00e3o </p> </li> <li>Como os recursos (tempo, equipe, or\u00e7amento) s\u00e3o limitados, nem todos os requisitos podem ser feitos ao mesmo tempo.  </li> <li>Para decidir o que vem primeiro, uma t\u00e9cnica simples e bastante usada \u00e9 a MoSCoW (ou Impact/Effort Matrix no final do documento):  </li> </ul>"},{"location":"coelhos/Requisitos/#a-tecnica-moscow","title":"A T\u00e9cnica MoSCoW","text":"<p>MoSCoW \u00e9 um acr\u00f4nimo que ajuda a classificar requisitos em quatro categorias: \u27a1\ufe0f Significado (imagem em <code>./assets/MoSCoW.png</code>):  Retirado de: Agile in Practice: Prioritisation using MoSCoW</p> <ol> <li>Must Have (Deve ter) \u2705  </li> <li>Requisitos obrigat\u00f3rios, sem eles o sistema n\u00e3o funciona.  </li> <li> <p>Exemplo: \u201cO usu\u00e1rio deve conseguir fazer login.\u201d  </p> </li> <li> <p>Should Have (Deveria ter) \ud83d\udc4d  </p> </li> <li>Muito importantes, mas n\u00e3o cr\u00edticos. Podem ser entregues depois.  </li> <li> <p>Exemplo: \u201cO sistema deveria ter autentica\u00e7\u00e3o em dois fatores.\u201d  </p> </li> <li> <p>Could Have (Poderia ter) \u2728  </p> </li> <li>Funcionalidades desej\u00e1veis, mas opcionais.  </li> <li> <p>Exemplo: \u201cO sistema poderia ter modo escuro.\u201d  </p> </li> <li> <p>Won\u2019t Have (N\u00e3o ter\u00e1 por agora) \u274c  </p> </li> <li>Requisitos que foram discutidos, mas decididos para n\u00e3o serem implementados nesta vers\u00e3o.  </li> <li>Exemplo: \u201cIntegra\u00e7\u00e3o com redes sociais n\u00e3o ser\u00e1 feita nesta release.\u201d  </li> </ol> <p>\ud83d\udc49 Essa t\u00e9cnica ajuda equipes a focarem no que realmente entrega valor ao usu\u00e1rio primeiro, deixando extras para depois.  </p>"},{"location":"coelhos/Requisitos/#7-boas-praticas","title":"7. Boas Pr\u00e1ticas","text":"<ul> <li>Escrever requisitos de forma clara e objetiva.  </li> <li>Evitar termos amb\u00edguos (r\u00e1pido, f\u00e1cil, eficiente).  </li> <li>Manter os requisitos sempre atualizados.  </li> <li>Validar constantemente com o cliente.  </li> </ul>"},{"location":"coelhos/Requisitos/#8-exemplos-visuais","title":"8. Exemplos Visuais","text":""},{"location":"coelhos/Requisitos/#story-map","title":"Story Map","text":"<p>O Story Map \u00e9 uma t\u00e9cnica visual usada para organizar requisitos de software de forma que todos entendam como o usu\u00e1rio interage com o sistema.  </p> <p>\u27a1\ufe0f Estrutura b\u00e1sica (imagem em <code>./assets/StoryMap.png</code>):  Retirado de: User Story Mapping Tutorial (How to create, read, and use story maps)</p>"},{"location":"coelhos/Requisitos/#principais-conceitos-do-story-map","title":"Principais Conceitos do Story Map:","text":"<ul> <li>Backbone  \u2192 Linha superior com as narrativas principais (grandes funcionalidades).  </li> <li>Narrativa  \u2192 Sequ\u00eancia de passos lida na horizontal (mostra o fluxo da intera\u00e7\u00e3o do usu\u00e1rio).  </li> <li>Atividade \u2192 Conjunto de passos necess\u00e1rios para alcan\u00e7ar um objetivo.  </li> <li>Step (Passo)  \u2192 Qualquer item no mapa, representando uma a\u00e7\u00e3o do usu\u00e1rio.  </li> <li>Prioridade  \u2192 Itens mais importantes ficam no topo (alto valor para o usu\u00e1rio), os menos importantes abaixo.  </li> <li>Milestones  \u2192 Divis\u00f5es que mostram entregas incrementais do sistema.  </li> </ul>"},{"location":"coelhos/Requisitos/#por-que-usar-story-mapping","title":"Por que usar Story Mapping?","text":"<ul> <li>Ajuda a visualizar o produto inteiro.  </li> <li>Facilita a prioriza\u00e7\u00e3o de funcionalidades.  </li> <li>Mostra como os requisitos se conectam em jornadas de usu\u00e1rio.  </li> <li>\u00datil em times \u00e1geis, pois conecta requisitos com releases e backlog.  </li> </ul>"},{"location":"coelhos/Requisitos/#matriz-de-acao-e-prioridade","title":"Matriz de A\u00e7\u00e3o e Prioridade","text":"<p>A Action Priority Matrix \u00e9 uma ferramenta visual usada para priorizar requisitos, tarefas ou funcionalidades com base em dois crit\u00e9rios: - Esfor\u00e7o (Effort) \u2192 quanto trabalho ou recurso \u00e9 necess\u00e1rio. - Impacto (Impact) \u2192 quanto valor ou benef\u00edcio traz para o usu\u00e1rio ou neg\u00f3cio.  </p> <p>\u27a1\ufe0f Estrutura b\u00e1sica (imagem em <code>./assets/ActionPriorityMatrix.png</code>): </p>"},{"location":"coelhos/Requisitos/#quadrantes-da-matriz","title":"Quadrantes da Matriz:","text":"<ul> <li>Quick Wins (Vit\u00f3rias R\u00e1pidas) \ud83d\udfe9  </li> <li>Baixo esfor\u00e7o, alto impacto.  </li> <li> <p>S\u00e3o as tarefas que devem ser priorizadas primeiro.  </p> </li> <li> <p>Important Tasks (Tarefas Importantes) \ud83d\udfe8  </p> </li> <li>Alto esfor\u00e7o, alto impacto.  </li> <li> <p>Exigem mais tempo e recursos, mas trazem grande valor.  </p> </li> <li> <p>Other Tasks (Outras Tarefas) \u2b1c  </p> </li> <li>Baixo esfor\u00e7o, baixo impacto.  </li> <li> <p>Podem ser feitas se sobrar tempo, mas n\u00e3o s\u00e3o prioridade.  </p> </li> <li> <p>Ungrateful Tasks (Tarefas Ingratas) \ud83d\udfe5  </p> </li> <li>Alto esfor\u00e7o, baixo impacto.  </li> <li>Geralmente devem ser evitadas ou deixadas por \u00faltimo.  </li> </ul>"},{"location":"coelhos/Requisitos/#por-que-usar-essa-matriz","title":"Por que usar essa matriz?","text":"<ul> <li>Ajuda a decidir onde investir tempo e recursos.  </li> <li>Facilita a gest\u00e3o de requisitos quando h\u00e1 muitas demandas.  </li> <li>Apoia a tomada de decis\u00e3o \u00e1gil em times de software.  </li> </ul>"},{"location":"coelhos/Requisitos/#9-conclusao","title":"9. Conclus\u00e3o","text":"<ul> <li>Os requisitos de software s\u00e3o a base do desenvolvimento.  </li> <li>Um projeto com requisitos mal definidos tende a falhar.  </li> <li>Aprender a elicitar, documentar, validar e gerenciar requisitos \u00e9 essencial para qualquer engenheiro de software.  </li> </ul>"},{"location":"coelhos/Requisitos/#10-linksbibliografia","title":"10. Links/Bibliografia","text":"<p>Levantamento de Requisitos: O Guia Definitivo para QUALQUER PROJETO na Programa\u00e7\u00e3o: https://www.youtube.com/watch?v=xEdGAC0qzgY Requisito Funcional e N\u00e3o Funcional de Software: entenda a diferen\u00e7a.:https://www.youtube.com/watch?v=YLd6AWKVyas Definition of ready vs Definition of done | CT Academy: https://www.youtube.com/watch?v=kfSeI6Qvt_Q   User Story Mapping Tutorial (How to create, read, and use story maps): https://www.youtube.com/watch?v=uj3PlPDAlHU   Requisito Funcional e N\u00e3o Funcional de Software: entenda a diferen\u00e7a.:https://www.youtube.com/watch?v=YLd6AWKVyas Agile in Practice: Prioritisation using MoSCoW: https://www.youtube.com/watch?v=QfZo9cxnQgY</p> <p><sub>Documenta\u00e7\u00e3o criada por Tiago Bittencourt: (@TiagoSBittencourt)</sub></p>"},{"location":"dados/ejs/","title":"Documenta\u00e7\u00e3o de Dados \u2014 Empresas Juniores (EJs)","text":"<p>Este documento descreve a estrutura dos dados relacionados \u00e0s Empresas Juniores (EJs) da Universidade de Bras\u00edlia (UnB), incluindo diferentes faculdades/campus.  </p> <p>Os dados das EJs foram extra\u00eddos do PDF do portf\u00f3lio das EJs da UnB, utilizando um script de leitura e extra\u00e7\u00e3o de dados desenvolvido por Tiago Bittencourt.  </p> <p>Ele serve como refer\u00eancia para desenvolvedores, analistas e para o fluxo de ETL, garantindo consist\u00eancia e padroniza\u00e7\u00e3o na coleta, armazenamento e uso desses dados.</p> <p></p>"},{"location":"dados/ejs/#estrutura-da-tabela-empresas-juniores-csv","title":"Estrutura da Tabela: Empresas Juniores (.csv)","text":"Coluna Tipo de Dado Descri\u00e7\u00e3o Observa\u00e7\u00f5es <code>Nome</code> string Nome oficial da empresa j\u00fanior. Ex: \"CJR\" <code>Faculdade</code> string Faculdade/campus a qual a EJ est\u00e1 vinculada. Permite expans\u00e3o para diferentes unidades. <code>Cursos</code> string Cursos ou \u00e1reas atendidas ou de atua\u00e7\u00e3o da EJ. Pode ser m\u00faltiplo, separados por v\u00edrgula ou lista. <code>Sobre</code> string Descri\u00e7\u00e3o detalhada da EJ, hist\u00f3ria, objetivos e contexto. Pode conter m\u00faltiplas linhas ou par\u00e1grafos. <code>Missao</code> string Miss\u00e3o declarada da EJ. Opcional; pode ficar vazio se n\u00e3o houver. <code>Visao</code> string Vis\u00e3o declarada da EJ. Opcional; pode ficar vazio se n\u00e3o houver. <code>Valores</code> string Valores institucionais ou princ\u00edpios da EJ. Opcional; pode ficar vazio se n\u00e3o houver. <code>Servicos</code> string Lista dos principais servi\u00e7os oferecidos pela EJ. Ex: \"Sistemas Web, Consultoria, PWA, E-Commerce\" <code>Site</code> string Website oficial da EJ. Opcional; formato URL (ex: <code>cjr.org.br</code>). <code>Instagram</code> string Conta oficial no Instagram da EJ. Opcional; prefixo <code>@</code>."},{"location":"dados/ejs/#observacoes","title":"Observa\u00e7\u00f5es","text":"<ul> <li> <p>A coluna Faculdade permite identificar o campus ou unidade da EJ, tornando poss\u00edvel filtrar por localiza\u00e7\u00e3o.</p> </li> <li> <p>Campos opcionais (Missao, Visao, Valores, Site, Instagram) podem ficar vazios se n\u00e3o houver informa\u00e7\u00e3o dispon\u00edvel.</p> </li> <li> <p>Recomenda-se manter consist\u00eancia nos formatos de texto, URLs e nomes para facilitar buscas, filtros e recomenda\u00e7\u00f5es no sistema.</p> </li> <li> <p>Esta documenta\u00e7\u00e3o deve ser atualizada sempre que novas EJs forem adicionadas ou houver altera\u00e7\u00f5es na estrutura dos dados.</p> </li> </ul>"},{"location":"dados/labs/","title":"Documenta\u00e7\u00e3o de Dados \u2014 Laborat\u00f3rios FCTE","text":"<p>Este documento descreve a estrutura dos dados relacionados aos Laborat\u00f3rios da FCTE da Universidade de Bras\u00edlia (UnB).  </p> <p>Os dados foram extra\u00eddos do PDF de infraestrutura e laborat\u00f3rios da UnB e do site de cada uma das engenharias da fcte, extra\u00e7\u00e3o feita por: Tiago Bittencourt.  </p> <p>Esta documenta\u00e7\u00e3o serve como refer\u00eancia para desenvolvedores, analistas e para o fluxo de ETL, garantindo consist\u00eancia e padroniza\u00e7\u00e3o na coleta, armazenamento e uso desses dados.</p> <p></p>"},{"location":"dados/labs/#estrutura-da-tabela-laboratorios-csv","title":"Estrutura da Tabela: Laborat\u00f3rios (.csv)","text":"Coluna Tipo de Dado Descri\u00e7\u00e3o Observa\u00e7\u00f5es <code>Nome</code> string Nome oficial do laborat\u00f3rio. Ex: \"AI Lab\" <code>SubTitulo</code> string Breve descri\u00e7\u00e3o ou subt\u00edtulo do laborat\u00f3rio. Ex: \"Laborat\u00f3rio de Intelig\u00eancia Artificial\" <code>Faculdade</code> string Faculdade a qual o laborat\u00f3rio est\u00e1 vinculado. Atualmente todos s\u00e3o da FCTE; escal\u00e1vel para outras. <code>Curso</code> string Curso ou \u00e1rea de atua\u00e7\u00e3o principal do laborat\u00f3rio. Ex: \"Engenharia de Software\" <code>Sobre</code> string Descri\u00e7\u00e3o detalhada do laborat\u00f3rio, miss\u00e3o e objetivos. Pode conter m\u00faltiplas linhas ou par\u00e1grafos. <code>Coordenador</code> string Nome do respons\u00e1vel ou coordenador do laborat\u00f3rio. Ex: \"Nilton Correia da Silva\" <code>Email</code> string E-mail de contato do laborat\u00f3rio ou coordenador. Deve ser v\u00e1lido e preferencialmente institucional. <code>Instagram</code> string Conta oficial no Instagram. Opcional; prefixo <code>@</code>. <code>Site</code> string Website oficial do laborat\u00f3rio. Opcional; formato URL (ex: <code>ailab.unb.br</code>)."},{"location":"dados/labs/#observacoes","title":"Observa\u00e7\u00f5es","text":"<ul> <li> <p>Embora atualmente todos os laborat\u00f3rios estejam na FCTE, a tabela foi projetada para permitir expans\u00e3o futura para outras faculdades.</p> </li> <li> <p>Campos opcionais (Instagram, Site) podem ficar vazios se n\u00e3o houver informa\u00e7\u00e3o dispon\u00edvel.</p> </li> <li> <p>Recomenda-se manter consist\u00eancia nos formatos de e-mail, URLs e nomes para facilitar buscas, filtros e recomenda\u00e7\u00f5es no sistema.</p> </li> <li> <p>Esta documenta\u00e7\u00e3o deve ser atualizada sempre que novos laborat\u00f3rios forem adicionados ou houver altera\u00e7\u00f5es na estrutura dos dados.</p> </li> </ul>"},{"location":"open-source/code-of-conduct/","title":"\ud83d\udcdc C\u00f3digo de Conduta do Mural UnB","text":""},{"location":"open-source/code-of-conduct/#nosso-compromisso","title":"\ud83e\udd1d Nosso Compromisso","text":"<p>N\u00f3s, como membros, contribuidores e l\u00edderes do projeto Mural UnB, comprometemo-nos a fazer da participa\u00e7\u00e3o em nossa comunidade uma experi\u00eancia livre de ass\u00e9dio para todos, independentemente de idade, tamanho corporal, defici\u00eancia visible ou invis\u00edvel, etnia, caracter\u00edsticas sexuais, identidade e express\u00e3o de g\u00eanero, n\u00edvel de experi\u00eancia, educa\u00e7\u00e3o, status socioecon\u00f4mico, nacionalidade, apar\u00eancia pessoal, ra\u00e7a, religi\u00e3o ou identidade e orienta\u00e7\u00e3o sexual.</p> <p>Comprometemo-nos a agir e interagir de maneiras que contribuam para uma comunidade aberta, acolhedora, diversificada, inclusiva e saud\u00e1vel.</p>"},{"location":"open-source/code-of-conduct/#nossos-padroes","title":"Nossos Padr\u00f5es","text":"<p>Exemplos de comportamentos que contribuem para um ambiente positivo em nossa comunidade incluem:</p> <ul> <li>Demonstrar empatia e gentileza para com outras pessoas</li> <li>Respeitar opini\u00f5es, pontos de vista e experi\u00eancias diferentes</li> <li>Oferecer e aceitar cr\u00edticas construtivas de forma educada</li> <li>Assumir responsabilidade com erros</li> <li>Focar no que \u00e9 melhor n\u00e3o apenas para n\u00f3s como indiv\u00edduos, mas para a comunidade como um todo</li> </ul> <p>\ud83d\udeab Exemplos de comportamentos inaceit\u00e1veis incluem:</p> <ul> <li>O uso de linguagem ou imagens sexualizadas, bem como avan\u00e7os sexuais de qualquer tipo</li> <li>Coment\u00e1rios insultuosos ou depreciativos, ataques pessoais ou pol\u00edticos</li> <li>Ass\u00e9dio p\u00fablico ou privado</li> <li>Divulgar informa\u00e7\u00f5es privadas de outras pessoas, como um endere\u00e7o f\u00edsico ou de e-mail, sem sua permiss\u00e3o expl\u00edcita</li> <li>Qualquer outra conduta que possa ser razoavelmente considerada inadequada em um ambiente profissional</li> </ul>"},{"location":"open-source/code-of-conduct/#responsabilidades-de-execucao","title":"\ud83d\udce2 Responsabilidades de Execu\u00e7\u00e3o","text":"<p>Os l\u00edderes da comunidade s\u00e3o respons\u00e1veis por esclarecer e fazer cumprir nossos padr\u00f5es de comportamento aceit\u00e1vel e tomar\u00e3o a\u00e7\u00f5es corretivas apropriadas e justas em resposta a qualquer comportamento que considerem inadequado, amea\u00e7ador, ofensivo ou prejudicial.</p> <p>Os l\u00edderes da comunidade t\u00eam o direito e a responsabilidade de remover, editar ou rejeitar coment\u00e1rios, edi\u00e7\u00f5es e outras contribui\u00e7\u00f5es que n\u00e3o estejam alinhadas com este C\u00f3digo de Conduta e ir\u00e3o comunicar as raz\u00f5es por tr\u00e1s das decis\u00f5es de modera\u00e7\u00e3o quando for apropriado.</p>"},{"location":"open-source/code-of-conduct/#escopo","title":"Escopo","text":"<p>Este C\u00f3digo de Conduta aplica-se em todos os espa\u00e7os da comunidade, tanto online quanto presencialmente. Isso inclui, mas n\u00e3o se limita a: reposit\u00f3rios do GitHub, canais de Discord, e-mails, eventos e meetups oficialmente relacionados ao projeto.</p>"},{"location":"open-source/code-of-conduct/#enforcement","title":"Enforcement","text":"<p>Inst\u00e2ncias de comportamento abusivo, de ass\u00e9dio ou de outra forma inaceit\u00e1vel podem ser reportadas para os l\u00edderes da comunidade respons\u00e1veis pela enforcement em [INSERIR ENDERE\u00c7O DE E-MAIL OU LINK DE CONTATO AQUI]. Todas as queixas ser\u00e3o revisadas e investigadas de maneira r\u00e1pida e justa.</p>"},{"location":"open-source/code-of-conduct/#todos-os-lideres-da-comunidade-sao-obrigados-a-respeitar-a-privacidade-e-a-seguranca-de-quem-reportar-um-incidente","title":"Todos os l\u00edderes da comunidade s\u00e3o obrigados a respeitar a privacidade e a seguran\u00e7a de quem reportar um incidente.","text":""},{"location":"open-source/code-of-conduct/#diretrizes-de-enforcement","title":"Diretrizes de Enforcement","text":"<p>Os l\u00edderes da comunidade seguir\u00e3o estas Diretrizes de Impacto na Comunidade para determinar as consequ\u00eancias para qualquer a\u00e7\u00e3o que viole este C\u00f3digo de Conduta:</p>"},{"location":"open-source/code-of-conduct/#1-acao-corretiva","title":"1. A\u00e7\u00e3o Corretiva","text":"<p>Impacto na Comunidade: Uso de linguagem inadequada ou outro comportamento considerado n\u00e3o profissional ou indesejado.</p> <p>Consequ\u00eancia: Um aviso escrito e privado dos l\u00edderes da comunidade, oferecendo clareza sobre a natureza da viola\u00e7\u00e3o e uma explica\u00e7\u00e3o de por que o comportamento foi inadequado.</p>"},{"location":"open-source/code-of-conduct/#2-banimento-temporario","title":"2. Banimento Tempor\u00e1rio","text":"<p>Impacto na Comunidade: Uma viola\u00e7\u00e3o por meio de um incidente \u00fanico ou s\u00e9rie de a\u00e7\u00f5es.</p> <p>Consequ\u00eancia: Um banimento tempor\u00e1rio de qualquer tipo de intera\u00e7\u00e3o ou comunica\u00e7\u00e3o p\u00fablica com a comunidade por um per\u00edodo determinado. Durante este per\u00edodo, n\u00e3o \u00e9 permitida qualquer intera\u00e7\u00e3o p\u00fablica ou privada com as pessoas envolvidas, incluindo intera\u00e7\u00f5es n\u00e3o solicitadas com aqueles que est\u00e3o aplicando o C\u00f3digo de Conduta.</p>"},{"location":"open-source/code-of-conduct/#3-banimento-permanente","title":"3. Banimento Permanente","text":"<p>Impacto na Comunidade: Demonstrar um padr\u00e3o de viola\u00e7\u00e3o dos padr\u00f5es da comunidade, incluindo comportamentos de abuso sustentados, ass\u00e9dio a indiv\u00edduos ou agress\u00e3o ou deprecia\u00e7\u00e3o de classes de indiv\u00edduos. Consequ\u00eancia: Um banimento permanente de qualquer tipo de intera\u00e7\u00e3o p\u00fablica dentro da comunidade.</p>"},{"location":"open-source/contribuir/","title":"\ud83e\udd1d Contribuindo com o Projeto","text":"<p>Obrigado por considerar contribuir com este projeto! Para mantermos a qualidade e organiza\u00e7\u00e3o, siga as instru\u00e7\u00f5es abaixo.</p>"},{"location":"open-source/contribuir/#como-comecar","title":"\ud83d\ude80 Como come\u00e7ar","text":"<ol> <li> <p>Fork do reposit\u00f3rio.</p> </li> <li> <p>Crie uma branch com um nome descritivo:</p> </li> </ol> <pre><code>   git checkout -b feat/nome-da-feature\n</code></pre> <ol> <li> <p>Fa\u00e7a suas altera\u00e7\u00f5es no c\u00f3digo.</p> </li> <li> <p>Garanta que o projeto roda sem erros.</p> </li> <li>Envie suas altera\u00e7\u00f5es via Pull Request (PR).</li> </ol>"},{"location":"open-source/contribuir/#mensagens-de-commit","title":"\ud83d\udcdd Mensagens de Commit","text":""},{"location":"open-source/contribuir/#os-commits-devem-seguir-o-padrao","title":"Os commits devem seguir o padr\u00e3o:","text":"<pre><code>&lt;tipo&gt;: &lt;descri\u00e7\u00e3o curta&gt;\n</code></pre>"},{"location":"open-source/contribuir/#tipos-aceitos","title":"Tipos aceitos:","text":"<p>feat \u2192 nova funcionalidade</p> <p>fix \u2192 corre\u00e7\u00e3o de bug</p> <p>docs \u2192 documenta\u00e7\u00e3o</p> <p>style \u2192 formata\u00e7\u00e3o (sem alterar l\u00f3gica)</p> <p>refactor \u2192 refatora\u00e7\u00e3o de c\u00f3digo</p> <p>test \u2192 cria\u00e7\u00e3o/altera\u00e7\u00e3o de testes</p> <p>chore \u2192 manuten\u00e7\u00e3o do projeto</p> <p>Exemplos:</p> <pre><code>feat: adicionar tela de cadastro de usu\u00e1rio\nfix: corrigir erro c\u00e1lculo de m\u00e9dia\ndocs: atualizar README com instru\u00e7\u00f5es de instala\u00e7\u00e3o\n</code></pre> <p>\ud83d\udea8 Caso o commit for resolver uma issue aberta adicione (#numero-da-issue) no final da mensagem do commit</p>"},{"location":"open-source/contribuir/#estrutura-do-codigo","title":"\ud83d\udcc2 Estrutura do C\u00f3digo","text":"<ul> <li> <p>Mantenha a organiza\u00e7\u00e3o de pastas j\u00e1 definida no projeto.</p> </li> <li> <p>Nomeie arquivos e pastas em min\u00fasculo-com-h\u00edfen (exemplo-arquivo.js).</p> </li> <li> <p>Evite nomes gen\u00e9ricos como temp, test1, new.</p> </li> </ul>"},{"location":"open-source/contribuir/#padrao-de-codigo","title":"\u2705 Padr\u00e3o de C\u00f3digo","text":"<ul> <li> <p>Utilize a formata\u00e7\u00e3o definida 4 espa\u00e7os (quando aplic\u00e1vel).</p> </li> <li> <p>Siga boas pr\u00e1ticas de legibilidade: c\u00f3digo limpo, fun\u00e7\u00f5es curtas, nomes claros.</p> </li> <li> <p>Escreva coment\u00e1rios apenas quando necess\u00e1rio para contexto.</p> </li> </ul>"},{"location":"open-source/contribuir/#testes","title":"\ud83e\uddea Testes","text":"<ul> <li> <p>Sempre que poss\u00edvel, adicione testes para as novas funcionalidades.</p> </li> <li> <p>Garanta que todos os testes existentes passam antes de abrir o PR:</p> </li> </ul>"},{"location":"open-source/contribuir/#pull-requests-prs","title":"\ud83d\udd0e Pull Requests (PRs)","text":"<ul> <li> <p>Preencha a descri\u00e7\u00e3o do PR explicando: o que foi feito, por que e como testar.</p> </li> <li> <p>Relacione issues se existir (ex: Closes #10).</p> </li> <li> <p>Mantenha o PR focado em uma mudan\u00e7a espec\u00edfica.</p> </li> </ul>"},{"location":"open-source/contribuir/#boas-praticas","title":"\ud83d\udca1 Boas Pr\u00e1ticas","text":"<ul> <li> <p>Commits pequenos e objetivos.</p> </li> <li> <p>Discuss\u00f5es e d\u00favidas devem ser abertas como issues.</p> </li> <li> <p>Sempre atualize sua branch com a main antes de abrir PR.</p> </li> </ul>"},{"location":"open-source/contribuir/#codigo-de-conduta","title":"\ud83d\udcdc C\u00f3digo de Conduta","text":"<p>Todos os participantes devem seguir o C\u00f3digo de Conduta da Comunidade. Respeito e colabora\u00e7\u00e3o s\u00e3o essenciais para o sucesso do projeto.</p>"},{"location":"requisitos/funcionais/","title":"Vis\u00e3o Geral","text":"<p>O prop\u00f3sito dos requisitos funcionais \u00e9 definir o que a plataforma Mural UnB deve oferecer ao usu\u00e1rio em termos de comportamento e funcionalidades observ\u00e1veis. Abaixo est\u00e3o os epics j\u00e1 pensados e desdobrados em user stories, crit\u00e9rios de aceita\u00e7\u00e3o e exemplos de payloads/endpoint quando aplic\u00e1vel.</p> <p>\ud83d\udd34 P0 (Cr\u00edtico / MVP) \u2013 funcionalidade essencial para o funcionamento b\u00e1sico. \ud83d\udfe0 P1 (Importante) \u2013 relevante, mas pode ser entregue ap\u00f3s o MVP. \ud83d\udfe2 P2 (Desej\u00e1vel) \u2013 incrementos ou funcionalidades complementares.  </p>"},{"location":"requisitos/funcionais/#papeis-roles","title":"Pap\u00e9is (roles)","text":"<ul> <li> <p>Aluno: usu\u00e1rio principal que consome recomenda\u00e7\u00f5es e favorita oportunidades.</p> </li> <li> <p>Professor / Orientador: pode solicitar a publica\u00e7\u00e3o de oportunidades (opcional, dependendo do MVP).</p> </li> <li> <p>Administrador: gerencia conte\u00fado, valida publica\u00e7\u00f5es e resolve abusos.</p> </li> </ul>"},{"location":"requisitos/funcionais/#epic-autenticacao","title":"Epic: Autentica\u00e7\u00e3o","text":""},{"location":"requisitos/funcionais/#us-01-cadastro-login","title":"US-01 \u2014 Cadastro / Login","text":"<p>Descri\u00e7\u00e3o: Usu\u00e1rio pode criar conta com email e senha | pode fazer login.</p> <p>Prioridade: P0 \ud83d\udd34</p> <ul> <li> <p>Endpoints (ex.):</p> </li> <li> <p>POST /api/auth/register \u2014 { name, email, password }</p> </li> <li> <p>POST /api/auth/login \u2014 { email, password } -&gt; retorna { access_token, refresh_token, user }</p> </li> </ul>"},{"location":"requisitos/funcionais/#us-02-oauth-googleunb-sso","title":"US-02 \u2014 OAuth (Google/UnB SSO)","text":"<p>Descri\u00e7\u00e3o: Login via Google/SSO da universidade (se poss\u00edvel).</p> <p>Prioridade: P1 \ud83d\udfe0</p>"},{"location":"requisitos/funcionais/#us-03-recuperacao-de-senha","title":"US-03 \u2014 Recupera\u00e7\u00e3o de senha","text":"<p>Descri\u00e7\u00e3o: Usu\u00e1rio solicita recupera\u00e7\u00e3o por email.</p> <p>Prioridade: P1 \ud83d\udfe0</p> <p>Crit\u00e9rios: Email com link expir\u00e1vel (15\u201360 min).</p>"},{"location":"requisitos/funcionais/#epic-perfil-personalizacao-inicial","title":"Epic: Perfil &amp; Personaliza\u00e7\u00e3o inicial","text":""},{"location":"requisitos/funcionais/#us-04-perfil-do-usuario","title":"US-04 \u2014 Perfil do Usu\u00e1rio","text":"<p>Descri\u00e7\u00e3o: Usu\u00e1rio pode ver e editar seu perfil (nome, curso, semestre, interesses).</p> <p>Prioridade: P0 \ud83d\udd34</p> <p>Campos sugeridos: name, email (read-only), campus, curso, semestre, interesses.</p> <p>Crit\u00e9rios: Altera\u00e7\u00f5es s\u00e3o salvas e refletidas no feed de recomenda\u00e7\u00f5es.</p>"},{"location":"requisitos/funcionais/#us-05-onboarding-personalizacao-do-primeiro-acesso","title":"US-05 \u2014 Onboarding / Personaliza\u00e7\u00e3o do Primeiro Acesso","text":"<p>Descri\u00e7\u00e3o: Ao criar conta, o usu\u00e1rio responde um fluxo curto para personalizar recomenda\u00e7\u00f5es.</p> <p>Prioridade: P0 \ud83d\udd34</p> <p>Passos: curso e escolher \u00e1reas de interesse (tags).</p> <p>Crit\u00e9rios: A conclus\u00e3o do onboarding atualiza prefer\u00eancia do usu\u00e1rio e afeta o feed.</p>"},{"location":"requisitos/funcionais/#epic-feed-recomendacao","title":"Epic: Feed &amp; Recomenda\u00e7\u00e3o","text":""},{"location":"requisitos/funcionais/#us-06-feed-personalizado","title":"US-06 \u2014 Feed personalizado","text":"<p>Descri\u00e7\u00e3o: Usu\u00e1rios recebem lista de oportunidades ordenada por relev\u00e2ncia.</p> <p>Prioridade: P0 \ud83d\udd34</p> <p>Exemplo de response: { items: [{ id, oportunidade_object, type, score, tags }] }</p>"},{"location":"requisitos/funcionais/#us-07-favoritar-bookmark-salvar","title":"US-07 \u2014 Favoritar / Bookmark (Salvar)","text":"<p>Descri\u00e7\u00e3o: Usu\u00e1rio pode favoritar oportunidade; ver lista de favoritos no perfil.</p> <p>Prioridade: P1 \ud83d\udfe0</p> <p>Crit\u00e9rio: Favorito \u00e9 persistido por usu\u00e1rio; bot\u00e3o alterna estado pr\u00e9dio/filled.</p>"},{"location":"requisitos/funcionais/#us-08-notificacoes-push-email","title":"US-08 \u2014 Notifica\u00e7\u00f5es (push / email)","text":"<p>Descri\u00e7\u00e3o: Notificar usu\u00e1rio sobre novas oportunidades relevantes.</p> <p>Prioridade: P1 \ud83d\udfe0</p> <p>Crit\u00e9rios: Usu\u00e1rio pode ativar/desativar por canal e por tipo de oportunidade.</p>"},{"location":"requisitos/funcionais/#epic-oportunidade","title":"Epic: Oportunidade","text":""},{"location":"requisitos/funcionais/#us-09-listar-oportunidades","title":"US-09 \u2014 Listar oportunidades","text":"<p>Descri\u00e7\u00e3o: Endpoint p\u00fablico para listar oportunidades com filtros.</p> <p>Prioridade: P0 \ud83d\udd34</p>"},{"location":"requisitos/funcionais/#us-10-pesquisar-oportunidade-especifica","title":"US-10 \u2014 Pesquisar oportunidade espec\u00edfica","text":"<p>Descri\u00e7\u00e3o: Capaz de retornar oportunidades associadas a pesquisa</p> <p>Prioridade: P0 \ud83d\udd34</p>"},{"location":"requisitos/funcionais/#epic-navbar-navegacao","title":"Epic: Navbar &amp; Navega\u00e7\u00e3o","text":""},{"location":"requisitos/funcionais/#us-11-navbar-responsiva","title":"US-11 \u2014 Navbar responsiva","text":"<p>Descri\u00e7\u00e3o: Navbar fixa com acessos: Home, Oportunidades, Favoritos, Perfil, Sobre, Login/Logout.</p> <p>Prioridade: P0 \ud83d\udd34</p> <p>Crit\u00e9rio: Mostra items de acordo com auth state (login vs logout).</p>"},{"location":"requisitos/funcionais/#epic-etl-dados","title":"Epic: ETL Dados","text":""},{"location":"requisitos/funcionais/#us-12-etl-das-ejs-fcte","title":"US-12 \u2014 ETL das EJs (FCTE)","text":"<p>Descri\u00e7\u00e3o: Coletar, transformar e carregar o banco de dados com as empresas juniores da FCTE (scopo inicial).</p> <p>Prioridade: P0 \ud83d\udd34</p> <p>Exemplo de estrutura: </p> <pre><code>EJs {\n  id: UUID PK\n  nome: string,\n  curso: enum(Software, Eletr\u00f4nica, Aeroespacial, Automotiva, Energia) FK,\n  campus: string FK,\n  sobre: string,\n  tags: FK,\n  site?: string, \n  instagram?: string,\n}\n</code></pre>"},{"location":"requisitos/funcionais/#us-13-etl-das-laboratorios-fcte","title":"US-13 \u2014 ETL das Laborat\u00f3rios (FCTE)","text":"<p>Descri\u00e7\u00e3o: Coletar, transformar e carregar o banco de dados com os laborat\u00f3rios de pesquisa da FCTE (scopo inicial).</p> <p>Prioridade: P0 \ud83d\udd34</p> <p>Exemplo de estrutura: </p> <pre><code>EJs {\n  id: UUID PK\n  nome: string,\n  subTitulo: string,\n  curso: enum(Software, Eletr\u00f4nica, Aeroespacial, Automotiva, Energia) FK,\n  campus: string FK,\n  sobre: string,\n  coordenador: string,\n  email: string,\n  tags: FK,\n  site?: string, \n  instagram?: string,\n}\n</code></pre>"},{"location":"requisitos/funcionais/#us-14-etl-das-equipes-de-competicao-fcte","title":"US-14 \u2014 ETL das Equipes de Competi\u00e7\u00e3o (FCTE)","text":"<p>Descri\u00e7\u00e3o: Coletar, transformar e carregar o banco de dados com as equipes de competi\u00e7\u00e3o da FCTE (scopo inicial).</p> <p>Prioridade: P2 \ud83d\udfe2</p> <p>Exemplo de estrutura: </p> <pre><code>EJs {\n  id: UUID PK\n  nome: string,\n  subTitulo: string,\n  curso: enum(Software, Eletr\u00f4nica, Aeroespacial, Automotiva, Energia) FK,\n  campus: string FK,\n  sobre: string,\n  tags: FK,\n  site?: string, \n  instagram?: string,\n}\n</code></pre>"},{"location":"requisitos/funcionais/#epic-recomendacao-com-ia-banco-vetorizado","title":"Epic: Recomenda\u00e7\u00e3o com IA (Banco Vetorizado)","text":""},{"location":"requisitos/funcionais/#us-15-microsservico-de-vetorizacao","title":"US-15 \u2014 Microsservi\u00e7o de Vetoriza\u00e7\u00e3o","text":"<p>Descri\u00e7\u00e3o: O sistema deve possuir um microsservi\u00e7o dedicado para armazenar embeddings vetoriais de oportunidades e perfis de usu\u00e1rios.</p> <p>Prioridade: P0 \ud83d\udd34</p>"},{"location":"requisitos/funcionais/#conclusao","title":"Conclus\u00e3o","text":"<p>Este documento estabelece a base funcional da plataforma Mural UnB, detalhando epics, user stories, crit\u00e9rios de aceita\u00e7\u00e3o e exemplos t\u00e9cnicos para orientar tanto o desenvolvimento quanto a valida\u00e7\u00e3o do produto. A prioriza\u00e7\u00e3o (P0, P1, P2) auxilia na defini\u00e7\u00e3o do MVP, garantindo foco nas funcionalidades essenciais para entrega inicial de valor.</p>"},{"location":"requisitos/funcionais/#observacao","title":"Observa\u00e7\u00e3o","text":"<p>\ud83d\udd16 Para mais detalhes visuais sobre fluxos, prot\u00f3tipos e mapeamento de funcionalidades, consulte o Figma - Hub do Projeto, que est\u00e1 sendo utilizado pela equipe como central de informa\u00e7\u00f5es.  </p>"},{"location":"requisitos/nao-funcionais/","title":"Requisitos N\u00e3o Funcionais","text":"<p>Os requisitos n\u00e3o funcionais do Mural UnB descrevem as caracter\u00edsticas de qualidade, restri\u00e7\u00f5es t\u00e9cnicas e diretrizes que o sistema deve seguir para garantir desempenho, confiabilidade e uma boa experi\u00eancia de uso.</p>"},{"location":"requisitos/nao-funcionais/#1-usabilidade","title":"1. Usabilidade","text":"<ul> <li>A interface deve ser responsiva, funcionando em desktop e mobile.</li> <li>O design deve seguir os prot\u00f3tipos de alta fidelidade no Figma para manter consist\u00eancia visual.</li> <li>Deve oferecer fluxo de onboarding simples, com no m\u00e1ximo 3\u20134 passos no primeiro acesso.</li> <li>Textos, labels e mensagens de erro devem ser claros e acess\u00edveis.</li> </ul>"},{"location":"requisitos/nao-funcionais/#2-desempenho","title":"2. Desempenho","text":"<ul> <li>Tempo de resposta da API: \u2264 500ms em requisi\u00e7\u00f5es simples.</li> <li>Tempo de carregamento da p\u00e1gina inicial: \u2264 2s em caso geral.</li> </ul>"},{"location":"requisitos/nao-funcionais/#3-seguranca","title":"3. Seguran\u00e7a","text":"<ul> <li>Autentica\u00e7\u00e3o via JWT (Access e Refresh tokens).</li> <li>Senhas devem ser armazenadas usando hash seguro (bcrypt).</li> <li>Conex\u00f5es devem ser feitas exclusivamente em HTTPS.</li> <li>Logs de acesso e erros cr\u00edticos devem ser armazenados de forma segura.</li> </ul>"},{"location":"requisitos/nao-funcionais/#4-manutenibilidade","title":"4. Manutenibilidade","text":"<ul> <li>O c\u00f3digo deve seguir boas pr\u00e1ticas de PEP8 (Python) e ESLint/Prettier (JavaScript/TypeScript).</li> <li>O projeto deve utilizar Docker para padronizar ambientes de desenvolvimento e produ\u00e7\u00e3o.</li> <li>A documenta\u00e7\u00e3o deve estar dispon\u00edvel em GitHub Pages (MkDocs) e atualizada a cada release.</li> <li>Testes unit\u00e1rios devem cobrir ao menos o c\u00f3digo cr\u00edtico no MVP.</li> </ul>"},{"location":"requisitos/nao-funcionais/#5-confiabilidade","title":"5. Confiabilidade","text":"<ul> <li>O sistema deve garantir 99% de uptime em produ\u00e7\u00e3o no MVP.</li> <li>Em caso de falha de microsservi\u00e7os, o sistema deve falhar graciosamente (ex: fallback do feed).</li> <li>Backups autom\u00e1ticos da base de dados devem ser realizados semanlmente.</li> </ul>"},{"location":"requisitos/nao-funcionais/#6-escalabilidade","title":"6. Escalabilidade","text":"<ul> <li>Arquitetura baseada em microsservi\u00e7os, permitindo expans\u00e3o modular.</li> <li>Banco vetorizado para IA deve ser implementado como servi\u00e7o separado.</li> </ul>"},{"location":"requisitos/nao-funcionais/#observacao","title":"Observa\u00e7\u00e3o","text":"<p>\ud83d\udd16 Para mais detalhes visuais e alinhamento de design, consulte o Figma - Hub do Projeto, que centraliza os prot\u00f3tipos e fluxos da equipe.</p>"},{"location":"sprints/sprint-0/","title":"Sprint 0","text":"<p>Na Sprint 0, estabelecemos os fundamentos e a opera\u00e7\u00e3o do nosso projeto. As seguintes defini\u00e7\u00f5es foram conclu\u00eddas:</p>"},{"location":"sprints/sprint-0/#objetivos-concluidos","title":"\ud83c\udfaf Objetivos Conclu\u00eddos","text":"<ul> <li> <p>Estudos Iniciais:</p> <ul> <li>Realizamos o nivelamento de conhecimento sobre as tecnologias, ferramentas e conceitos que ser\u00e3o fundamentais para o projeto.</li> </ul> </li> <li> <p>Coelhos:</p> <ul> <li>Atribu\u00edmos os pap\u00e9is de refer\u00eancia t\u00e9cnica para membros da equipe, que ser\u00e3o respons\u00e1veis por liderar e disseminar o conhecimento em seus temas espec\u00edficos:<ul> <li>Arquitetura de software</li> <li>Requisitos de software</li> <li>Figma(Prototipagem)</li> <li>Git/Github e Github pages </li> </ul> </li> </ul> </li> <li> <p>Rotina de Reuni\u00f5es (Rotina de Sync):</p> <ul> <li>Estabelecemos um calend\u00e1rio claro para garantir o alinhamento cont\u00ednuo da equipe, definindo a frequ\u00eancia, o dia e o hor\u00e1rio das nossas reuni\u00f5es.</li> </ul> </li> <li> <p>Cria\u00e7\u00e3o do tema:</p> <ul> <li>Criamos um tema pr\u00f3prio chamado \"Mural da UnB\"</li> </ul> </li> </ul>"},{"location":"sprints/sprint-1/","title":"Sprint 1","text":""},{"location":"sprints/sprint-1/#o-que-foi-feito","title":"O que foi feito","text":"<p>Estudos especializados para definir as tecnologias do projeto:</p>"},{"location":"sprints/sprint-1/#pesquisas-realizadas","title":"Pesquisas Realizadas","text":"<ul> <li>Banco de Dados: SQL + SQLite para armazenamento</li> <li>Back-end: Django para desenvolvimento da API  </li> <li>Front-end: React + Axios para interface web</li> <li>Machine Learning: Scikit Learn para sistema de recomenda\u00e7\u00f5es</li> </ul>"},{"location":"sprints/sprint-1/#objetivos-alcancados","title":"Objetivos Alcan\u00e7ados","text":"<ul> <li>Defini\u00e7\u00e3o da stack tecnol\u00f3gica do projeto</li> <li>Nivelamento t\u00e9cnico da equipe</li> <li>Prepara\u00e7\u00e3o para o desenvolvimento</li> </ul>"},{"location":"sprints/sprint-1/#status","title":"Status","text":"<p>Todas as pesquisas t\u00e9cnicas foram conclu\u00eddas</p> <p>A equipe est\u00e1 preparada para iniciar o desenvolvimento.</p> <p>Pr\u00f3xima etapa: In\u00edcio da constru\u00e7\u00e3o do MVP</p>"},{"location":"sprints/sprint-2/","title":"Sprint 2","text":""},{"location":"sprints/sprint-2/#o-que-foi-feito","title":"O que foi feito","text":"<p>Implementa\u00e7\u00e3o das bases iniciais do projeto:</p>"},{"location":"sprints/sprint-2/#desenvolvimento-tecnico","title":"Desenvolvimento T\u00e9cnico","text":"<ul> <li>Setup inicial do backend com Django</li> <li>Setup do servidor de IA</li> <li>Estudo de Typescript + TailwindCSS para frontend</li> </ul>"},{"location":"sprints/sprint-2/#documentacao","title":"Documenta\u00e7\u00e3o","text":"<ul> <li>Cria\u00e7\u00e3o do c\u00f3digo de conduta (CODE_OF_CONDUCT.md)</li> <li>Elabora\u00e7\u00e3o do README.md do projeto</li> <li>Adi\u00e7\u00e3o do arquivo CONTRIBUTING.md</li> <li>Documenta\u00e7\u00e3o da arquitetura do sistema</li> </ul>"},{"location":"sprints/sprint-2/#design-e-planejamento","title":"Design e Planejamento","text":"<ul> <li>Levantamento de requisitos no Figma</li> <li>Diagrama de pacotes da arquitetura</li> </ul>"},{"location":"sprints/sprint-2/#status","title":"Status","text":"<p>Bases t\u00e9cnicas e documenta\u00e7\u00e3o estabelecidas</p> <p>Estrutura inicial do projeto preparada para desenvolvimento.</p>"},{"location":"sprints/sprint-3/","title":"Sprint 3","text":""},{"location":"sprints/sprint-3/#o-que-foi-feito","title":"O que foi feito","text":"<p>Nesta Sprint, o foco foi a continua\u00e7\u00e3o do desenvolvimento de funcionalidades essenciais no frontend e backend, al\u00e9m da cria\u00e7\u00e3o de artefatos importantes de design e planejamento. Todas as tarefas planejadas na reuni\u00e3o de 16 de setembro foram conclu\u00eddas.</p>"},{"location":"sprints/sprint-3/#desenvolvimento-tecnico","title":"Desenvolvimento T\u00e9cnico","text":"<ul> <li>Frontend de Cadastro e Login: Implementa\u00e7\u00e3o das telas e da l\u00f3gica para que o usu\u00e1rio possa se cadastrar e logar na plataforma. (Respons\u00e1vel: Luan)</li> <li>Recupera\u00e7\u00e3o de Senha: Desenvolvimento do fluxo de \"esqueci minha senha\" no frontend, incluindo a l\u00f3gica de envio de c\u00f3digo por email. (Respons\u00e1vel: Maria)</li> <li>Levantamento de Dados: Coleta e estrutura\u00e7\u00e3o dos dados iniciais sobre Empresas Juniores e Laborat\u00f3rios para popular o sistema. (Respons\u00e1vel: Tiago)</li> </ul>"},{"location":"sprints/sprint-3/#documentacao","title":"Documenta\u00e7\u00e3o","text":"<ul> <li>Gitpage: Configura\u00e7\u00e3o e estrutura\u00e7\u00e3o inicial da p\u00e1gina de documenta\u00e7\u00e3o do projeto. (Respons\u00e1vel: Luan)</li> <li>Diagrama de Pacotes: Cria\u00e7\u00e3o do diagrama de pacotes para ilustrar a arquitetura l\u00f3gica do backend. (Respons\u00e1vel: Matheus)</li> <li>Artefatos de MDS: Elabora\u00e7\u00e3o dos diagramas Text Tech e Fishbone. (Respons\u00e1vel: Lucas)</li> </ul>"},{"location":"sprints/sprint-3/#design-e-planejamento","title":"Design e Planejamento","text":"<ul> <li>Figma de Alta Fidelidade: Evolu\u00e7\u00e3o do prot\u00f3tipo de baixa fidelidade para um design de alta fidelidade no Figma, detalhando a apar\u00eancia e a experi\u00eancia do usu\u00e1rio. (Respons\u00e1vel: Jo\u00e3o)</li> </ul>"},{"location":"sprints/sprint-3/#status","title":"Status","text":"<p>Funcionalidades essenciais e documenta\u00e7\u00e3o de arquitetura conclu\u00eddas.</p> <p>A base para a intera\u00e7\u00e3o do usu\u00e1rio (cadastro/login) e a estrutura visual do projeto foram finalizadas, permitindo o avan\u00e7o para a integra\u00e7\u00e3o e desenvolvimento do feed principal.</p>"},{"location":"sprints/sprint-4/","title":"Sprint 4","text":""},{"location":"sprints/sprint-4/#o-que-foi-feito","title":"O que foi feito","text":"<p>Com foco na Release 1, a Sprint 04 foi dedicada \u00e0 integra\u00e7\u00e3o entre frontend e backend, ao desenvolvimento das p\u00e1ginas principais de conte\u00fado e \u00e0 finaliza\u00e7\u00e3o da modelagem de dados. As decis\u00f5es tomadas na reuni\u00e3o de 23 de setembro guiaram as atividades.</p>"},{"location":"sprints/sprint-4/#desenvolvimento-tecnico","title":"Desenvolvimento T\u00e9cnico","text":"<ul> <li>Estrutura Frontend com Next.js: Ado\u00e7\u00e3o do Next.js no React, com a configura\u00e7\u00e3o da arquitetura de pastas e o merge das branches iniciais. (Respons\u00e1vel: Maria)</li> <li>Finaliza\u00e7\u00e3o de Rotas e Integra\u00e7\u00e3o: Conclus\u00e3o das rotas de frontend, integra\u00e7\u00e3o com os endpoints de autentica\u00e7\u00e3o do backend e cria\u00e7\u00e3o da documenta\u00e7\u00e3o de uso da API. (Respons\u00e1vel: Luan)</li> <li>Desenvolvimento de P\u00e1ginas (Frontend): Implementa\u00e7\u00e3o das p\u00e1ginas Home, Laborat\u00f3rio, EJ e Grupo de Estudos. (Respons\u00e1vel: Jo\u00e3o)</li> <li>Integra\u00e7\u00e3o Frontend-Backend: Trabalho conjunto para conectar as telas de autentica\u00e7\u00e3o do frontend com a API do backend. (Respons\u00e1veis: Matheus e Lucas)</li> <li>Formata\u00e7\u00e3o de Dados: Finaliza\u00e7\u00e3o da formata\u00e7\u00e3o e estrutura\u00e7\u00e3o de 100% dos dados coletados para importa\u00e7\u00e3o no sistema. (Respons\u00e1vel: Tiago)</li> <li>Setup do Docker: Todos os membros da equipe foram instru\u00eddos a instalar o Docker para padronizar o ambiente de desenvolvimento.</li> </ul>"},{"location":"sprints/sprint-4/#documentacao-e-planejamento","title":"Documenta\u00e7\u00e3o e Planejamento","text":"<ul> <li>Diagrama de Entidade e Relacionamento (DER): Cria\u00e7\u00e3o do DER para modelar a estrutura do banco de dados, alinhado com as necessidades do frontend e do backend. (Respons\u00e1vel: Matheus)</li> </ul>"},{"location":"sprints/sprint-4/#status","title":"Status","text":"<p>Integra\u00e7\u00e3o de autentica\u00e7\u00e3o e p\u00e1ginas est\u00e1ticas funcionais.</p> <p>Ao final da Sprint, a autentica\u00e7\u00e3o completa (cadastro/login) estava funcional e as principais p\u00e1ginas de visualiza\u00e7\u00e3o de conte\u00fado foram desenvolvidas, marcando a conclus\u00e3o dos objetivos para a Release 1.</p>"},{"location":"sprints/sprint-5/","title":"Sprint 5","text":""},{"location":"sprints/sprint-5/#o-que-foi-feito","title":"O que foi feito","text":"<p>Seguindo a reuni\u00e3o de prioriza\u00e7\u00e3o do dia 27 de setembro, a Sprint 05 foi focada em duas entregas principais para a Release 0.1.0: a finaliza\u00e7\u00e3o completa da documenta\u00e7\u00e3o no GitHub Pages (MkDocs) e a transforma\u00e7\u00e3o do prot\u00f3tipo de alta fidelidade em uma vers\u00e3o interativa.</p>"},{"location":"sprints/sprint-5/#documentacao-github-pages","title":"Documenta\u00e7\u00e3o (GitHub Pages)","text":"<p>As seguintes se\u00e7\u00f5es da documenta\u00e7\u00e3o foram desenvolvidas e implementadas:</p> <ul> <li>Estilo do MkDocs: Defini\u00e7\u00e3o do tema e estilo visual da documenta\u00e7\u00e3o. (Respons\u00e1vel: Luan)</li> <li>Home Page: Cria\u00e7\u00e3o da p\u00e1gina inicial da documenta\u00e7\u00e3o. (Respons\u00e1vel: Luan)</li> <li>Requisitos: Elabora\u00e7\u00e3o da se\u00e7\u00e3o de requisitos do projeto. (Respons\u00e1vel: Tiago)</li> <li>Arquitetura: Documenta\u00e7\u00e3o da arquitetura de software (frontend e backend). (Respons\u00e1veis: Fujimoto, Matheus, Tiago)</li> <li>Sprints: Cria\u00e7\u00e3o das p\u00e1ginas detalhando o que foi feito em cada Sprint. (Respons\u00e1vel: Matheus)</li> <li>Release: Documenta\u00e7\u00e3o das vers\u00f5es do projeto. (Respons\u00e1vel: Matheus)</li> <li>Open-Source: Elabora\u00e7\u00e3o da se\u00e7\u00e3o sobre como contribuir com o projeto. (Respons\u00e1vel: Luan)</li> <li>Dados: Detalhamento da estrutura e origem dos dados. (Respons\u00e1vel: Tiago)</li> </ul>"},{"location":"sprints/sprint-5/#design-e-planejamento","title":"Design e Planejamento","text":"<ul> <li>Prot\u00f3tipo de Alta Fidelidade Interativo: O prot\u00f3tipo est\u00e1tico no Figma foi transformado em uma vers\u00e3o interativa, permitindo a navega\u00e7\u00e3o entre as telas e a simula\u00e7\u00e3o do fluxo de uso da aplica\u00e7\u00e3o. (Respons\u00e1veis: Maria e Jo\u00e3o)</li> </ul>"},{"location":"sprints/sprint-5/#status","title":"Status","text":"<p>Documenta\u00e7\u00e3o completa e prot\u00f3tipo interativo entregues.</p> <p>A Sprint foi conclu\u00edda com sucesso, finalizando as duas grandes entregas planejadas para a Release 0.1.0 e preparando o projeto para as pr\u00f3ximas etapas de desenvolvimento de funcionalidades.</p>"}]}