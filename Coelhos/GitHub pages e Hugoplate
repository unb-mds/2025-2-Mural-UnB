
# üöÄ GitHub Pages + Hugo

## 1. O que √© GitHub Pages?

O **GitHub Pages** √© basicamente um servidor gr√°tis do GitHub.  
Voc√™ coloca os arquivos do seu site l√° (HTML, CSS, JS) e ele fica online sem voc√™ pagar nada.  

  S√≥ vale pra **site est√°tico** (n√£o pode PHP, banco de dados ou Node).  
√â perfeito para as documenta√ß√µes que faremos

---

### Exemplo r√°pido:
- Criei um reposit√≥rio no GitHub chamado `pages`
- Coloquei um arquivo `index.html` dentro
- Ativei o **GitHub Pages** nas configura√ß√µes do reposit√≥rio
- O site ficou no ar em: https://usuario.github.io/pages/
- Voc√™ pode usar um dom√≠nio pr√≥prio tamb√©m ex: "www.squad6.com" se quiser

Teste que eu fiz : https://luanludry.github.io/teste-github-pages/

### Observa√ß√µes importantes:
- S√≥ roda em site est√°tico
- O reposit√≥rio tem que ter no m√°ximo 1 GB (que √© o suficiente para a documenta√ß√£o)
- Da para usar diversas ferramentas que geram sites est√°ticos mas n√≥s vamos usar o **Hugo**

## O que √© o Hugo?

O Hugo √© um gerador de sites est√°ticos bem r√°pido feito em Go. Voc√™ escreve um Markdown, escolhe o tema e o site ta pronto.
Tem diversos temas prontos que voc√™ pode encontrar aqui [Hugo Themes](https://themes.gohugo.io/)

**Tutorial** https://www.youtube.com/watch?v=rX7VVaEIzPM&ab_channel=%E8%BE%B0%E5%8D%97

## Como criar um site com Hugo + GitHub pages

```bash
sudo apt install hugo
```
Ver se deu certo:
```bash
hugo version
```

---

### Criar o projeto
```bash
hugo new site meu-site
cd meu-site
```

---

### Escolher um tema
```bash
git init
git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke themes/ananke (exemplo de tema)
```

Configura no `hugo.toml`:
```toml
theme = "ananke"
```

---

### Criar um post
```bash
hugo new posts/primeiro-post.md
```

Vai em `content/posts/primeiro-post.md` e troca `draft = true` pra `draft = false`.

---

### Testar no navegador
```bash
hugo server -D
```

Acesse: [http://localhost:1313](http://localhost:1313)

---

### Gerar o site final
```bash
hugo
```

Ele vai criar a pasta `public/` com os arquivos prontos pra publicar.

---

## 4. Colocando no ar com GitHub Pages

### Jeito r√°pido (branch `gh-pages`)
1. Cria um repo no GitHub
2. Vai na pasta `public/`
3. Faz o push:
   ```bash
   git init
   git remote add origin https://github.com/seuusuario/meu-site.git
   git checkout -b gh-pages
   git add .
   git commit -m "deploy"
   git push origin gh-pages --force
   ```
4. No GitHub ‚Üí **Settings ‚Üí Pages** ‚Üí escolhe o branch `gh-pages`.


## Observa√ß√µes importantes
- Acho que seria bom a gente padronizar os temas, existem alguns temas que eles s√£o mais "completos" e s√£o mais dif√≠ceis de ser usados
- A pasta public/ n√£o deve ser comitada no repositorio principal
- o GitHub pages demora uns 3 minutos para ser postado, caso n√£o funcione tenta fazer um novo commit, se isso n√£o funcionar pode falar comigo que eu ajudo :)
- Infelizmente n√£o existe muito conte√∫do em portugu√™s, mas por ser bem simples de ser usado o GPT e outras inteligencias artificiais podem auxiliar bastante

## linkds dos conte√∫dos estudados

- Site do hugo, existem muita coisa interessantes aqui: https://gohugo.io/documentation/
- Essa playlist tem muito conte√∫do para iniciar com o site: https://www.youtube.com/watch?v=0RKpf3rK57I&list=PLbb_NncyMIquNU4pdg6rVW3TuK30Gq9dw&ab_channel=Fireship
- Desse site peguei o passo a passo, inclusive ele √© feito usandoHugo: https://www.testingwithmarie.com/posts/20241126-create-a-static-blog-with-hugo/
- Um v√≠deo do Lempa fazendo o passo a passo de como usar o Hugo com um dos themes mais utilizados: https://youtu.be/MX4yy1dTVYg?si=abOstu-P9trbIxTy

